#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#


# resource bundle for runtime messages
# key consists of: <subpackage>.<class>.<method>.<description>
# <subpackage> - is optional, package under runtime
# <class> - class name
# <method> - method name
# <description> - short description (use _ to represent space)
# all keys should be in lowercase
#
# The message ID for a message in persistence is derived as follows:
# JDO<2_digit_bundle_prefix><1_digit_section_number><2_digit_serial_number>
#
# The 2 digit prefix for this bundle is 79.
# 
# This file is divided into following sections. 
# 1. main compiler class
# 2. error message helper class
# 3. syntax error messages
# 4. semantic error messages
# 5. optimizer
# 6. code generation
# 7. Miscellaneous
#
# When adding a new message:
# 1. Please make sure that you add the message to the end of appropriate section.
# 2. Please add message ID to any user visible message.
# 3. The message ID for the new message = message ID for the last numbered 
#    message in a section + 1.
# 4. Please do not change the message ID for existing messages. These 
#    numbers are potentially mapped to more explanation about the message for 
#    the end user.
#

##############################################################################
#<main compiler class>
# Message ID Range: JDO79000 - JDO79099
#############################################################################

jqlc.jqlc.generic.nocandidateclass=JDO79000: Falta a especifica\u00E7\u00E3o da classe candidata.
jqlc.jqlc.checkcandidates.memorycollection=JDO79001: As consultas em conjuntos n\u00E3o extens\u00EDveis n\u00E3o t\u00EAm suporte.
jqlc.jqlc.checkcandidates.mismatch=JDO79002: O conjunto candidato n\u00E3o coincide com a classe candidata "{0}".
# {0} - name of the compiler pass
LOG_JQLCStartPass=JDO79003: Iniciar JQLC {0}
# {0} - name of the compiler pass
LOG_JQLCDumpTree=JDO79004: \u00C1rvore de dump JQLC {0}
LOG_JQLCReuseRetrieveDesc=JDO79005: JQLC reutiliza o RetrieveDesc no cache.

#############################################################################
#<error message helper class>
#                  it is the last arg for each of them that contains the 
#                  actual message.
#############################################################################
jqlc.errormsg.generic.msg={0}: {1}
jqlc.errormsg.generic.msgcolumn={0} coluna({1}): {2}
jqlc.errormsg.generic.msglinecolumn={0} linha({1}) coluna({2}): {3}

#############################################################################
#<syntax error messages>
# Message ID Range: JDO79100 - JDO79199
#############################################################################

jqlc.parser.syntaxerror=JDO79100: Erro de sintaxe.
jqlc.parser.syntaxerrorattoken=JDO79101: Erro de sintaxe em "{0}".
jqlc.parser.unexpectedtoken=JDO79102: Erro de sintaxe para token inesperado "{0}".
jqlc.parser.unexpectedchar=JDO79103: Erro de sintaxe por caractere inesperado "{0}".
jqlc.parser.expectedfoundchar=JDO79104: Erro de sintaxe por caractere esperado "{0}", encontrado "{1}".
jqlc.parser.unexpectedEOF=JDO79105: Erro de sintaxe por fim inesperado do texto.

#############################################################################
#<semantic error messages>
# Message ID Range: JDO7109200 - JDO79399
#############################################################################

# semantic error messages (unsupported operations)

jqlc.semantic.analysebitwiseexpr.exclusiveorop=JDO79200: Exclusivo ou operador ^ n\u00E3o suportado.
jqlc.semantic.analysebitwiseexpr.integerbitwiseop=JDO79201: Operador bit por bit inteiro {0} n\u00E3o possui suporte.
jqlc.semantic.analysecollectioncall.unsupportedcollectionexpr=JDO79202: Express\u00E3o de conjunto n\u00E3o suportada "{0}".
jqlc.semantic.analysecollectioncall.nonvariable=JDO79203: Vari\u00E1vel esperada - a n\u00E3o vari\u00E1vel cont\u00E9m argumentos que n\u00E3o t\u00EAm suporte.
jqlc.semantic.generic.unsupportedconstraintop=JDO79204: Opera\u00E7\u00E3o n\u00E3o suportada "{0}" para a cl\u00E1usula de restri\u00E7\u00E3o vari\u00E1vel.
jqlc.semantic.candidateclass.nonpc=JDO79205: A classe "{0}" n\u00E3o \u00E9 de capacidade de persist\u00EAncia. Classes candidatas com capacidade de n\u00E3o persist\u00EAncia n\u00E3o t\u00EAm suporte para a consulta.
jqlc.semantic.checkvalidorderingexpr.invalidordering=JDO79206: Express\u00E3o n\u00E3o suportada "{0}" na especifica\u00E7\u00E3o de ordena\u00E7\u00E3o.
jqlc.semantic.checkvalidresultexpr.invalidresult=JDO79207: Express\u00E3o n\u00E3o suportada "{0}" na especifica\u00E7\u00E3o de resultado.

# semantic error messages (user errors)

jqlc.semantic.analysecollectioncall.typemismatch=JDO79208: O tipo de elemento de conjunto "{0}" e o tipo de vari\u00E1vel "{1}" n\u00E3o s\u00E3o compat\u00EDveis.
jqlc.semantic.analysecollectioncall.relationshipexpected=JDO79209: Campo de relacionamento esperado "{0}".
jqlc.semantic.analysedotexpr.classexprexpected=JDO79210: Express\u00E3o do tipo de classe esperada.
jqlc.semantic.analysefieldaccess.nonperistentfield=JDO79211: N\u00E3o \u00E9 poss\u00EDvel acessar um campo n\u00E3o persistente "{0}" da classe com capacidade de persist\u00EAncia "{1}".
jqlc.semantic.analysefieldaccess.nonpublicfield=JDO79212: N\u00E3o \u00E9 poss\u00EDvel acessar um campo n\u00E3o p\u00FAblico "{0}" da classe com capacidade de n\u00E3o persist\u00EAncia "{1}".
jqlc.semantic.analysestaticfieldaccess.staticreference=JDO79213: N\u00E3o \u00E9 poss\u00EDvel fazer uma refer\u00EAncia est\u00E1tica \u00E0 uma vari\u00E1vel n\u00E3o est\u00E1tica "{0}" da classe "{1}".
jqlc.semantic.analysestaticfieldaccess.nonpublicfield=JDO79214: N\u00E3o \u00E9 poss\u00EDvel acessar um campo est\u00E1tico n\u00E3o p\u00FAblico "{0}" da classe "{1}".
jqlc.semantic.analyserelationalexpr.notorderable=JDO79215: Tipo de operando "{0}" de {1} n\u00E3o \u00E9 classific\u00E1vel.
jqlc.semantic.expression.undefined=JDO79216: Express\u00E3o indefinida "{0}".
jqlc.semantic.filter.booleanexpected=JDO79217: Express\u00E3o booliana esperada, a express\u00E3o do filtro tinha o tipo "{0}".
jqlc.semantic.generic.alreadydeclared=JDO79218: "{0}" j\u00E1 declarado como {1}.
jqlc.semantic.generic.arguments.numbermismatch=JDO79219: N\u00FAmero incorreto de argumentos.
jqlc.semantic.generic.arguments.typemismatch=JDO79220: Tipo incompat\u00EDvel de par\u00E2metro real. N\u00E3o \u00E9 poss\u00EDvel converter "{0}" em "{1}".
jqlc.semantic.generic.arguments.invalid=JDO79221: Argumentos inv\u00E1lidos para "{0}".
jqlc.semantic.generic.invalidmethodcall=JDO79222: Chamada inv\u00E1lida de m\u00E9todo.
jqlc.semantic.generic.unknownfield=JDO79223: O campo "{0}" n\u00E3o est\u00E1 definido para a classe "{1}".
jqlc.semantic.generic.unknowntype=JDO79224: Tipo desconhecido "{0}".
jqlc.semantic.identifier.undefined=JDO79225: Identificador indefinido "{0}".
jqlc.semantic.primary.invalidcast=JDO79226: N\u00E3o \u00E9 poss\u00EDvel projetar express\u00E3o do tipo "{0}" para o tipo "{1}".
jqlc.semantic.type.notype=JDO79227: O tipo esperado, "{0}" est\u00E1 definido como {1}.
jqlc.semantic.analyseorderingexpression.notorderable=JDO79228: O tipo "{0}" da express\u00E3o de ordena\u00E7\u00E3o n\u00E3o \u00E9 classific\u00E1vel.
jqlc.semantic.checkvalidresultexpr.invalidavgsumexpr=JDO79229: O tipo "{0}" de "{1}" express\u00E3o agregada n\u00E3o \u00E9 um n\u00FAmero ou tipo de caractere.
jqlc.semantic.checkvalidresultexpr.invalidminmaxexpr=JDO79230: O tipo "{0}" de "{1}" da express\u00E3o de ordena\u00E7\u00E3o n\u00E3o \u00E9 classific\u00E1vel.
jqlc.semantic.checkresultordering.invalidorderingfordistinctresultfield=JDO79231: A express\u00E3o de campo de resultado distinto "{0}" e a express\u00E3o de ordena\u00E7\u00E3o "{1}" n\u00E3o s\u00E3o compat\u00EDveis. Elas precisam ser o mesmo campo.
jqlc.semantic.checkresultordering.invalidorderingfordistinctresult=JDO79232: A express\u00E3o de resultado "distinto" "{0}" e a express\u00E3o de ordena\u00E7\u00E3o "{1}" n\u00E3o s\u00E3o compat\u00EDveis. Elas devem ser campos na mesma classe utilizando a mesma express\u00E3o de navega\u00E7\u00E3o para a classe.

# query parameter table

jqlc.parametertable.checkunboundparams.unboundparam=JDO79233: Par\u00E2metro n\u00E3o vinculado de consulta "{0}".
jqlc.parametertable.definevaluebyname.undefinedparam=JDO79234: Par\u00E2metro n\u00E3o definido de consulta "{0}".
jqlc.parametertable.definevaluebyindex.wrongnumberofargs=JDO79235: N\u00FAmero incorreto de argumentos.
jqlc.parametertable.definevaluebyindex.typemismatch=JDO79236: Tipo incompat\u00EDvel de par\u00E2metro real. N\u00E3o \u00E9 poss\u00EDvel converter "{0}" em "{1}".

#############################################################################
#<optimizer>
# Message ID Range: JDO79400 - JDO79499
#############################################################################

jqlc.optimizer.staticfieldaccess.illegal=JDO79400: N\u00E3o \u00E9 poss\u00EDvel acessar um campo est\u00E1tico "{0}" da classe "{1}".
jqlc.optimizer.literal.invalid=JDO79401: Literal {0} inv\u00E1lido "{1}".

#############################################################################
#<code generation>
# Message ID Range: JDO79500 - JDO79599
#############################################################################

jqlc.codegeneration.fieldaccess.illegal=JDO79500: N\u00E3o \u00E9 poss\u00EDvel acessar o campo "{0}" do objeto "{1}".
jqlc.codegeneration.collectioncomparison.nonnull=JDO79501: A compara\u00E7\u00E3o n\u00E3o tem suporte de conjunto com valor n\u00E3o nulo.
jqlc.codegeneration.generic.unsupportedop=JDO79502: A opera\u00E7\u00E3o n\u00E3o tem suporte "{0}"
jqlc.codegeneration.substring.beginnegative=JDO79503: O \u00EDndice inicial "{0}" do m\u00E9todo de substring \u00E9 negativo.
jqlc.codegeneration.substring.beginlargerend=JDO79504: O \u00EDndice inicial "{0}" do m\u00E9todo de substring \u00E9 maior que o \u00EDndice final "{1}".
jqlc.codegeneration.resultExpr.missingpkfields=JDO79505: a express\u00E3o COUNT n\u00E3o \u00E9 suportada. O tipo de express\u00E3o "{0}" \u00E9 uma classe com capacidade de persist\u00EAncia sem campos de chave prim\u00E1ria.

#############################################################################
#<Miscellaneous>
# Message ID Range: JDO79600 - JDO79699
#############################################################################
# {0} - RetrieveDesc info
LOG_JQLCDumpRD=JDO79600: Dump JQLC de RetrieveDesc {0}

# variable table

jqlc.variabletable.markconstraint.multiple=JDO79601: M\u00FAltiplas restri\u00E7\u00F5es para a vari\u00E1vel "{0}".
jqlc.variabletable.checkconstraint.unused=JDO79602: Vari\u00E1vel "{0}" definida mas n\u00E3o utilizada.
jqlc.variabletable.checkconstraint.cycle=JDO79603: A defini\u00E7\u00E3o de restri\u00E7\u00E3o c\u00EDclica n\u00E3o tem suporte para a vari\u00E1vel "{0}".
jqlc.variabletable.merge.different=JDO79604: Diferentes constraints para a mesma vari\u00E1vel "{0}".


###############################################################################
# <NOI18N: These messages are used for JDOFatalInternalException. These are not
# for end user. There is no message ID.>
###############################################################################
#
# <NOI18N>
#
jqlc.jqlc.checkcandidates.nullpc=A classe de persist\u00EAncia compat\u00EDvel do Conjunto de extens\u00E3o \u00E9 nula.

jqlc.parser.invalidunicodestr=JQLLexer.UNICODE_STR 

jqlc.parametertable.getvaluebyname.undefined=ParameterTable.getValueByName: par\u00E2metro indefinido {0}.
jqlc.parametertable.getvaluebyindex.wrongindex=ParameterTable.getValueByIndex: \u00EDndice incorreto {0}.
jqlc.parametertable.definevaluebyindex.wrongindex=ParameterTable.defineValueByIndex: \u00EDndice incorreto {0}.

jqlc.semantic.checkcandidateclass.unknowntype=Semantic.checkCandidateClass: tipo desconhecido {0}.
jqlc.semantic.analysedefinedidentifier.illegalident=Semantic.analyseDefinedIdentifier: defini\u00E7\u00E3o ilegal do identificador {0}.
jqlc.semantic.getcollectionfield.missingchildren=Semantic.getCollectionField: filhos inv\u00E1lidos da estrutura de n\u00F3 ausentes.

jqlc.optimizer.checkbinaryplusop.invalidtype=Optimizer.checkBinaryPlusOp: tipo inv\u00E1lido {0}.
jqlc.optimizer.checkbinaryminusop.invalidtype=Optimizer.checkBinaryMinusOp: tipo inv\u00E1lido {0}.
jqlc.optimizer.checkmultiplicationop.invalidtype=Optimizer.checkMultiplicationOp: tipo inv\u00E1lido {0}.
jqlc.optimizer.checkdivisionop.invalidtype=Optimizer.checkDivisionOp: tipo inv\u00E1lido {0}.
jqlc.optimizer.checkmodop.invalidtype=Optimizer.checkModOp: tipo inv\u00E1lido {0}.
jqlc.optimizer.checkunaryminusop.invalidtype=Optimizer.checkUnaryMinusOp: tipo inv\u00E1lido {0}.
jqlc.optimizer.getbigdecimalvalue.notnumber=Optimizer.getBigDecimalValue: valor num\u00E9rico esperado {0}.
jqlc.optimizer.getbigintegervalue.notnumber=Optimizer.getBigIntegerValue: valor num\u00E9rico esperado {0}.
jqlc.optimizer.isempty.requirecollection=Optimizer.isEmpty: exige valor de conjunto.

jqlc.codegeneration.generatesimplefieldvaluecomparison.invalidvalue=CodeGeneration.generateSimpleFieldValueComparison: valor nulo inv\u00E1lido na opera\u00E7\u00E3o relacional.
jqlc.codegeneration.generateparametervaluecomparison.invalidvalue=CodeGeneration.generateParameterValueComparison: valor nulo inv\u00E1lido na opera\u00E7\u00E3o relacional.
jqlc.codegeneration.getkeyfieldscomparisonbooleanop.invalidobj=CodeGeneration.getKeyFieldsComparisonBooleanOp: opera\u00E7\u00E3o de compara\u00E7\u00E3o do objeto inv\u00E1lida {0}.
jqlc.codegeneration.filter.nonbooleanvalue=CodeGeneration.filter: valor n\u00E3o booliano inv\u00E1lido {0}.
jqlc.codegeneration.primary.null=CodeGeneration.primary: valor nulo inv\u00E1lido.

jqlc.variabletable.markused.varnotfound=Vari\u00E1vel VariableTable.markUsed {0} n\u00E3o encontrada.
jqlc.variabletable.markused.multidep=Depend\u00EAncias m\u00FAltiplas VariableTable.markUsed para a vari\u00E1vel {0} antiga: {1}, nova: {2}.
jqlc.variabletable.markconstraint.varnotfound=Vari\u00E1vel VariableTable.markConstraint n\u00E3o encontrada {0} .

jqlc.jdoqlparameterdeclarationparser.next.wrongtoken=ParameterDeclarationHelper.ParameterTypeIterator.next: tipo de token incorreto {0} esperado do n\u00F3 PARAMETER_DEF.

jqlc.queryvaluefetcher.getvalue.invalidparam=O array do par\u00E2metro do \u00EDndice de par\u00E2metro inv\u00E1lido {0} tem o tamanho {1}.
