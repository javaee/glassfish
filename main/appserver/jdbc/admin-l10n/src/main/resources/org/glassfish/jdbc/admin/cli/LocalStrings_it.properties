#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

add.resources=Il comando add-resources crea le risorse denominate nel file XML specificato. xml_file_path corrisponde al percorso del file XML contenente le risorse da creare. Il DOCTYPE deve essere specificato come nel file resources.xml.
add.resources.target=Specifica la destinazione per cui vengono create le risorse.
add.resources.xml_file_name=Percorso del file XML contenente la risorsa o le risorse da creare. Il file XML deve risiedere nella directory <dir-installazione>/domains/domain1/config. Se si specifica un percorso relativo o semplicemente si indica il nome del file XML, questo comando far\u00E0 precedere l'operando da <dir-installazione>/domains/domain1/config.
add.resources.noJdbcConnectionPoolId=Nessun nome di pool definito per il connection pool JDBC.
add.resources.noDataSourceClassname=Nessun nome classe origine dati definito per il connection pool JDBC.
create.jdbc.resource=Crea una risorsa JDBC con il nome JNDI specificato.
create.jdbc.resource.connectionpoolid=Nome del connection pool JDBC. Se due o pi\u00F9 elementi risorsa JDBC puntano allo stesso elemento connection pool, utilizzano la stessa connessione del pool in fase di esecuzione.
create.jdbc.resource.description=Testo in cui vengono forniti dettagli descrittivi sulla risorsa JDBC.
create.jdbc.resource.jndi_name=Nome JNDI della risorsa JDBC.
create.jdbc.resource.enabled=Determina se la risorsa JDBC \u00E8 abilitata in fase di esecuzione. Il valore predefinito \u00E8 true.
create.jdbc.resource.success=Creazione della risorsa JDBC {0} riuscita.
create.jdbc.resource.duplicate=Una risorsa denominata {0} esiste gi\u00E0.
create.jdbc.resource.fail=Comando create-jdbc-resource non riuscito.
create.jdbc.resource.connPoolNotFound=Valore di attributo (pool-name = {0}) non trovato nella lista di connection pool JDBC.
delete.jdbc.resource=Rimuove una risorsa JDBC con il nome JNDI specificato.
delete.jdbc.resource.jdbc_resource_name=Nome JNDI della risorsa JDBC da rimuovere.
delete.jdbc.resource.success=Esecuzione del comando ete-jdbc-resource riuscita.
delete.jdbc.resource.fail=Comando create-jdbc-resource non riuscito.
delete.jdbc.resource.notfound=Una risorsa JDBC denominata {0} non esiste.
delete.jdbc.resource.resource-ref.exist=Alla risorsa JDBC [{0}] si fa riferimento in una destinazione di istanza/cluster. Usare delete-resource-ref sulla destinazione appropriata.
delete.jdbc.resource.multiple.resource-refs=Alla risorsa JDBC [{0}] si fa riferimento in pi\u00F9 destinazioni di istanza/cluster. Usare delete-resource-ref sulla destinazione appropriata.
delete.jdbc.resource.no.resource-ref=Alla risorsa JDBC [ {0} ] non si fa riferimento nella destinazione [ {1} ]
delete.jdbc.resource.system-all-req.object-type=Impossibile eliminare la risorsa [ {0} ] poich\u00E9 ne \u00E8 richiesta la configurazione nel sistema.
list.jdbc.resources=Elenca tutte le risorse JDBC.
list.jdbc.resources.success=Esecuzione del comando list-jdbc-resources riuscita.
list.jdbc.resources.fail=Comando list-jdbc-resources non riuscito.
list.jdbc.resources.empty=Nessun elemento da elencare.

create.jdbc.connection.pool=Registra il connection pool JDBC.
create.jdbc.connection.pool.datasourceClassname=Nome del Resource Manager dell'origine dati JDBC specificato dal fornitore.
create.jdbc.connection.pool.resType=Interfaccia implementata dalla classe dell'origine dati. Deve essere javax.sql.DataSource, javax.sql.ConnectionPoolDataSource o javax.sql.XADataSource. Causa un errore se l'opzione contiene un valore valido e l'interfaccia indicata non \u00E8 implementata dalla classe dell'origine dati. Per l'opzione non \u00E8 previsto un valore predefinito.
create.jdbc.connection.pool.steadyPoolSize=Numero minimo e iniziale di connessioni mantenute nel pool. Il valore predefinito \u00E8 8.
create.jdbc.connection.pool.maxPoolSize=Numero massimo di connessioni che \u00E8 possibile creare. Il valore predefinito \u00E8 32.
create.jdbc.connection.pool.maxWait=Tempo di attesa del chiamante prima dell'invio di un timeout di connessione. Il valore predefinito \u00E8 60 secondi. Il valore 0 indica che il chiamante pu\u00F2 restare in attesa a tempo indeterminato.
create.jdbc.connection.pool.poolResize=Incremento o decremento che il pool adotter\u00E0 per il numero di connessioni. Incremento: quando il pool non ha connessioni libere, aumenta il numero di questa quantit\u00E0. Decremento: tutte le connessioni non valide e inattive vengono rimosse, a volte comportando la rimozione di un numero di connessioni maggiore di questo valore. La dimensione del pool verr\u00E0 mantenuta costante. I valori possibili sono compresi tra 0 e MAX_INTEGER. Il valore predefinito \u00E8 2.
create.jdbc.connection.pool.idleTimeout=Durata massima, in secondi, dell'inattivit\u00E0 di una connessione nel pool. Dopo questo periodo l'implementazione pu\u00F2 chiudere la connessione. Il valore di questo timeout deve essere pi\u00F9 breve del valore di timeout lato server in modo da impedire l'accumulo di connessioni non utilizzabili nell'applicazione. Il valore predefinito \u00E8 300.
create.jdbc.connection.pool.initSql=Usato per specificare una stringa SQL da parte dell'utente, da eseguire ogni volta che viene creata una connessione dal pool (escludendo le connessioni che vengono riutilizzate). L'esecuzione consente di inizializzare lo stato della connessione. Attributo facoltativo che deve avere un valore quando deve essere eseguito un comando SQL di inizializzazione.
create.jdbc.connection.pool.isolationLevel=Livello di isolamento della transazione nelle connessioni di database del pool. Per l'opzione non \u00E8 previsto un valore predefinito. Se tale opzione non viene specificata, il pool funziona con il livello di isolamento predefinito fornito dal driver JDBC. \u00C8 possibile impostare il livello di isolamento delle transazioni desiderato tra quelli standard: read-uncommitted, read-committed, repeatable-read, serializable. Le applicazioni che cambiano livello di isolamento per una connessione del pool a livello di programmazione rischiano di alterare il pool stesso e questo pu\u00F2 causare errori di programma.
create.jdbc.connection.pool.isIsolationGuaranteed=Applicabile solo quando viene specificato un determinato livello di isolamento per transaction-isolation-level. Il valore predefinito \u00E8 true. Questa opzione garantisce che il livello di isolamento venga impostato sul valore desiderato ogni volta che si ottiene una connessione dal pool. Ci\u00F2 pu\u00F2 incidere sulle prestazioni di alcuni driver JDBC. Gli amministratori possono impostare questa opzione su false quando l'applicazione non cambia --isolationlevel prima di restituire la connessione.
create.jdbc.connection.pool.isConnectValidatereq=Se si imposta su true, le connessioni vengono convalidate o verificate per stabilire se sono utilizzabili prima di essere fornite all'applicazione. Il valore predefinito \u00E8 false.
create.jdbc.connection.pool.validationMethod=Nome della tabella di convalida utilizzata per eseguire una query per convalidare una connessione. Le impostazioni valide sono: auto-commit, meta-data o table. Il valore predefinito \u00E8 auto-commit.
create.jdbc.connection.pool.validationTable=Nome della tabella di convalida utilizzata per eseguire una query per convalidare una connessione.
create.jdbc.connection.pool.failConnection=Se si imposta su true, tutte le connessioni del pool devono essere chiuse quando un singolo controllo di convalida ha esito negativo. Il valore predefinito \u00E8 false. Viene effettuato un tentativo di ristabilire le connessioni non riuscite.
create.jdbc.connection.pool.allowNonComponentCallers=Un pool in cui la propriet\u00E0 \u00E8 impostata su true pu\u00F2 essere utilizzato da componenti non J2EE, ovvero da componenti diversi da EJB e servlet. La connessione restituita viene integrata automaticamente nel contesto di transazione ottenuto dal Transaction Manager. 
create.jdbc.connection.pool.nonTransactionalConnections=Un pool con questa propriet\u00E0 impostata su true restituisce connessioni non transazionali. Tale connessione non viene integrata automaticamente nel Transaction Manager.
create.jdbc.connection.pool.validateAtMostOncePeriod=Utilizzato per impostare l'intervallo di tempo entro il quale una connessione viene convalidata al massimo una volta. Il valore predefinito \u00E8 0, che indica che non \u00E8 abilitato.
create.jdbc.connection.pool.leakTimeout=Per aiutare l'utente a rilevare possibili perdite di connessione da parte dell'applicazione. Quando una connessione non viene restituita al pool dall'applicazione entro il periodo specificato, si presume che sia una potenziale perdita e viene registrato uno stack trace del chiamante. Il valore predefinito \u00E8 0, che implica l'assenza di rilevamento di perdite per impostazione predefinita. Un valore positivo diverso da zero attiva il rilevamento delle perdite. Si noti tuttavia che questo attributo consente solo di rilevare se \u00E8 presente una perdita di connessione. La connessione pu\u00F2 essere recuperata solo se connection-leak-reclaim \u00E8 impostato su true.
create.jdbc.connection.pool.leakReclaim=Se abilitato, la connessione \u00E8 riutilizzabile (reinserita nel pool) dopo il verificarsi di connection-leak-timeout-in-seconds. Il valore predefinito \u00E8 false.
create.jdbc.connection.pool.creationRetryAttempts=Il numero di tentativi per la creazione di una nuova connessione. Il valore predefinito \u00E8 0, che implica l'assenza di nuovi tentativi.
create.jdbc.connection.pool.creationRetryInterval=L'intervallo di tempo tra tentativi durante il tentativo di creare una connessione. Il valore predefinito \u00E8 10 secondi. Attivo quando connection-creation-retry-attempts \u00E8 maggiore di 0.
create.jdbc.connection.pool.statementTimeout=Consente di impostare la propriet\u00E0 di timeout di una connessione per abilitare l'interruzione di query di durata anomala. Il valore predefinito di -1 implica che la propriet\u00E0 non \u00E8 abilitata.
create.jdbc.connection.pool.lazyConnectionEnlistment=Inserire una risorsa nella transazione solo quando viene effettivamente utilizzata in un metodo, in modo da evitare la partecipazione alla transazione delle connessioni non utilizzate. Ci\u00F2 evita inoltre l'impegno non necessario di connessioni nella cache nei componenti chiamanti. Il valore predefinito \u00E8 false.
create.jdbc.connection.pool.lazyConnectionAssociation=Le connessioni vengono associate in modo ritardato quando vi si esegue un'operazione. Ne viene inoltre annullata l'associazione quando la transazione \u00E8 completa e un metodo di un componente termina, in modo da facilitare il riutilizzo delle connessioni fisiche. Il valore predefinito \u00E8 false.
create.jdbc.connection.pool.associateWithThread=Associare la connessione o le connessioni a un thread in modo tale che, quando occorre una connessione, lo stesso thread possa riutilizzare le connessioni gi\u00E0 associate, senza necessit\u00E0 di ottenere una connessione dal pool. Il valore predefinito \u00E8 false (vedere anche associate-with-thread-connections-count).
create.jdbc.connection.pool.associateWithThreadConnectionsCount=Numero massimo di connessioni da associare a un thread. Il valore predefinito \u00E8 1. Effettivo solo quando associate-with-thread \u00E8 impostato su true.
create.jdbc.connection.pool.driverClassname=Nome della classe di driver JDBC specificata dal fornitore. Il driver specificato deve implementare l'interfaccia java.sql.Driver.
create.jdbc.connection.pool.matchConnections=Consente di attivare/disattivare la corrispondenza delle connessioni per il pool. Pu\u00F2 essere impostato su false se l'amministratore sa che le connessioni del pool saranno sempre omogenee e che quindi non \u00E8 necessario che una connessione selezionata dal pool debba essere abbinata dal Resource Adapter. Il valore predefinito \u00E8 false.
create.jdbc.connection.pool.maxConnectionUsageCount=Se specificato, le connessioni vengono riutilizzate dal pool per il numero di volte specificato, dopo di che viene chiuso. Ci\u00F2 \u00E8 utile ad esempio per evitare perdite di istruzioni. Il valore predefinito \u00E8 0, che implica che la funzione non \u00E8 abilitata.
create.jdbc.connection.pool.ping=Un pool con questo attributo impostato su true riceve un ping durante la creazione o riconfigurazione del pool per identificare e segnalare eventuali valori errati per i relativi attributi. Il valore predefinito di questo attributo \u00E8 false.
create.jdbc.connection.pool.pooling=Se viene impostato su false, questo attributo disabilita la funzione di connection pooling. Il valore predefinito \u00E8 true.
create.jdbc.connection.pool.sqlTraceListeners=Usato per impostare il trace delle istruzioni SQL eseguite dalle applicazioni. \u00C8 di ausilio agli amministratori per l'analisi delle istruzioni. \u00C8 possibile specificare pi\u00F9 listener come lista di valori separati da virgole di nomi di classi di implementazione di listener.
create.jdbc.connection.pool.statementCachesize=Utilizzato per impostare il numero di istruzioni da inserire nella cache mediante il meccanismo di inserimento nella cache predefinito (Utilizzato meno di recente). Il valore predefinito di 0 implica che l'inserimento delle istruzioni nella cache non \u00E8 abilitato.
create.jdbc.connection.pool.wrapJdbcObjects=Se impostato su true, l'applicazione ottiene oggetti JDBC sottoposti a wrapping per Statement, PreparedStatement, CallableStatement, ResultSet, DatabaseMetaData. Il valore predefinito \u00E8 true.
create.jdbc.connection.pool.validationClassname=Utilizzato per impostare il nome della classe di implementazione di convalida personalizzata implementato dall'utente. Questo parametro \u00E8 obbligatorio se connection-validation-type \u00E8 impostato su custom-validation. Il nome della classe fornito deve essere accessibile all'application server.
create.jdbc.connection.pool.description=Testo in cui vengono forniti dettagli relativi al connection pool JDBC specificato.
create.jdbc.connection.pool.property=Coppie di nome/valore di attributo facoltative per la configurazione del connection pool.
create.jdbc.connection.pool.jdbc_connection_pool_id=Nome del connection pool JDBC da creare.
create.jdbc.connection.pool.success=Creazione del connection pool JDBC {0} riuscita.
create.jdbc.connection.pool.fail=Creazione del connection pool JDBC {0} non riuscita. {1}
create.jdbc.connection.pool.duplicate=Una risorsa denominata {0} esiste gi\u00E0.
create.jdbc.connection.pool.validationtable_required=--validationtable \u00E8 necessario se --validationmethod=table e --isconnectvalidatereq=true.
delete.jdbc.connection.pool=Rimuove il connection pool JDBC specificato.
delete.jdbc.connection.pool.cascade=Se l'opzione viene impostata su true, vengono eliminate tutte le risorse JDBC associate al pool, tranne quest'ultimo. Se l'opzione viene impostata su false, l'eliminazione del pool non riesce se al pool sono associate risorse. Le risorse devono essere eliminate in modo esplicito oppure l'opzione deve essere impostata su true. Per impostazione predefinita, l'opzione \u00E8 false.
delete.jdbc.connection.pool.jdbc_connection_pool_id=Nome della risorsa JDBC da rimuovere.
delete.jdbc.connection.pool.success=Esecuzione del comando delete-jdbc-connection pool riuscita.
delete.jdbc.connection.pool.fail=Comando delete-jdbc-connection-pool non riuscito.
delete.jdbc.connection.pool.notfound=Non esiste un connection pool JDBC denominato {0}.
delete.jdbc.connection.pool.noJndiName=Nessun ID definito per il connection pool JDBC.
delete.jdbc.connection.pool.pool_in_use=Alcune risorse JDBC o risorse factory del Persistence Manager fanno riferimento a questo connection pool. Utilizzare l'opzione 'cascade' per eliminarle.
list.jdbc.connection.pools=Elenca tutti i connection pool JDBC.
list.jdbc.connection.pools.success=Esecuzione del comando list-jdbc-connection-pools riuscita.
list.jdbc.connection.pools.fail=Comando list-jdbc-connection-pools non riuscito
list.jdbc.connection.pools.empty=Nessun elemento da elencare.
ping.create.jdbc.connection.pool.fail=Tentativo non riuscito di eseguire il ping durante la creazione del connection pool JDBC: {0}.
ping.create.jdbc.connection.pool.success=Tentativo riuscito di eseguire il ping durante la creazione del connection pool JDBC: {0}.
