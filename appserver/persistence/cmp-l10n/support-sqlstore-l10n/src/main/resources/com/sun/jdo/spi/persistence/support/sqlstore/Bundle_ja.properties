#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# Resource bundle for sqlstore runtime messages
# key consists of: <subpackage>.<class>.<method>.<description>
# <subpackage> - is optional, package under runtime
# <class> - class name
# <method> - method name
# <description> - short description (use _ to represent space)
# all keys should be in lowercase
#
# Please note that many package names and classnames have changed over time.
# Unfortunately, this file was not maintained to follow above convention.
# Please ignore if the package/class name does not match actual names as today.
#
#
# The message ID for a message in persistence is derived as follows:
# JDO<2_digit_bundle_prefix><1_digit_section_number><2_digit_serial_number>
#
# The 2 digit prefix for this bundle is 76.
#
# This file is divided into the following sections:
# Under each section, messages that need not be I18Ned are separated under NOI18N. All other messages
# need to be numbered.
# 1. JDO:  PersistenceManagerFactory/PersistenceManager/ExtentCollection/LifeCycle
# 2. Model
# 3. StateManager
# 4. sql generator components: RetrieveDesc, ResultDesc plus all the files under generator subdir
# 5. SQLStoreManager
# 6. Connection/Connectionpool/Transaction/DBVendorType
# 7. EJB integration.
# 8. Generic messages.
#
# When adding a new message:
# 1. Please make sure that you add the message to the end of appropriate section.
# 2. Please add message ID to any user visible message.
# 3. The message ID for the new message = message ID for the last numbered
#    message in a section + 1.
# 4. Please do not change the message ID for existing messages. These
#    numbers are potentially mapped to more explanation about the message for
#    the end user.
#

####################################################################################################
# <All the source files under subdir impl (PersistenceManagerFactory/PersistenceManager etc.) >
# Message ID Range: JDO76000 - JDO76099
####################################################################################################
jdo.persistencemanagerfactoryimpl.getpersistencemanager.error=JDO76000: \u540C\u3058\u30C8\u30E9\u30F3\u30B6\u30AF\u30B7\u30E7\u30F3\u3067\u30E6\u30FC\u30B6\u30FC\u540D\u3068\u30D1\u30B9\u30EF\u30FC\u30C9\u306E\u8907\u6570\u306E\u7D44\u5408\u305B\u3092\u4F7F\u7528\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
jdo.persistencemanagerfactoryimpl.getpersistencemanager.notconfigured=JDO76001: PersistenceManagerFactory\u304C\u69CB\u6210\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002
jdo.persistencemanagerfactoryimpl.notsupported=JDO76002: \u5185\u90E8PersistenceManagerFactoryImpl\u306B\u5BFE\u3059\u308B\u64CD\u4F5C\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093\u3002
jdo.persistencemanagerimpl.acquireexclusivelock.interrupted=JDO76003: InterruptedException\u306B\u3088\u308A\u3001\u6392\u4ED6\u7684\u30ED\u30C3\u30AF\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F
jdo.persistencemanagerimpl.acquiresharelock.failed=JDO76004: _readWriteCount\u304C\u30BC\u30ED\u672A\u6E80\u3067\u3042\u308B\u305F\u3081\u3001\u5171\u6709\u30ED\u30C3\u30AF\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F
jdo.persistencemanagerimpl.acquiresharelock.interrupted=JDO76005: InterruptedException\u306B\u3088\u308A\u3001\u5171\u6709\u30ED\u30C3\u30AF\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F
jdo.persistencemanagerimpl.another_pm=JDO76006: \u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u306F\u5225\u306EPersistenceManager\u3068\u95A2\u9023\u4ED8\u3051\u3089\u308C\u3066\u3044\u307E\u3059\u3002
jdo.persistencemanagerimpl.assertactivetransaction.error=JDO76007: \u3053\u306E\u6C38\u7D9A\u6027\u30DE\u30CD\u30FC\u30B8\u30E3\u306B\u95A2\u9023\u4ED8\u3051\u3089\u308C\u3066\u3044\u308B\u30C8\u30E9\u30F3\u30B6\u30AF\u30B7\u30E7\u30F3\u306F\u6709\u52B9\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
jdo.persistencemanagerimpl.assertclosed.closed=JDO76008: PersistenceManager\u306F\u9589\u3058\u3089\u308C\u3066\u3044\u307E\u3059\u3002
jdo.persistencemanagerimpl.assertpersistencecapable.error=JDO76009: \u30AF\u30E9\u30B9{0}\u306F\u900F\u904E\u7684\u6C38\u7D9A\u6027\u7528\u306B\u62E1\u5F35\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002\u5B9F\u884C\u524D\u306BIDE\u306EJAR\u307E\u305F\u306FWAR\u30D1\u30C3\u30B1\u30FC\u30B8\u30E3\u3092\u4F7F\u7528\u3057\u3066\u3001\u6C38\u7D9A\u53EF\u80FD\u30AF\u30E9\u30B9\u3092\u30D1\u30C3\u30B1\u30FC\u30B8\u5316\u3057\u3066\u304F\u3060\u3055\u3044\u3002\u307E\u305F\u306F\u3001\u30E1\u30A4\u30F3\u30FB\u30AF\u30E9\u30B9\u306EExecutor\u30D7\u30ED\u30D1\u30C6\u30A3\u3092Persistence Executor\u306B\u8A2D\u5B9A\u3057\u3001IDE\u304B\u3089\u5B9F\u884C\u3057\u3066\u304F\u3060\u3055\u3044\u3002
jdo.persistencemanagerimpl.close.activetransaction=JDO76010: \u3053\u306E\u6C38\u7D9A\u6027\u30DE\u30CD\u30FC\u30B8\u30E3\u306B\u95A2\u9023\u4ED8\u3051\u3089\u308C\u3066\u3044\u308B\u30AA\u30FC\u30D7\u30F3\u30FB\u30C8\u30E9\u30F3\u30B6\u30AF\u30B7\u30E7\u30F3\u304C\u3042\u308A\u307E\u3059\u3002
jdo.persistencemanagerimpl.fetchinstance.none=JDO76012: \u3053\u306EObjectId\u306E\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u898B\u3064\u304B\u308A\u307E\u305B\u3093\u3002
jdo.persistencemanagerimpl.internaldeletepersistent.transient=JDO76014: \u6C38\u7D9A\u7684\u3067\u306A\u3044\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3092\u524A\u9664\u3067\u304D\u307E\u305B\u3093\u3002
jdo.persistencemanagerimpl.internalmakepersistent.dups=JDO76015: \u540C\u3058\u4E3B\u30AD\u30FC\u3092\u6301\u3064\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u304C\u3001\u3059\u3067\u306B\u3053\u306EPersistenceManager\u30AD\u30E3\u30C3\u30B7\u30E5\u306B\u5B58\u5728\u3057\u307E\u3059\u3002
jdo.persistencemanagerimpl.loadclassforoid.wrongoidclass=JDO76016: OID\u304B\u3089\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8Class\u3092\u53D6\u5F97\u3059\u308B\u3068\u304D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002
jdo.persistencemanagerimpl.newscoinstance.wrongclass=JDO76017: \u578B\u304C\u6709\u52B9\u3067\u306A\u3044\u305F\u3081\u3001\u30AF\u30E9\u30B9{0}\u306ESCO\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u3092\u4F5C\u6210\u3067\u304D\u307E\u305B\u3093\u3002
jdo.persistencemanagerimpl.notprocessed=JDO76018: \u5FAA\u74B0\u4F9D\u5B58\u306B\u3088\u308A\u3001\u6C38\u7D9A\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u3092\u30D5\u30E9\u30C3\u30B7\u30E5\u3067\u304D\u307E\u305B\u3093\u3002
jdo.persistencemanagerimpl.releaseexclusivelock.failed=JDO76019: _readWriteCount\u304C\u30BC\u30ED\u3088\u308A\u5927\u304D\u3044\u305F\u3081\u3001\u6392\u4ED6\u7684\u30ED\u30C3\u30AF\u306E\u89E3\u653E\u306B\u5931\u6557\u3057\u307E\u3057\u305F
jdo.persistencemanagerimpl.releasesharelock.failed=JDO76020: _readWriteCount\u304C\u30BC\u30ED\u3067\u3042\u308B\u305F\u3081\u3001\u5171\u6709\u30ED\u30C3\u30AF\u306E\u89E3\u653E\u306B\u5931\u6557\u3057\u307E\u3057\u305F
jdo.persistencemanagerwrapper.invalidpm=JDO76021: PersistenceManagerWrapper\u306F\u9589\u3058\u3066\u3044\u307E\u3059\u3002
jdo.extentcollection.constructor.invalidclass=JDO76022: extent\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u3067\u306F{0}\u306F\u7121\u52B9\u306A\u30AF\u30E9\u30B9\u3067\u3059\u3002
jdo.extentcollection.constructor.nonpc=JDO76023: \u30AF\u30E9\u30B9{0}\u306F\u6C38\u7D9A\u53EF\u80FD\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
jdo.extentcollection.constructor.subclasses=JDO76024: extent\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u3067\u306F\u3001\u30AA\u30D7\u30B7\u30E7\u30F3\u30FB\u30B5\u30D6\u30AF\u30E9\u30B9true\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093\u3002
jdo.extentcollection.illegalmodification=JDO76025: \u30AF\u30E9\u30B9{0}\u306Eextent\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u306E\u5909\u66F4\u304C\u7121\u52B9\u3067\u3059\u3002
jdo.extentcollection.methodnotsupported=JDO76026: extent\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u306E\u30E1\u30BD\u30C3\u30C9{0}\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093\u3002
jdo.lifecycle.xactnotactive=JDO76027: \u3053\u306E\u64CD\u4F5C\u3092\u5B9F\u884C\u3059\u308B\u306B\u306F\u3001\u30A2\u30AF\u30C6\u30A3\u30D6\u30FB\u30C8\u30E9\u30F3\u30B6\u30AF\u30B7\u30E7\u30F3\u304C\u5FC5\u8981\u3067\u3059\u3002
jdo.persistencemanagerimpl.newinstance.badsm=JDO76028: StateManager\u306E\u69CB\u6210\u304C\u4E0D\u5B8C\u5168\u3067\u3059\u3002
jdo.persistencemanagerimpl.setjtatransaction.notnulljta=JDO76029: null\u4EE5\u5916\u306Ejavax.transaction.Transaction {0}\u3092{1}\u306B\u7F6E\u63DB\u3057\u3088\u3046\u3068\u3057\u307E\u3057\u305F\u3002
jdo.persistencemanagerfactoryimpl.getpersistencemgr.closed=JDO76030: \u3053\u306Ejavax.transaction.Transaction\u306EPersistenceManager {0}\u306F\u3001\u3059\u3067\u306B\u9589\u3058\u3089\u308C\u3066\u3044\u308B\u3001\u307E\u305F\u306F\u30B3\u30DF\u30C3\u30C8\u3057\u3066\u3044\u307E\u3059\u3002
jdo.persistencemanagerfactoryimpl.registerpm.registered=JDO76031: \u3053\u306Ejavax.transaction.Transaction\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9{0}\u306F\u3001\u3059\u3067\u306B\u5225\u306EPersistenceManager {1}\u3067\u767B\u9332\u3055\u308C\u3066\u3044\u307E\u3059\u3002
jdo.persistencemanagerimpl.verificationfailed=JDO76032: \u30D0\u30FC\u30B8\u30E7\u30F3\u6574\u5408\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u304C\u3001\u30C7\u30FC\u30BF\u30FB\u30B9\u30C8\u30A2\u3068\u306E\u691C\u8A3C\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002
jdo.persistencemanagerfactoryimpl.getversionconsistencycache.nullstore=JDO76033: StoreManager\u304C\u69CB\u6210\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002

#
# <NOI18N: LifeCycle>
#
sqlstore.state.lifecyclestate.changestate=LifeCycleState.changeState(), old state = {0}, new state = {1}.
sqlstore.state.lifecyclestate.initial=LifeCycleState.getLifeCycleState(), initial state = {0}.

#
# <NOI18N: PersistenceManager>
#
sqlstore.persistencemgr.acquireexclusivelock.count=acquireExclusiveLock(), thread {0} with _readWriteCount = {1}.
sqlstore.persistencemgr.acquireexclusivelock=acquireExclusiveock(), thread {0} going to wait.
sqlstore.persistencemgr.acquiresharedlock.rdwrcount=acquireShareLock(), thread {0} acquired shared lock with _readWriteCount ={1}.
sqlstore.persistencemgr.acquiresharedlock=acquireShareLock(), thread {0} going to wait.
sqlstore.persistencemgr.aftercompletion.process=---PersistenceManagerImpl.afterCompletion() process: {0}.
sqlstore.persistencemgr.aftercompletion=---PersistenceManagerImpl.afterCompletion() abort: {0}.
sqlstore.persistencemgr.assertactivetx.closed=--- PersistenceManagerImpl.assertActiveTransaction: Closed for  {0}.
sqlstore.persistencemgr.assertactivetx=--- PersistenceManagerImpl.assertActiveTransaction:  {0}.
sqlstore.persistencemgr.assertisopen=--- PersistenceManagerImpl.assertIsOpen: Closed for {0}.
sqlstore.persistencemgr.beforecompletion=---PersistenceManagerImpl.beforeCompletion().
sqlstore.persistencemgr.cacheproperties=PersistenceManagerImpl cache properties: _txCacheInitialCapacity={0}, _flushedCacheInitialCapacity={1}, _flushedCacheLoadFactor={2}, _weakCacheInitialCapacity={3}, _weakCacheLoadFactor={4}.
sqlstore.persistencemgr.deregisterinstance.verified=---PersistenceManagerImpl.deregisterInstance() -- deregistered with verify.
sqlstore.persistencemgr.deregisterinstance.verify=---PersistenceManagerImpl.deregisterInstance() with verify SM -- oid: {0}  for PersistenceManager: {1}  and JTA: {2}.
sqlstore.persistencemgr.deregisterinstance=---PersistenceManagerImpl.deregisterInstance() oid: {0}  for PersistenceManager: {1}  and JTA: {2}.
sqlstore.persistencemgr.getbyobjid=---PersistenceManagerImpl.getObjectById() OID:{0}  for PersistenceManager: {1} and JTA: {2}.
sqlstore.persistencemgr.getcurrentwrapper=---PersistenceManagerImpl.getCurrentWrapper() > current: {0}.
sqlstore.persistencemgr.getobjid.notpc=---PersistenceManagerImpl.getObjectId() NOT PC: {0}  for PersistenceManager: {1}.
sqlstore.persistencemgr.getobjid.notpm=---PersistenceManagerImpl.getObjectId() NOT PM: {0} for PersistenceManager: {1}  and JTA: {2}.
sqlstore.persistencemgr.getobjid= :{0} ---PersistenceManagerImpl.getObjectId() PC: {1} for PersistenceManager: {2} and JTA: {3}.
sqlstore.persistencemgr.internalcloneoid.old=---PersistenceManagerImpl.internalCloneOid(): old: {0}  new: {1} same: {2}.
sqlstore.persistencemgr.internalcloneoid=---PersistenceManagerImpl.internalCloneOid() error: {0}.
sqlstore.persistencemgr.isactivetx=---PersistenceManagerImpl.isActiveTransaction() : {0}.
sqlstore.persistencemgr.isnontxread=---PersistenceManagerImpl.isNontransactionalRead() : {0}.
sqlstore.persistencemgr.isoptimistic=---PersistenceManagerImpl.isOptimisticTransaction() : {0}.
sqlstore.persistencemgr.loadingclass=Loading ... ClassName: {0}.
sqlstore.persistencemgr.loadingfile=Loading ... FileName: {0} {1} {2}.
sqlstore.persistencemgr.makepersistent.done=---PersistenceManagerImpl.makePersistent() {0}  finished for: {1}  and JTA: {2}.
sqlstore.persistencemgr.makepersistent= {0} ---PersistenceManagerImpl.makePersistent() PC: {1} for PersistenceManager: {2} and JTA: {3}.
sqlstore.persistencemgr.newcollection=---PersistenceManagerImpl.newCollectionInstanceInternal() type: {0}.
sqlstore.persistencemgr.popcurrentwrapper=---PersistenceManagerImpl.popCurrentWrapper() > current: {0}  prev: {1}.
sqlstore.persistencemgr.pushcurrentwrapper=---PersistenceManagerImpl.pushCurrentWrapper() > current: {0}  new: {1}.
sqlstore.persistencemgr.registerinstance= {0} ---PersistenceManagerImpl.registerInstance() oid/sm: {1}/{2}  for PersistenceManager: {3}  and JTA: {4}.
sqlstore.persistencemgr.registerinstancein_txc=registerInstance in TXC :{0} / {1} for PersistenceManager: {2} and JTA: {3}.
sqlstore.persistencemgr.registerinstancein_wkc=registerInstance in WKC.
sqlstore.persistencemgr.releaseexclusivelock=releaseExclusiveock(), thread {0} with _readWriteCount = {1}.
sqlstore.persistencemgr.releasesharedlock=releaseShareLock(), thread {0} with _readWriteCount = {1}.
sqlstore.persistencemgr.replacingdeletedinstance=Replacing deleted instance with new for Object Id: {0}.
sqlstore.persistencemgr.setkeyfields=---PersistenceManagerImpl.setKeyFields() error: {0}.
#
# <NOI18N: PersistenceManagerFactory>
#
sqlstore.sqlpersistencemgrfactory.getfrompool.pmt=<--SQLPersistenceManagerFactory.getFromPool() PM: {0} for JTA {1}.
sqlstore.sqlpersistencemgrfactory.getfrompool=<--SQLPersistenceManagerFactory.getFromPool().
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.found= {0} <->SQLPersistenceManagerFactory.getPersistenceManager() found javax.transaction.Transaction: {1}.
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.jdotx.notfound=<->SQLPersistenceManagerFactory.getPersistenceManager() not found JDO Transaction.
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.jdotx=<->SQLPersistenceManagerFactory.getPersistenceManager() JDO Transaction: {0}.
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.pmclosedfor= {0} <->SQLPersistenceManagerFactory.getPersistenceManager() PM is closed for: {1}.
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.pmt= {0} <->SQLPersistenceManagerFactory.getPersistenceManager() : {1} for JTA: {2}.
sqlstore.sqlpersistencemgrfactory.getpersistencemgr=:{0} -->SQLPersistenceManagerFactory.getPersistenceManager().
sqlstore.sqlpersistencemgrfactory.init=---SQLPersistenceManagerFactory.initialize().
sqlstore.sqlpersistencemgrfactory.pmCacheBucketSize=---SQLPersistenceManagerFactory pmCacheBucketSize = {0}.
sqlstore.sqlpersistencemgrfactory.pmCacheInitialCapacity=---SQLPersistenceManagerFactory pmCacheInitialCapacity = {0}.
sqlstore.sqlpersistencemgrfactory.registerpersistencemgr.pmt=<->SQLPersistenceManagerFactory.registerPersistenceManager() PM: {0} for JTA Tx: {1}.
sqlstore.sqlpersistencemgrfactory.releasepm.pmt=---SQLPersistenceManagerFactory.releasePersistenceManager() PM:{0} for JTA Tx: {1}.
sqlstore.sqlpersistencemgrfactory.returnToPool=<--SQLPersistenceManagerFactory.returnToPool().


###############################################################################
# <Model>
# Message ID Range: JDO76100 - JDO76199
###############################################################################
core.configuration.columnnotable=JDO76100: \u5217\u8A18\u8FF0\u5B50\u306B\u6709\u52B9\u306A\u8868\u8A18\u8FF0\u5B50\u304C\u3042\u308A\u307E\u305B\u3093\u3002
core.configuration.fieldnotable=JDO76101: \u30D5\u30A3\u30FC\u30EB\u30C9{0}\u306F\u3069\u306E\u8868\u3068\u3082\u95A2\u9023\u4ED8\u3051\u3089\u308C\u3066\u3044\u307E\u305B\u3093\u3002
core.configuration.fieldnotmapped=JDO76102: \u30AF\u30E9\u30B9{1}\u306E\u6C38\u7D9A\u30D5\u30A3\u30FC\u30EB\u30C9{0}\u306F\u30DE\u30C3\u30D4\u30F3\u30B0\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002
core.configuration.iddescnofield=JDO76103: SqlIDDesc\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u6B63\u3057\u304F\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002\u30D5\u30A3\u30FC\u30EB\u30C9\u8A18\u8FF0\u5B50\u304C\u3042\u308A\u307E\u305B\u3093\u3002
core.configuration.loadfailed.class=JDO76104: \u30AF\u30E9\u30B9{0}\u306E\u69CB\u6210\u3092\u30ED\u30FC\u30C9\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002
core.configuration.noneexistentpkfield=JDO76105: ObjectId\u30AF\u30E9\u30B9{1}\u306E\u30D5\u30A3\u30FC\u30EB\u30C9{0} PersistenceCapable\u30AF\u30E9\u30B9{2}\u306B\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
core.configuration.unsupportedconsistencylevel=JDO76106: \u30AF\u30E9\u30B9{0}\u306B\u306F\u3001\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u306A\u3044\u6574\u5408\u6027\u30EC\u30D9\u30EB\u304C\u3042\u308A\u307E\u3059\u3002\u73FE\u5728\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u3066\u3044\u308B\u6574\u5408\u6027\u30EC\u30D9\u30EB\u306F\u3001"none"\u3001"check-modified-at-commit"\u3001"lock-when-loaded"\u3001"check-version-of-accessed-instances"\u3067\u3059\u3002
core.configuration.validationfailed=JDO76107: \u30AF\u30E9\u30B9{0}\u306B\u5BFE\u3059\u308B\u30DE\u30C3\u30D4\u30F3\u30B0\u304C\u7121\u52B9\u3067\u3059:\n{1}\u3002
core.configuration.validationproblem=JDO76108: \u30AF\u30E9\u30B9{0}\u3067\u691C\u8A3C\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F: {1}
#
# <FieldDesc validation at runtime>
#
core.fielddesc.minvalue=JDO76109: \u5024{0}\u306F\u3001\u30D5\u30A3\u30FC\u30EB\u30C9\u578B{2}\u306E\u8A31\u53EF\u3055\u308C\u308B\u6700\u5C0F\u5024{1}\u3092\u4E0B\u56DE\u3063\u3066\u3044\u307E\u3059\u3002
core.fielddesc.maxvalue=JDO76110: \u5024{0}\u306F\u3001\u30D5\u30A3\u30FC\u30EB\u30C9\u578B{2}\u306E\u8A31\u53EF\u3055\u308C\u308B\u6700\u5927\u5024{1}\u3092\u4E0A\u56DE\u3063\u3066\u3044\u307E\u3059\u3002
core.configuration.noneexistentvcfield=JDO76111: \u30D5\u30A3\u30FC\u30EB\u30C9{0}\u306F\u30D0\u30FC\u30B8\u30E7\u30F3\u30FB\u30D5\u30A3\u30FC\u30EB\u30C9\u3068\u3057\u3066\u306E\u30DE\u30FC\u30AF\u304C\u4ED8\u3051\u3089\u308C\u3066\u3044\u307E\u3059\u304C\u3001\u6C38\u7D9A\u53EF\u80FD\u30AF\u30E9\u30B9{1}\u306B\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
core.configuration.loadfailed.field=JDO76112: \u30AF\u30E9\u30B9{1}\u5185\u306E\u30D5\u30A3\u30FC\u30EB\u30C9{0}\u306E\u69CB\u6210\u3092\u30ED\u30FC\u30C9\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002

#
# <NOI18N: model>
#
sqlstore.model.classdesc.assocrelatedfield=associated relationship field = {0}.
sqlstore.model.classdesc.createsqldesc=creating SqlIDDesc from {0}.
sqlstore.model.classdesc.fieldinfo=field name = {0}, id= {1}.
sqlstore.model.classdesc.general={0}.{1} =>{2}
sqlstore.model.classdesc.getlocalfielddesc=<-> SqlPersistenceDesc.getLocalFieldDesc(), class ={0} added hidden field {1}  for column {2}.
sqlstore.model.classdesc.loadedclass=Successfully loaded oid class= {0}.
sqlstore.model.classdesc.persistconfiginit.exit=<-- SqlPersistenceConfig.initialize().
sqlstore.model.classdesc.persistconfiginit=--> SqlPersistenceConfig.initialize(), class = {0}.
sqlstore.model.classdesc.pkfield=PK field = {0}.
sqlstore.model.classdesc.primarytrackedfield=field {0} is the primary tracked field .
sqlstore.model.classdesc.unsetconcurrencychk=unsetting IN_CONCURRENCY_CHECK property for lf  {0}.
sqlstore.model.classdesc.unsetrefintegrityupdate=unsetting REF_INTEGRITY_UPDATES property for ff {0}.
sqlstore.model.classdesc.vcfield=Version consistency field = {0}.
sqlstore.model.fielddesc.addingfield=adding field {0} to be tracked by field {1}.
sqlstore.model.fielddesc.convertvalue.from_to=convertValue: {0} From: {1} To: {2}.
sqlstore.model.fielddesc.convertvalue.hidden=convertValue: hidden {0} ... return.
sqlstore.model.fielddesc.convertvalue=convertValue: NULL ... return.
sqlstore.model.fielddesc.fieldname={0} = {1}.
sqlstore.model.fielddesc.setupdesc=setupDesc(): fieldName {0} fieldType {1}.
sqlstore.model.configcacheimpl.size_before={0} size before cleanup: {1}.
sqlstore.model.configcacheimpl.size_after={0} size after cleanup: {1}.


###############################################################################
# <StateManager>
# Message ID Range: JDO76200 - JDO76299
###############################################################################
core.statemanager.anotherowner=JDO76200: \u5225\u306E\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u6240\u6709\u3059\u308BSCO\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u3092\u5272\u308A\u5F53\u3066\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
core.statemanager.cantnewoid=JDO76201: \u30AF\u30E9\u30B9{0}\u306E\u65B0\u898F\u4E3B\u30AD\u30FC\u30FB\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u306E\u4F5C\u6210\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002
core.statemanager.cantschedulejointable=JDO76202: \u95A2\u4FC2\u30D5\u30A3\u30FC\u30EB\u30C9\u306E\u8AAC\u660E\u304Cnull\u3067\u3042\u308B\u305F\u3081\u3001\u30AF\u30E9\u30B9{0}\u3068{1}\u306E\u9593\u306E\u7D50\u5408\u8868\u30A8\u30F3\u30C8\u30EA\u306E\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002
core.statemanager.cantsetkeyfield=JDO76203: \u4E3B\u30AD\u30FC\u30FB\u30D5\u30A3\u30FC\u30EB\u30C9{0}\u306E\u5024\u306E\u8A2D\u5B9A\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002
core.statemanager.conflictingvalues=JDO76204: \u30D5\u30A3\u30FC\u30EB\u30C9{0}\u3068\u30D5\u30A3\u30FC\u30EB\u30C9{1}\u306E\u9593\u3067\u885D\u7A81\u3057\u3066\u3044\u308B\u5024\u304C\u540C\u3058\u5217\u306B\u30DE\u30C3\u30D4\u30F3\u30B0\u3055\u308C\u3066\u3044\u307E\u3059
core.statemanager.getfieldfailed=JDO76205: \u30D5\u30A3\u30FC\u30EB\u30C9\u306E\u53D6\u5F97\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002
core.statemanager.invalidpk=JDO76206: \u6C38\u7D9A\u53EF\u80FD\u30AF\u30E9\u30B9{1}\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u3092\u518D\u30ED\u30FC\u30C9\u3059\u308B\u3068\u304D\u306B\u3001\u4E3B\u30AD\u30FC\u30FB\u30D5\u30A3\u30FC\u30EB\u30C9{0}\u304C\u7121\u52B9\u306Anull\u3067\u3057\u305F\u3002\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u306EObjectId\u306F{2}\u3067\u3059\u3002
core.statemanager.nopkupdate=JDO76207: \u4E3B\u30AD\u30FC\u30FB\u30D5\u30A3\u30FC\u30EB\u30C9\u306E\u66F4\u65B0\u306F\u8A31\u53EF\u3055\u308C\u307E\u305B\u3093\u3002
core.statemanager.nopm=JDO76208: \u72B6\u614B\u30DE\u30CD\u30FC\u30B8\u30E3\u306B\u6C38\u7D9A\u6027\u30DE\u30CD\u30FC\u30B8\u30E3\u3078\u306E\u53C2\u7167\u304C\u542B\u307E\u308C\u307E\u305B\u3093\u3002
core.statemanager.notnavigable=JDO76209: \u30AF\u30E9\u30B9{1}\u306E\u30D5\u30A3\u30FC\u30EB\u30C9{0}\u306B\u30A2\u30AF\u30BB\u30B9\u3057\u3088\u3046\u3068\u3057\u307E\u3057\u305F\u3002\u3053\u306E\u30D5\u30A3\u30FC\u30EB\u30C9\u306F\u3053\u308C\u307E\u3067\u306B\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u5316\u3055\u308C\u3066\u304A\u3089\u305A\u3001\u3053\u306E\u30AF\u30E9\u30B9\u306F\u52D5\u7684\u306A\u30CA\u30D3\u30B2\u30FC\u30B7\u30E7\u30F3\u3092\u8A31\u53EF\u3057\u307E\u305B\u3093\u3002\u30AF\u30E9\u30B9\u306E\u53D6\u5F97\u6642\u306B\u30D5\u30A3\u30FC\u30EB\u30C9\u3092\u30EA\u30AF\u30A8\u30B9\u30C8\u3059\u308B\u304B\u3001\u30A2\u30AF\u30BB\u30B9\u6642\u306B\u81EA\u52D5\u7684\u306B\u53D6\u5F97\u3067\u304D\u308B\u3088\u3046\u306B\u52D5\u7684\u306A\u30CA\u30D3\u30B2\u30FC\u30B7\u30E7\u30F3\u3092\u8A31\u53EF\u3057\u3066\u304F\u3060\u3055\u3044\u3002
core.statemanager.objectnotfound=JDO76210: \u30C7\u30FC\u30BF\u30FB\u30B9\u30C8\u30A2\u306B\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u304C\u5B58\u5728\u3057\u307E\u305B\u3093\u3002
core.statemanager.poshiddenindex=JDO76211: \u96A0\u3057\u30D5\u30A3\u30FC\u30EB\u30C9\u3078\u306E\u7D22\u5F15\u306F\u8CA0\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u304C\u3001{0}\u306E\u7D22\u5F15\u304C\u691C\u51FA\u3055\u308C\u307E\u3057\u305F\u3002
core.statemanager.readonly=JDO76212: \u30AF\u30E9\u30B9{1}\u306E\u8AAD\u53D6\u308A\u5C02\u7528\u30D5\u30A3\u30FC\u30EB\u30C9{0}\u3092\u5909\u66F4\u3057\u3088\u3046\u3068\u3057\u307E\u3057\u305F\u3002
core.statemanager.releaselock.wrongthread=JDO76213: \u3053\u306E\u30B9\u30EC\u30C3\u30C9{0}\u306FStateManager\u30ED\u30C3\u30AF\u3092\u4FDD\u6301\u3057\u307E\u305B\u3093\u3002
core.statemanager.setfieldfailed=JDO76214: \u30D5\u30A3\u30FC\u30EB\u30C9\u306E\u8A2D\u5B9A\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002
core.statemanager.wrongusageforoverlappingpkfkdelete=JDO76215: \u7BA1\u7406\u5BFE\u8C61\u95A2\u4FC2\u304B\u3089\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u3092\u9664\u53BB\u3057\u3088\u3046\u3068\u3059\u308B\u7121\u52B9\u306A\u8A66\u307F\u304C\u3042\u308A\u307E\u3057\u305F\u3002\u95A2\u4FC2\u306F\u3001\u3082\u3046\u4E00\u65B9\u306E\u5074\u306E\u4E3B\u30AD\u30FC\u5217\u306B\u3088\u3063\u3066\u5B9A\u7FA9\u3055\u308C\u3066\u3044\u307E\u3059\u3002\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u306B\u5BFE\u3059\u308B\u9664\u53BB\u64CD\u4F5C\u3067\u306F\u3001\u3082\u3046\u4E00\u65B9\u306E\u5074\u306E\u5217\u3092\u66F4\u65B0\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u3001\u4E3B\u30AD\u30FC\u306E\u66F4\u65B0\u306F\u8A31\u53EF\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002\u3053\u306E\u305F\u3081\u3001\u4E3B\u30AD\u30FC\u306B\u3088\u3063\u3066\u5B9A\u7FA9\u3055\u308C\u308B\u7BA1\u7406\u5BFE\u8C61\u95A2\u4FC2\u30B3\u30EC\u30AF\u30B7\u30E7\u30F3\u304B\u3089\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u306E\u9664\u53BB\u306F\u3001\u660E\u793A\u7684\u306A\u3001\u307E\u305F\u306F\u30AB\u30B9\u30B1\u30FC\u30C9\u524A\u9664\u306B\u3088\u308B\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u306E\u9664\u53BB\u306B\u3088\u3063\u3066\u306E\u307F\u884C\u308F\u308C\u307E\u3059\u3002
core.statemanager.toomanyrows=JDO76215: \u30AF\u30E9\u30B9{0}\u306B\u30DE\u30C3\u30D4\u30F3\u30B0\u3055\u308C\u3066\u3044\u308B\u3044\u305A\u308C\u304B\u306E\u8868\u306E\u8907\u6570\u306E\u884C\u304C\u8FD4\u3055\u308C\u307E\u3057\u305F\u3002\u30AF\u30E9\u30B9\u306B\u30DE\u30C3\u30D4\u30F3\u30B0\u3055\u308C\u308B\u5404\u8868\u306F\u3001\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u3054\u3068\u306B1\u3064\u306E\u884C\u306E\u307F\u3092\u6301\u3064\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
core.statemanager.copyFields.mismatch=JDO76216: 1\u3064\u306EStateManager\u304B\u3089\u3001{0}\u3068{1}\u306E\u7570\u306A\u308B\u30BF\u30A4\u30D7\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u3092\u7BA1\u7406\u3059\u308B\u5225\u306EStateManager\u306B\u30D5\u30A3\u30FC\u30EB\u30C9\u3092\u30B3\u30D4\u30FC\u3057\u3088\u3046\u3068\u3057\u307E\u3057\u305F\u3002

#
# <NOI18N: StateManager>
#
sqlstore.sqlstatemanager.adddependency=<-> SQLStateManager.addDependency(), this StateManager: {0}, other StateManager: {1}.
sqlstore.sqlstatemanager.addupdate=<-> SQLStateManager.addUpdatedForeignReference(), lobj={0}, f={1}, fobj={2}, refCount={3}.
sqlstore.sqlstatemanager.applyupdates.exit=<-- SqlStateManager.applyUpdates().
sqlstore.sqlstatemanager.applyupdates=--> SqlStateManager.applyUpdates(), field = {0}.
sqlstore.sqlstatemanager.clearpersistencefields.exit=<--- SqlStateManager.clearPersistenceFields().
sqlstore.sqlstatemanager.clearpersistencefields=--> SqlStateManager.clearPersistenceFields().
sqlstore.sqlstatemanager.copychanges.exit=<-- SQLStateManager.copyChanges().
sqlstore.sqlstatemanager.copychanges=--> SQLStateManager.copyChanges(), state manager = {0}.
sqlstore.sqlstatemanager.deletepersistence=<-> SqlStateManager.deletePersistence(), type = {0}.
sqlstore.sqlstatemanager.getbeforeimage.exit=<-- SqlStateManager.getBeforeImage().
sqlstore.sqlstatemanager.getbeforeimage=--> SqlStateManager.getBeforeImage(), type = {0}.
sqlstore.sqlstatemanager.isbeforeimagerequired=isBeforeImageRequired is : {0}.
sqlstore.sqlstatemanager.loadforread.exit=<-- SQLStateManager.loadForRead().
sqlstore.sqlstatemanager.loadforread=--> SQLStateManager.loadForRead().
sqlstore.sqlstatemanager.loadforupdate.exit=<-- SQLStateManager.loadForUpdate().
sqlstore.sqlstatemanager.loadforupdate=--> SQLStateManager.loadForUpdate().
sqlstore.sqlstatemanager.loggingfield=logging field = {0} with value = {1}.
sqlstore.sqlstatemanager.makedirty.fixscocollection=--- SqlStateManager.makeDirty(), fix SCOCollection.
sqlstore.sqlstatemanager.makedirty.fixscodate=--- SqlStateManager.makeDirty(), fix SCODate.
sqlstore.sqlstatemanager.makedirty=--> SqlStateManager.makeDirty(), field = {0}.
sqlstore.sqlstatemanager.makedirtyfield=Marked dirty field = {0}.
sqlstore.sqlstatemanager.makepersistence=<-> SqlStateManager.makePersistence(), type = {0}.
sqlstore.sqlstatemanager.makepresent=--> SqlStateManager.makePresent(), field = {0}.
sqlstore.sqlstatemanager.marking=marking: {0} as present.
sqlstore.sqlstatemanager.newtype=New Type: {0}.
sqlstore.sqlstatemanager.nosuchmethodexcep.clone=Exception : {0}  clone ... for type {1}.
sqlstore.sqlstatemanager.preparegetfield.exit=<-- SqlStateManager.prepareGetField().
sqlstore.sqlstatemanager.preparegetfield=--> SqlStateManager.prepareGetField(), name = {0}.
sqlstore.sqlstatemanager.preparesetfield.exit=<-- SQLStateManager.prepareSetField().
sqlstore.sqlstatemanager.preparesetfield=--> SQLStateManager.prepareSetField(), name = {0}.
sqlstore.sqlstatemanager.preparetoupdateph1.exit=<-- SqlStateManager.prepareToUpdateI().
sqlstore.sqlstatemanager.preparetoupdateph1=--> SqlStateManager.prepareToUpdatePhaseI(), type = {0}.
sqlstore.sqlstatemanager.preparetoupdateph2.exit=<-- SqlStateManager.prepareToUpdateII().
sqlstore.sqlstatemanager.preparetoupdateph2=--> SqlStateManager.prepareToUpdatePhaseII(), type = {0}.
sqlstore.sqlstatemanager.preparetoupdateph3.exit=<-- SqlStateManager.prepareToUpdateIII().
sqlstore.sqlstatemanager.preparetoupdateph3=--> SqlStateManager.prepareToUpdatePhaseIII(), type = {0}.
sqlstore.sqlstatemanager.prepareupdatefield.exit=<-- SQLStateManager.prepareUpdateField().
sqlstore.sqlstatemanager.prepareupdatefield=--> SQLStateManager.prepareUpdateField(), name = {0} for state: {1}.
sqlstore.sqlstatemanager.prepareupdatefieldspl.exit=<-- SQLStateManager.prepareUpdateFieldSpecial().
sqlstore.sqlstatemanager.prepareupdatefieldspl=--> SQLStateManager.prepareUpdateFieldSpecial, name = {0} for state: {1}.
sqlstore.sqlstatemanager.processcollectionupdate.exit=<-- SQLStateManager.processCollectionUpdates().
sqlstore.sqlstatemanager.processcollectionupdate=--> SQLStateManager.processCollectionUpdates(), beforeList={0}, afterlist={1}.
sqlstore.sqlstatemanager.processforeign=process foreign field ={0}.
sqlstore.sqlstatemanager.processforeignfield.remove=-- SQLStateManager.processForeignField(): was Collection - remove.
sqlstore.sqlstatemanager.processforeignfield.remove_from_bi=-- SQLStateManager.processForeignField(): is SCOCollection - remove from BI.
sqlstore.sqlstatemanager.processforeignfield.reset=-- SQLStateManager.processForeignField(): was SCOCollection - reset.
sqlstore.sqlstatemanager.processforeignfield=-- SQLStateManager.processForeignField(): value: {0} type: {1}.
sqlstore.sqlstatemanager.realizefield.exit=<-- SqlStateManager.realizeField().
sqlstore.sqlstatemanager.realizefield=--> SqlStateManager.realizeField(), name = {0}.
sqlstore.sqlstatemanager.realizeforeignfield.exit=<-- SqlStateManager.realizeField(), field realized = {0}.
sqlstore.sqlstatemanager.realizeforeignfield=--> SqlStateManager.realizeField(), name = {0}.
sqlstore.sqlstatemanager.recordingfield=recording field = {0}.
sqlstore.sqlstatemanager.refreshpersistent.exit=<-- SqlStateManager.refreshPersistent().
sqlstore.sqlstatemanager.refreshpersistent=--> SqlStateManager.refreshPersistence(), type = {0}.
sqlstore.sqlstatemanager.reload.exit=<-- SqlStateManager.reload(FieldDesc)\u3002
sqlstore.sqlstatemanager.reload=--> SqlStateManager.reload(FieldDesc), type = {0}, field = {1}.
sqlstore.sqlstatemanager.removeupdate=<-> SQLStateManager.removeUpdatedForeignReference(), lobj={0}, f={1}, fobj={2}, refCount={3}.
sqlstore.sqlstatemanager.replaceobjectfield.unsetsco=-- SqlStateManager.replaceObjectField(), unset SCO.
sqlstore.sqlstatemanager.replaceobjectfield=-- SqlStateManager.replaceObjectField(), field = {0}, type= {1}.
sqlstore.sqlstatemanager.reset=--> SqlStateManager.reset(), retValues = {0}, wasNew: {1}, keepState: {2}.
sqlstore.sqlstatemanager.resettingcollection=Resetting Collection.
sqlstore.sqlstatemanager.resettingdate=Resetting Date.
sqlstore.sqlstatemanager.resolvedependencies=<-> SQLStateManager.resolveDependencies(), obj={0}.
sqlstore.sqlstatemanager.resolvedependency=<-> SQLStateManager.resolveDependency(), dependency resolved: lobj={0}, f={1}, fobj={2}.
sqlstore.sqlstatemanager.retrieve.exit=<-- SqlStateManager.retrieve().
sqlstore.sqlstatemanager.retrieve=--> SqlStateManager.retrieve(), name = {0}.
sqlstore.sqlstatemanager.retrieveforeign.exit=<-- SqlStateManager.retrieveForeign().
sqlstore.sqlstatemanager.retrieveforeign=--> SqlStateManager.retrieveForeign(), name = {0}.
sqlstore.sqlstatemanager.unsetmask=unsetting masks for field = {0}.
sqlstore.sqlstatemanager.unconditionalreload.exit=<-- SqlStateManager.reload().
sqlstore.sqlstatemanager.unconditionalreload=--> SqlStateManager.reload(), type = {0}.
sqlstore.sqlstatemanager.updatebeforeimage=<-> SQLStateManager.updateBeforeImage(), name = {0}, value = {1}.
sqlstore.sqlstatemanager.updateobjfield.exit=<-- SQLStateManager.updateObjectField().
sqlstore.sqlstatemanager.updateobjfield=--> SQLStateManager.updateObjectField(), name = {0}, type = {1}.
sqlstore.sqlstatemanager.updatepersistent.exit=<-- SqlStateManager.updatePersistent().
sqlstore.sqlstatemanager.updatepersistent.immediateflush=<--> SqlStateManager.updatePersistent(), immediate flush required: obj={0}, next={1}.
sqlstore.sqlstatemanager.updatepersistent.skipped=<--> SqlStateManager.updatePersistent() skipped, type ={0}, obj= {1}.
sqlstore.sqlstatemanager.updatepersistent=--> SqlStateManager.updatePersistent(), type = {0}.
sqlstore.sqlstatemanager.updatetrackedfields.exit=<-- updateTrackedFields().
sqlstore.sqlstatemanager.updatetrackedfields=--> updateTrackedFields(), f = {0} value = {1}  fieldToIgnore = {2}.


###############################################################################
# <sql generator components: All the source files under sql.>
# Message ID Range: JDO76300 - JDO76399
###############################################################################
core.constraint.duporderby=JDO76300: \u5236\u7D04\u306F\u3001"order by"\u5236\u7D04\u306B\u3059\u3067\u306B\u6307\u5B9A\u3055\u308C\u3066\u3044\u308B\u3001\u30D5\u30A3\u30FC\u30EB\u30C9{0}\u306E"order by"\u3067\u3059\u3002
core.constraint.fielddisallowed=JDO76301: fieldName\u30D1\u30E9\u30E1\u30FC\u30BF\u304C\u6307\u5B9A\u3055\u308C\u3066\u3044\u307E\u3059\u304C\u3001\u3053\u308C\u306F\u64CD\u4F5C{0}\u3067\u306F\u8A31\u53EF\u3055\u308C\u307E\u305B\u3093\u3002
core.constraint.fieldrequired=JDO76302: fieldName\u30D1\u30E9\u30E1\u30FC\u30BF\u304C\u3042\u308A\u307E\u305B\u3093\u304C\u3001\u64CD\u4F5C{0}\u3067\u306F\u3053\u306E\u30D5\u30A3\u30FC\u30EB\u30C9\u304C\u5FC5\u8981\u3067\u3059\u3002
core.constraint.illegalParameterInfo=JDO76303: OP_PARAMETER\u306EaddConstraint()\u306F\u3001ParameterInfo\u578B\u306E\u5024\u3067\u547C\u3073\u51FA\u3059\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
core.constraint.illegalnode=JDO76304: SqlConstraint\u30B9\u30BF\u30C3\u30AF\u5185\u306E\u5236\u7D04\u30CE\u30FC\u30C9{0}\u304C\u7121\u52B9\u3067\u3059\u3002
core.constraint.illegalop=JDO76305: \u3053\u306E\u64CD\u4F5C\u30D1\u30E9\u30E1\u30FC\u30BF\u306B\u306F\u7121\u52B9\u306A\u5024{0}\u304C\u542B\u307E\u308C\u307E\u3059\u3002
core.constraint.needfieldnamenode=JDO76306: \u5236\u7D04\u30B9\u30BF\u30C3\u30AF\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002\u30D5\u30A3\u30FC\u30EB\u30C9\u540D\u306F\u60F3\u5B9A\u3055\u308C\u3066\u3044\u307E\u3059\u3002
core.constraint.needfieldnode=JDO76307: \u5236\u7D04\u30B9\u30BF\u30C3\u30AF\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002\u30D5\u30A3\u30FC\u30EB\u30C9\u306E\u8AAC\u660E\u306F\u60F3\u5B9A\u3055\u308C\u3066\u3044\u307E\u3059\u3002
core.constraint.needvalnode=JDO76308: \u5236\u7D04\u30B9\u30BF\u30C3\u30AF\u306B\u30A8\u30E9\u30FC\u304C\u3042\u308A\u307E\u3059\u3002\u5024\u306F\u60F3\u5B9A\u3055\u308C\u3066\u3044\u307E\u3059\u3002
core.constraint.stackempty=JDO76309: \u5236\u7D04\u30B9\u30BF\u30C3\u30AF\u304C\u7A7A\u3067\u3059\u3002\u6F14\u7B97\u5B50\u6570\u306B\u5FC5\u8981\u306A\u5024\u306B\u306F\u4E0D\u8DB3\u3057\u3066\u3044\u307E\u3059\u3002
core.constraint.unknownfield=JDO76310: retrieve\u8A18\u8FF0\u5B50\u306B\u6307\u5B9A\u3055\u308C\u3066\u3044\u308B\u30D5\u30A3\u30FC\u30EB\u30C9{0}\u306F\u30AF\u30E9\u30B9{1}\u306E\u30E1\u30F3\u30D0\u30FC\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002
core.constraint.valdisallowed=JDO76311: value\u30D1\u30E9\u30E1\u30FC\u30BF\u304C\u6307\u5B9A\u3055\u308C\u3066\u3044\u307E\u3059\u304C\u3001\u3053\u308C\u306F\u64CD\u4F5C{0}\u3067\u306F\u8A31\u53EF\u3055\u308C\u307E\u305B\u3093\u3002
core.constraint.valrequired=JDO76312: \u5024\u306E\u30D1\u30E9\u30E1\u30FC\u30BF\u304C\u3042\u308A\u307E\u305B\u3093\u304C\u3001\u64CD\u4F5C{0}\u3067\u306F\u5024\u304C\u5FC5\u8981\u3067\u3059\u3002
sqlstore.resultdesc.errorgettingvalefromresulset=JDO76313: \u7D22\u5F15{0}\u3067\u3001\u7D50\u679C\u30BB\u30C3\u30C8\u304B\u3089\u306EresultType {1}\u3001columnSqlType {2}\u3068\u3057\u3066\u306E\u5024\u306E\u53D6\u5F97\u6642\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002\u4F8B\u5916: {3}
sqlstore.resultdesc.foreignfieldprojection=JDO76314: {0}\u306E\u554F\u5408\u305B\u306F\u95A2\u4FC2\u30D5\u30A3\u30FC\u30EB\u30C9\u306B\u5C55\u958B\u3092\u6301\u3064\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
sqlstore.resultdesc.unknownfieldtype=JDO76317: \u672A\u77E5\u306E\u30D5\u30A3\u30FC\u30EB\u30C9\u578B{0}\u304C\u691C\u51FA\u3055\u308C\u307E\u3057\u305F\u3002
sqlstore.retrievedesc.toomanyprojections=JDO76318: RetrieveDesc\u306B\u8907\u6570\u306E\u5C55\u958B\u3092\u8A2D\u5B9A\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
sqlstore.retrievedesc.toomanyresulttypes=JDO76319: RetrieveDesc\u306B\u8907\u6570\u306E\u7D50\u679C\u578B\u3092\u8A2D\u5B9A\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002
sqlstore.selectstatement.noupdatelocksupport=JDO76320: \u3053\u306E\u554F\u5408\u305B\u306B\u95A2\u9023\u3059\u308B\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u578B\u306E1\u3064\u306B"lock-when-loaded"\u306E\u6574\u5408\u6027\u30EC\u30D9\u30EB\u304C\u8A2D\u5B9A\u3055\u308C\u3066\u3044\u307E\u3059\u3002\u3053\u306E\u6574\u5408\u6027\u30EC\u30D9\u30EB\u3092\u9069\u7528\u3059\u308B\u306B\u306F\u3001\u30C7\u30FC\u30BF\u30FB\u30B9\u30C8\u30A2\u304C\u66F4\u65B0\u306E\u305F\u3081\u306E\u30ED\u30C3\u30AF\u3092\u884C\u30EC\u30D9\u30EB\u3067\u30B5\u30DD\u30FC\u30C8\u3059\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002\u30C7\u30FC\u30BF\u30FB\u30B9\u30C8\u30A2\u306F\u3001\u66F4\u65B0\u306E\u305F\u3081\u306E\u30ED\u30C3\u30AF\u3092\u884C\u30EC\u30D9\u30EB\u3067\u30B5\u30DD\u30FC\u30C8\u3057\u3066\u3044\u307E\u305B\u3093\u3002
sqlstore.sql.generator.statement.likeescapenotsupported=JDO76321: \u3053\u306E\u30C7\u30FC\u30BF\u30D9\u30FC\u30B9\u3067\u306F\u3001LIKE ESCAPE\u53E5\u306F\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u307E\u305B\u3093\u3002
sqlstore.sql.generator.statement.positionthreeargsnotsupported=JDO76322: POSITION\u53E5\u306E3\u756A\u76EE\u306E\u5F15\u6570\u306F1\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
core.configuration.classnotmapped=JDO76323: \u30AF\u30E9\u30B9{0}\u306F\u30DE\u30C3\u30D4\u30F3\u30B0\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002
core.configuration.classnotmappedtotable=JDO76324: \u30AF\u30E9\u30B9{0}\u306F\u8868{1}\u306B\u30DE\u30C3\u30D4\u30F3\u30B0\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002
sqlstore.sql.generator.statement.unexpectedconstraint=JDO76325: \u6F14\u7B97{0}\u306E\u5236\u7D04\u304C\u3001where\u53E5\u306E\u30EB\u30FC\u30C8\u3067\u3042\u308B\u3053\u3068\u306F\u3042\u308A\u307E\u305B\u3093\u3002

# <I18N: sql generator>
# Following messages are used within other messages. They need to be i18ned but need not be numbered.
#
sqlstore.sql.generator.statement.sqlStatement=SQL\u6587
sqlstore.sql.generator.statement.withinputvalues= \u5165\u529B\u5024:
sqlstore.sql.generator.statement.withnoinputvalues= \u5165\u529B\u5024\u304C\u3042\u308A\u307E\u305B\u3093\u3002


#
# <ResultDesc NOI18N>
#
sqlstore.resultdesc.deserializing=deserializing = {0}.
sqlstore.resultdesc.marking_field=marking local field {0} as present.
sqlstore.resultdesc.marking_foreign_field=marking foreign field {0} as present.
sqlstore.resultdesc.marking_key_field=marking key field {0} as present.
sqlstore.resultdesc.returning_field=returning field {0} as projection.
#
# <Misc. SQLStore NOI18N >
#
sqlstore.sql.concurrency.concurrencychkdirty.exit=--> ConcurrencyCheckDirty.update().
sqlstore.sql.concurrency.concurrencychkdirty=--> ConcurrencyCheckDirty.update(), beforeImage = {0}.
sqlstore.sql.concurrencyoptverify.resumetx=<--> ConcurrencyOptVerify.resume(), resumed transaction = {0}.
sqlstore.sql.concurrencyoptverify.suspendtx=<--> ConcurrencyOptVerify.suspend(), suspended transaction = {0}.
sqlstore.sql.concurrencyoptverify.update.exit=<-- ConcurrencyOptVerify.update().
sqlstore.sql.concurrencyoptverify.update=--> ConcurrencyOptVerify.update(), beforeImage = {0}.
sqlstore.sql.generator.dbstatement.addbatch=addbatch ({0})
sqlstore.sql.generator.dbstatement.bindinputcolumn=bindInputColumn index: {0} value: {1} sqlType: {2}.
sqlstore.sql.generator.dbstatement.executebatch=executeBatch executing {0} command(s)
sqlstore.sql.generator.selectqueryplan.processforeignfield.exit=<-- SelectQueryPlan.processForeignFields().
sqlstore.sql.generator.selectqueryplan.processforeignfield=--> SelectQueryPlan.processForeignFields(), class = {0}.
sqlstore.sql.generator.selectqueryplan.processlocalfield.exit=<-- SelectQueryPlan.processLocalFields().
sqlstore.sql.generator.selectqueryplan.processlocalfield=--> SelectQueryPlan.processLocalFields(), class = {0}.
sqlstore.sql.generator.selectqueryplan.processstmts.exit=<-- SelectQueryPlan.processStatements().
sqlstore.sql.generator.selectqueryplan.processstmts=--> SelectQueryPlan.processStatements(), class = {0}, statements = {1}.
sqlstore.sql.updateobjdescimpl.afterimagenull=AfterImage is not set.
sqlstore.sql.updateobjdescimpl.beforeimagenull=BeforeImage is not set.
sqlstore.sql.updateobjdescimpl.markrelationshipchange=<--> UpdateDesc.markRelationshipChange().
sqlstore.sql.updateobjdescimpl.updated={0} is updated.


###############################################################################
# <SQLStoreManager>
# Message ID Range: JDO76400 - JDO76499
###############################################################################
#
# <SQLStoreManager>
#
core.persistencestore.jdbcerror=JDO76400: SQL\u6587\u306E\u5B9F\u884C\u6642\u306BJDBC SQLException\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002\n{0}\u3002\n\u8A73\u7D30\u306FSQLException\u3092\u8ABF\u3079\u3066\u304F\u3060\u3055\u3044\u3002
sqlstore.retrievedesc.stmntsnotjoined=JDO76401: 1\u3064\u306ERetrieveDesc\u306B\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u306A\u3044\u8907\u6570\u306ESQL\u6587\u304C\u3042\u308A\u307E\u3059\u3002
core.persistencestore.toofewrows=JDO76402: \u30AF\u30E9\u30B9{0}\u306E\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3{1}\u306E\u5024\u3092\u53D6\u5F97\u3057\u3088\u3046\u3068\u3057\u305F\u3068\u304D\u306B\u3001\u3053\u306E\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3\u306B\u8A31\u53EF\u3055\u308C\u308B\u30AB\u30FC\u30C7\u30A3\u30CA\u30EA\u30C6\u30A3\u3088\u308A\u3082\u5C11\u306A\u3044\u884C\u304C\u8FD4\u3055\u308C\u307E\u3057\u305F\u3002\u8A31\u5BB9\u3055\u308C\u308B\u6700\u5C0F\u884C\u6570\u306F{2}\u3067\u3059\u3002
core.persistencestore.toomanyobjforcard1=JDO76403: \u30C7\u30FC\u30BF\u30D9\u30FC\u30B9\u3068\u6C38\u7D9A\u30E2\u30C7\u30EB\u306E\u9593\u306B\u6574\u5408\u6027\u304C\u3042\u308A\u307E\u305B\u3093\u3002\u30AF\u30E9\u30B9{0}\u306E\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3{1}\u304C\u53C2\u7167\u3059\u308B\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u3092\u53D6\u5F97\u3057\u3088\u3046\u3068\u3057\u305F\u3068\u3053\u308D\u3001{2}\u30A2\u30A4\u30C6\u30E0\u304C\u53D6\u5F97\u3055\u308C\u307E\u3057\u305F\u3002\u3057\u304B\u3057\u3001\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3\u306E\u30AB\u30FC\u30C7\u30A3\u30CA\u30EA\u30C6\u30A3\u4E0A\u9650\u304C1\u3067\u3042\u308B\u305F\u3081\u3001\u5BFE\u5FDC\u53EF\u80FD\u306A\u30A2\u30A4\u30C6\u30E0\u6570\u306F1\u3064\u306E\u307F\u3067\u3059\u3002
core.persistencestore.toomanyrows=JDO76405: \u30AF\u30E9\u30B9{0}\u306E\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3{1}\u306E\u5024\u3092\u53D6\u5F97\u3057\u3088\u3046\u3068\u3057\u305F\u3068\u304D\u306B\u3001\u3053\u306E\u30A2\u30BD\u30B7\u30A8\u30FC\u30B7\u30E7\u30F3\u306B\u8A31\u53EF\u3055\u308C\u308B\u30AB\u30FC\u30C7\u30A3\u30CA\u30EA\u30C6\u30A3\u3088\u308A\u3082\u591A\u3044\u884C\u304C\u8FD4\u3055\u308C\u307E\u3057\u305F\u3002\u8A31\u5BB9\u3055\u308C\u308B\u6700\u5927\u884C\u6570\u306F{2}\u3067\u3059\u3002
core.store.concurrentaccess=JDO76406: \u4E26\u884C\u30A2\u30AF\u30BB\u30B9\u4F8B\u5916: {0}\u3078\u306E\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u306F\u3001\u5225\u306E\u30C8\u30E9\u30F3\u30B6\u30AF\u30B7\u30E7\u30F3\u306B\u3088\u3063\u3066\u66F4\u65B0\u307E\u305F\u306F\u524A\u9664\u3055\u308C\u307E\u3057\u305F\u3002
sqlstore.sqlstoremanager.errorcloseresultset=JDO76407: SQL\u7D50\u679C\u30BB\u30C3\u30C8\u3092\u9589\u3058\u308B\u3068\u304D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002\u4F8B\u5916: {0}
sqlstore.sqlstoremanager.errorclosestatement=JDO76408: SQL\u6587\u3092\u9589\u3058\u308B\u3068\u304D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002\u4F8B\u5916: {0}
sqlstore.sql.generator.selectqueryplan.plansnotjoined=JDO76409: 1\u3064\u306ERetrieveDesc\u306B\u30B5\u30DD\u30FC\u30C8\u3055\u308C\u306A\u3044\u8907\u6570\u306E\u554F\u5408\u305B\u30D7\u30E9\u30F3\u304C\u3042\u308A\u307E\u3059\u3002

#
# <NOI18N: SQLStoreManager>
#
sqlstore.sqlstoremanager.executeQuery.exit=<-- SQLStoreManager.executeQuery().
sqlstore.sqlstoremanager.executeQuery=--> SQLStoreManager.executeQuery().
sqlstore.sqlstoremanager.executeupdate.exit=<-- SQLStoreManager.executeUpdate(), rows affected = {0}.
sqlstore.sqlstoremanager.executeupdate=--> SQLStoreManager.executeUpdate().
sqlstore.sqlstoremanager.executeupdatebatch.addbatch={0}; add batch.
sqlstore.sqlstoremanager.executeupdatebatch.exit=<-- SQLStoreManager.executeUpdateBatch().
sqlstore.sqlstoremanager.executeupdatebatch.exit.flush=<-- SQLStoreManager.executeUpdateBatch(), rows affected = {0}.
sqlstore.sqlstoremanager.executeupdatebatch.flushbatch={0}; flush batch.
sqlstore.sqlstoremanager.executeupdatebatch=--> SQLStoreManager.executeUpdateBatch().
sqlstore.sqlstoremanager.getpersistenceconfig=<--> SQLStoreManager.getPersistenceConfig(), classType = {0}.
sqlstore.sqlstoremanager.selectnoncorrelated.exit=<-- SQLStoreManager.selectNonCorrelated().
sqlstore.sqlstoremanager.selectnoncorrelated=--> SQLStoreManager.selectNonCorrelated().
sqlstore.sqlstoremanager.vendortype=<--> SQLStoreManager: vendor type = {0}.


###############################################################################
# <Connection/Connectionpool/DBVendorType/TransactionImpl/OracleSpecialDBOperation>
# Message ID Range: JDO76500 - JDO76599
###############################################################################
#
# <Connection/Connection Pool> - database
#
connection.connectionmanager.badnew=JDO76500: \u65B0\u898F''{0}''\u306F\u3001\u73FE\u5728\u306E''{1}''\u4EE5\u4E0A\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
connection.connectionmanager.badvalue=JDO76501: ''{0}''\u306E\u5024\u304C\u7121\u52B9\u3067\u3059\u3002
connection.connectionmanager.conntimeout=JDO76502: \u63A5\u7D9A\u30BF\u30A4\u30E0\u30A2\u30A6\u30C8\u306E\u6709\u52B9\u671F\u9650\u304C\u5207\u308C\u307E\u3057\u305F\u3002
connection.connectionmanager.getconnection.mismatch=JDO76503: \u30D7\u30FC\u30EB\u3055\u308C\u305F\u63A5\u7D9A\u304C\u540C\u3058\u30E6\u30FC\u30B6\u30FC\u30FB\u30B3\u30F3\u30C6\u30AD\u30B9\u30C8\u304C\u3042\u308A\u307E\u305B\u3093\u3002
connection.connectionmanager.isdown=JDO76504: \u63A5\u7D9A\u30DE\u30CD\u30FC\u30B8\u30E3\u304C\u30B7\u30E3\u30C3\u30C8\u30FB\u30C0\u30A6\u30F3\u3055\u308C\u3066\u3044\u307E\u3059\u3002
connection.connectionmanager.maxpool=JDO76505: \u63A5\u7D9A\u30D7\u30FC\u30EB\u304C\u6700\u5927\u3067\u3059\u3002
connection.connectionmanager.msintervalvalue=JDO76506: MsInterval\u306F\u30BC\u30ED\u3088\u308A\u5927\u304D\u304F\u3001MsWait\u4EE5\u4E0B\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
connection.connectionmanager.mswaitvalue=JDO76507: MsWait\u306F\u30BC\u30ED\u4EE5\u4E0A\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
connection.connectionmanager.nulldriver=JDO76508: \u30C9\u30E9\u30A4\u30D0\u540D\u304CNULL\u5024\u3002
connection.connectionmanager.nullurl=JDO76509: URL\u304CNULL\u5024\u3002
connection.connectionmanager.poolsize=JDO76510: maxPool\u306FminPool\u4EE5\u4E0A\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
connection.connectionmanager.threaditerupted=JDO76511: \u30B9\u30EC\u30C3\u30C9\u306F\u4E2D\u65AD\u3055\u308C\u307E\u3057\u305F\u3002
connection.connectionmanager.zero=JDO76512: {0}\u306F\u30BC\u30ED\u4EE5\u4E0A\u3067\u3042\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002
#
# <DBVendorType>
#
sqlstore.database.dbvendor.cantloadDefaultProperties=JDO76513: \u30C7\u30D5\u30A9\u30EB\u30C8\u30FB\u30C7\u30FC\u30BF\u30D9\u30FC\u30B9\u306E\u30D7\u30ED\u30D1\u30C6\u30A3\u3092\u30ED\u30FC\u30C9\u3067\u304D\u307E\u305B\u3093\u3002
sqlstore.database.dbvendor.init.default=JDO76514: -->\u30D9\u30F3\u30C0\u30FC\u30FB\u30BF\u30A4\u30D7{0}\u306E\u30D7\u30ED\u30D1\u30C6\u30A3\u3092\u30ED\u30FC\u30C9\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002\u30C7\u30D5\u30A9\u30EB\u30C8\u304C\u9069\u7528\u3055\u308C\u307E\u3059\u3002
sqlstore.database.dbvendor.cantinstantiateclass=JDO76515: \u30AF\u30E9\u30B9{0}\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u5316\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002
#
# <OracleSpecialDBOperation>
#
sqlstore.database.oracle.defineCol=JDO76516: \u6587\u306E\u5217\u3092\u5B9A\u7FA9\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002
sqlstore.database.oracle.nooracleavailable=JDO76517: Oracle\u30EA\u30BD\u30FC\u30B9\u30FB\u30D5\u30A1\u30AF\u30C8\u30EA{0}\u3092\u521D\u671F\u5316\u3059\u308B\u3068\u304D\u306B\u3001oracle.jdbc.OraclePreparedStatement\u307E\u305F\u306Foracle.jdbc.driver.OraclePreparedStatement\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u3092\u53D6\u5F97\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002Oracle\u5C02\u7528\u306E\u6700\u9069\u5316\u306F\u7121\u52B9\u306B\u306A\u308A\u307E\u3059\u3002\u3053\u306E\u30EA\u30BD\u30FC\u30B9\u3092\u4F7F\u7528\u3059\u308B\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u304CFixed Char\u5217\u306B\u30DE\u30C3\u30D4\u30F3\u30B0\u3055\u308C\u305F\u5217\u306E\u30D0\u30A4\u30F3\u30C7\u30A3\u30F3\u30B0\u5024\u3092\u5FC5\u8981\u3068\u3059\u308B\u5834\u5408\u3001\u5BFE\u5FDC\u3059\u308Bdbschema\u30D5\u30A1\u30A4\u30EB\u306B\u6307\u5B9A\u3055\u308C\u3066\u3044\u308B\u9577\u3055\u306E\u7A7A\u767D\u6587\u5B57\u304C\u633F\u5165\u3055\u308C\u307E\u3059\u3002
sqlstore.database.oracle.fixedcharpadded=JDO76518: \u5024{0}\u306FCHAR\u5217\u306B\u30D0\u30A4\u30F3\u30C9\u3055\u308C\u307E\u3059\u3002\u3053\u306E\u305F\u3081\u3001Oracle\u3067\u306F\u7279\u5225\u306A\u51E6\u7406\u304C\u5FC5\u8981\u3067\u3059\u3002\u30C9\u30E9\u30A4\u30D0\u304B\u3089OraclePreparedStatement\u30AF\u30E9\u30B9\u3092\u53D6\u5F97\u3059\u308B\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002\u5024\u306B\u306F\u3001\u53D6\u308A\u8FBC\u307E\u308C\u305Fdbschema\u30D5\u30A1\u30A4\u30EB\u306B\u6307\u5B9A\u3055\u308C\u3066\u3044\u308B\u9577\u3055{1}\u306E\u7A7A\u767D\u6587\u5B57\u304C\u633F\u5165\u3055\u308C\u307E\u3059\u3002
#
# <Misc.>
#
core.configuration.getvendortypefailed=JDO76519: \u30C7\u30FC\u30BF\u30FB\u30B9\u30C8\u30A2\u306E\u30D9\u30F3\u30C0\u30FC\u30FB\u30BF\u30A4\u30D7\u306E\u8B58\u5225\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002
jdo.sqlpersistencemanagerfactory.errorgettingDatabaseInfo=JDO76520: \u30C7\u30FC\u30BF\u30D9\u30FC\u30B9\u306B\u95A2\u3059\u308B\u60C5\u5831\u3092\u53D6\u5F97\u3059\u308B\u3068\u304D\u306B\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F\u3002\u6B21\u306E\u4F8B\u5916\u3092\u53D6\u5F97\u3057\u307E\u3057\u305F:

#
# <NOI18N: Connection>
#
sqlstore.connection.conncectiomgr.found=<--> ConnectionManager.getConnection: found {0}.
sqlstore.connection.conncectiomgr.getnewconn=<--> ConnectionManager.getConnection: new {0}.
sqlstore.connection.conncectiomgr.replacefreeconn=<--> ConnectionManager.replaceFreeConnection: free {0}.
sqlstore.connectionimpl.clearxact.close=--- ConnectionImpl.clearXact: connection closed .
sqlstore.connectionimpl.clearxact.disassocxact=--- ConnectionImpl.clearXact: disassociateXact .
sqlstore.connectionimpl.clearxact=--- ConnectionImpl.clearXact: .
sqlstore.connectionimpl.close.connrelease=<--- ConnectionImpl.close: connection released.
sqlstore.connectionimpl.close.exit=<--- ConnectionImpl.close: connection closed.
sqlstore.connectionimpl.close.freepending=<--- ConnectionImpl.close: set FreePending.
sqlstore.connectionimpl.close.putfreelist=<--- ConnectionImpl.close: put in freeList.
sqlstore.connectionimpl.close.replaced=<--- ConnectionImpl.close: connection replaced.
sqlstore.connectionimpl.close=---> ConnectionImpl.close.
sqlstore.connectionimpl.close_arg=---> ConnectionImpl.close: {0}.
sqlstore.connectionimpl.commit=--- ConnectionImpl.commit: connection closed.
sqlstore.connectionimpl.finalize=--- ConnectionImpl.finalize: connection closed.
sqlstore.connectionimpl.internalcommit=--- ConnectionImpl.internalCommit: .
sqlstore.connectionimpl.pendingdisassocxact=--- ConnectionImpl.clearXact: Pending disassociateXact.
sqlstore.connectionimpl.rollback.close=--- ConnectionImpl.rollback: connection closed.
sqlstore.connectionimpl.rollback=--- ConnectionImpl.rollback:.
#
# <NOI18N: DBVendorType>
#
sqlstore.database.dbvendor.castRequiredForNumericValues=<-> DBVendorType.isCastRequiredForNumericValues(): {0}.
sqlstore.database.dbvendor.getModFunctionName=<-> DBVendorType.getModFunctionName(): {0}.
sqlstore.database.dbvendor.getNullComparisonFunctionName=<-> DBVendorType.getNullComparisonFunctionName(): {0}.
sqlstore.database.dbvendor.getConcatCast=<-> DBVendorType.getConcatCast(): {0}.
sqlstore.database.dbvendor.getSpecialDBOperation=<-> DBVendorType.getSpecialDBOperation(): {0}.
sqlstore.database.dbvendor.getabs=<-> DBVendorType.getAbs(): {0}.
sqlstore.database.dbvendor.getcharlength=<-> DBVendorType.getCharLength(): {0}.
sqlstore.database.dbvendor.getforupdate=<-> DBVendorType.getForUpdate(): {0}.
sqlstore.database.dbvendor.getholdlock=<-> DBVendorType.getHoldlock(): {0}.
sqlstore.database.dbvendor.getisnotnull=<-> DBVendorType.getIsNotNull(): {0}.
sqlstore.database.dbvendor.getisnull=<-> DBVendorType.getIsNull(): {0}.
sqlstore.database.dbvendor.getleftjoin=<-> DBVendorType.getLeftJoin(): {0}.
sqlstore.database.dbvendor.getleftjoinpost=<-> DBVendorType.getLeftJoinPost(): {0}.
sqlstore.database.dbvendor.getleftlikeescape=<-> DBVendorType.getLeftLikeEscape(): {0}.
sqlstore.database.dbvendor.getnotequal=<-> DBVendorType.getNotEqual(): {0}.
sqlstore.database.dbvendor.getposition3args=<-> DBVendorType.getPositionThreeArrgs(): {0}.
sqlstore.database.dbvendor.getposition=<-> DBVendorType.getPosition(): {0}.
sqlstore.database.dbvendor.getpositionin=<-> DBVendorType.getPositionIn(): {0}.
sqlstore.database.dbvendor.getpositionsrchsrc=<-> DBVendorType.getPositionSearchSource(): {0}.
sqlstore.database.dbvendor.getquotecharstart=<-> DBVendorType.getQuoteCharStart(): {0}.
sqlstore.database.dbvendor.getrightjoinipre=<-> DBVendorType.getRightJoin(): {0}.
sqlstore.database.dbvendor.getrightlikeescape=<-> DBVendorType.getRightLikeEscape(): {0}.
sqlstore.database.dbvendor.getrtrim=<-> DBVendorType.getRtrim(): {0}.
sqlstore.database.dbvendor.getrtrimpost=<-> DBVendorType.getRtrimPost(): {0}.
sqlstore.database.dbvendor.getsqrt=<-> DBVendorType.getSqrt(): {0}.
sqlstore.database.dbvendor.getstringconcat=<-> DBVendorType.getStringConcat(): {0}.
sqlstore.database.dbvendor.getsubstring=<-> DBVendorType.getSubstring(): {0}.
sqlstore.database.dbvendor.getsubstringfor=<-> DBVendorType.getSubstringFor(): {0}.
sqlstore.database.dbvendor.getsubstringfrom=<-> DBVendorType.getSubstringFrom(): {0}.
sqlstore.database.dbvendor.gettablelistend=<-> DBVendorType.getTableListEnd(): {0}.
sqlstore.database.dbvendor.gettableliststart=<-> DBVendorType.getTableListStart(): {0}.
sqlstore.database.dbvendor.isAnsiTrim=<-> DBVendorType.isAnsiTrim(): {0}.
sqlstore.database.dbvendor.isInlineNumeric=<-> DBVendorType.isInlineNumeric(): {0}.
sqlstore.database.dbvendor.isNativeOuterJoin=<-> DBVendorType.isNativeOuterJoin(): {0}.
sqlstore.database.dbvendor.isParameterCast=<-> DBVendorType.isParameterCast(): {0}.
sqlstore.database.dbvendor.isdistinctupdatelocksupported=<-> DBVendorType.isDistinctSupportedWithUpdateLock(): {0}.
sqlstore.database.dbvendor.islockcolumnlistsupported=<-> DBVendorType.isLockColumnListSupported(): {0}.
sqlstore.database.dbvendor.isupdatelocksupported=<-> DBVendorType.isUpdateLockSupported(): {0}.
sqlstore.database.dbvendor.mapemptystrtonull=<-> DBVendorType.mapEmptyStringToNull(): {0}.
sqlstore.database.dbvendor.overrideproperties.with=<-> DBVendorType.overrideProperties() : {0} with: {1}.
sqlstore.database.dbvendor.overrideproperties=<-> DBVendorType.overrideProperties() - NONE.
sqlstore.database.dbvendor.supportslikeescape=<-> DBVendorType.supportsLikeEscape(): {0}.
sqlstore.database.dbvendor.vendorname=<-> DBVendorType(), vendorName: [{0}]  vendorType: {1}.
#
# <NOI18N: TransactionImpl>
#
sqlstore.transactionimpl.call.info={0} Tran[ {1} ].{2}: {3} for  {4}.
sqlstore.transactionimpl.call={0} Tran[ {1} ].{2}:status = {3}, txType: {4} for  {5}.
sqlstore.transactionimpl.closeconnection=--- TransactionImpl.closeConnection() {0} for {1}.
sqlstore.transactionimpl.general={0}.
sqlstore.transactionimpl.getconnection=--- TransactionImpl.getConnection(): {0} TX optimistic: {1} referenceCount = {2} for {3}.
sqlstore.transactionimpl.releaseconnection=--- TransactionImpl.releaseConnection(): TX optimistic: {0} Inside Commit: {1} referenceCount: {2} for {3}.
sqlstore.transactionimpl.rollbackconnection=--- TransactionImpl.rollbackConnection(): {0} for {1}.
sqlstore.transactionimpl.status={0} Tran[ {1} ].setStatus: {2} => {3} for {4}.


###############################################################################
# All the source files under subdir ejb.
# Message ID Range: JDO76600 - JDO76699
###############################################################################
#
#EJBHelper messages
#
# {0} - method name
ejb.ejbhelper.nonmanaged=JDO76600: \u975E\u7BA1\u7406\u5BFE\u8C61\u74B0\u5883\u3067\u306F\u30E1\u30BD\u30C3\u30C9{0}\u3092\u547C\u3073\u51FA\u305B\u307E\u305B\u3093\u3002

#
# Common messages between SunContainerHelper and DeploymentHelper
# so they have a neutral key, that still starts with "ejb".
#
# {0} - jndi name.
ejb.jndi.lookupfailed=JDO76604: cmp-resource ''{0}''\u306EJNDI\u30EB\u30C3\u30AF\u30FB\u30A2\u30C3\u30D7\u306B\u5931\u6557\u3057\u307E\u3057\u305F\u3002
JDO76604.diag.cause.1=\u3053\u306EJNDI\u540D\u3092\u6301\u3064CMP\u30EA\u30BD\u30FC\u30B9\u306F\u3001\u3053\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u306B\u767B\u9332\u3055\u308C\u3066\u3044\u307E\u305B\u3093\u3002
JDO76604.diag.cause.2=CMP\u30EA\u30BD\u30FC\u30B9\u306EJNDI\u540D\u306E\u30B9\u30DA\u30EB\u304C\u6B63\u3057\u304F\u3042\u308A\u307E\u305B\u3093\u3002
JDO76604.diag.check.1=\u4F7F\u7528\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308B\u30EA\u30BD\u30FC\u30B9\u306EJNDI\u540D\u3092\u78BA\u8A8D\u3057\u307E\u3059\u3002
JDO76604.diag.check.2=\u30E2\u30B8\u30E5\u30FC\u30EB\u306B\u6307\u5B9A\u3055\u308C\u3066\u3044\u308BCMP\u30EA\u30BD\u30FC\u30B9\u306EJNDI\u540D\u3092\u78BA\u8A8D\u3057\u307E\u3059\u3002

# {0} - jndi name.
# {1} - returned class name.
ejb.jndi.unexpectedinstance=JDO76605: cmp-resource ''{0}''\u306EJNDI\u30EB\u30C3\u30AF\u30FB\u30A2\u30C3\u30D7\u3067\u3001\u4E88\u671F\u3057\u306A\u3044\u30BF\u30A4\u30D7\u306E\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9{1}\u304C\u8FD4\u3055\u308C\u307E\u3057\u305F\u3002
JDO76605.diag.cause.1=\u3053\u306EJNDI\u540D\u3092\u6301\u3064CMP\u30EA\u30BD\u30FC\u30B9\u306F\u3001jdbc-resource\u307E\u305F\u306Fpersistence-manager-factory-resource\u3092\u53C2\u7167\u3057\u307E\u305B\u3093\u3002
JDO76605.diag.cause.2=CMP\u30EA\u30BD\u30FC\u30B9\u306EJNDI\u540D\u306E\u30B9\u30DA\u30EB\u304C\u6B63\u3057\u304F\u3042\u308A\u307E\u305B\u3093\u3002
JDO76605.diag.check.1=\u4F7F\u7528\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308B\u30EA\u30BD\u30FC\u30B9\u306EJNDI\u540D\u3092\u78BA\u8A8D\u3057\u307E\u3059\u3002
JDO76605.diag.check.2=\u30E2\u30B8\u30E5\u30FC\u30EB\u306B\u6307\u5B9A\u3055\u308C\u3066\u3044\u308BCMP\u30EA\u30BD\u30FC\u30B9\u306EJNDI\u540D\u3092\u78BA\u8A8D\u3057\u307E\u3059\u3002

#
# DeploymentHelper messages - ejb
#
#
#<NOI18N: DeploymentHelper>
#
ejb.DeploymentHelper.getconnection=Getting connection for JNDI name ''{0}''.

# The messages JDO76606 through JDO76615 that were originally here 
# have been moved to 
# cmp/support/ejb/src/com/sun/jdo/spi/persistence/support/ejb/ejbc/Bundle.properties
# As part of INF#
# So do not use these messages. 


#
#CMPHelper messages
#
ejb.cmphelper.nonmanaged=JDO76613: CMPHelper\u306E\u30A2\u30AF\u30BB\u30B9\u306F\u7121\u52B9\u3067\u3059\u3002\u3053\u306E\u30AF\u30E9\u30B9\u306FCMP\u306E\u30B5\u30DD\u30FC\u30C8\u306E\u307F\u306B\u4F7F\u7528\u3055\u308C\u3001\u30A2\u30D7\u30EA\u30B1\u30FC\u30B7\u30E7\u30F3\u30FB\u30B5\u30FC\u30D0\u30FC\u306E\u5916\u3067\u547C\u3073\u51FA\u3059\u3053\u3068\u306F\u3067\u304D\u307E\u305B\u3093\u3002

#
#SunTransactionHelper messages
#

# {0} class name
ejb.SunTransactionHelper.wrongdatasourcetype=JDO76616: \u30C7\u30FC\u30BF\u30BD\u30FC\u30B9\u306E\u30BF\u30A4\u30D7\u304C\u4E88\u671F\u3057\u305F\u30BF\u30A4\u30D7\u3067\u306F\u3042\u308A\u307E\u305B\u3093\u3002\u4E88\u671F\u3055\u308C\u308B\u30BF\u30A4\u30D7: com.sun.appserv.jdbc.DataSource got: {0}\u3002


###############################################################################
# <Generic messages. Add new messages to this section only if none of the above categories can be used.>
###############################################################################
#
# <NOI18N: generic>
#
vendor=Sun Microsystems
# majorVersion (minorVersion) buildDate
fullVersion={0} ({1}) {2}
#
# <NOI18N: This messages are used for JDOFatalInternalException from multiple places. No need to I18N>
#
core.generic.unknownfield=The field {0} is not a member of the class {1}.
core.generic.unknownexception=Got an unknown exception.
core.generic.nullparam=The {0} parameter is null.
core.generic.notinstanceof=The object of class {0} is not an instance of {1}.


###############################################################################
# <These messages are used from multiple places in code.It is absolutely necessary to cleanup code
# to use different messages >
###############################################################################
core.configuration.cantloadclass=\u30AF\u30E9\u30B9{0}\u3092\u30ED\u30FC\u30C9\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002
sqlstore.exception.log=\u4F8B\u5916\u3002
jdo.lifecycle.deleted.accessField=\u524A\u9664\u3055\u308C\u305F\u30A4\u30F3\u30B9\u30BF\u30F3\u30B9\u306E\u30D5\u30A3\u30FC\u30EB\u30C9\u306B\u30A2\u30AF\u30BB\u30B9\u3067\u304D\u307E\u305B\u3093\u3002
