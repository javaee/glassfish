#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# Resource bundle for sqlstore runtime messages
# key consists of: <subpackage>.<class>.<method>.<description>
# <subpackage> - is optional, package under runtime
# <class> - class name
# <method> - method name
# <description> - short description (use _ to represent space)
# all keys should be in lowercase
#
# Please note that many package names and classnames have changed over time.
# Unfortunately, this file was not maintained to follow above convention.
# Please ignore if the package/class name does not match actual names as today.
#
#
# The message ID for a message in persistence is derived as follows:
# JDO<2_digit_bundle_prefix><1_digit_section_number><2_digit_serial_number>
#
# The 2 digit prefix for this bundle is 76.
#
# This file is divided into the following sections:
# Under each section, messages that need not be I18Ned are separated under NOI18N. All other messages
# need to be numbered.
# 1. JDO:  PersistenceManagerFactory/PersistenceManager/ExtentCollection/LifeCycle
# 2. Model
# 3. StateManager
# 4. sql generator components: RetrieveDesc, ResultDesc plus all the files under generator subdir
# 5. SQLStoreManager
# 6. Connection/Connectionpool/Transaction/DBVendorType
# 7. EJB integration.
# 8. Generic messages.
#
# When adding a new message:
# 1. Please make sure that you add the message to the end of appropriate section.
# 2. Please add message ID to any user visible message.
# 3. The message ID for the new message = message ID for the last numbered
#    message in a section + 1.
# 4. Please do not change the message ID for existing messages. These
#    numbers are potentially mapped to more explanation about the message for
#    the end user.
#

####################################################################################################
# <All the source files under subdir impl (PersistenceManagerFactory/PersistenceManager etc.) >
# Message ID Range: JDO76000 - JDO76099
####################################################################################################
jdo.persistencemanagerfactoryimpl.getpersistencemanager.error=JDO76000\uFF1A\u7121\u6CD5\u5728\u540C\u4E00\u4F5C\u696D\u4E8B\u4EF6\u4E2D\u4F7F\u7528\u4F7F\u7528\u8005\u540D\u7A31/\u5BC6\u78BC\u7684\u591A\u91CD\u7D44\u5408\u3002
jdo.persistencemanagerfactoryimpl.getpersistencemanager.notconfigured=JDO76001\uFF1A\u672A\u7D44\u614B PersistenceManagerFactory\u3002
jdo.persistencemanagerfactoryimpl.notsupported=JDO76002\uFF1A\u4E0D\u652F\u63F4\u91DD\u5C0D\u5167\u90E8 PersistenceManagerFactoryImpl \u9032\u884C\u6B64\u4F5C\u696D\u3002
jdo.persistencemanagerimpl.acquireexclusivelock.interrupted=JDO76003\uFF1A\u7531\u65BC InterruptedException\uFF0C\u7121\u6CD5\u53D6\u5F97\u5C08\u7528\u9396\u5B9A
jdo.persistencemanagerimpl.acquiresharelock.failed=JDO76004\uFF1A\u7531\u65BC _readWriteCount \u5C0F\u65BC\u96F6\uFF0C\u7121\u6CD5\u53D6\u5F97\u5171\u7528\u9396\u5B9A
jdo.persistencemanagerimpl.acquiresharelock.interrupted=JDO76005\uFF1A\u7531\u65BC InterruptedException\uFF0C\u7121\u6CD5\u53D6\u5F97\u5171\u7528\u9396\u5B9A
jdo.persistencemanagerimpl.another_pm=JDO76006\uFF1A\u7269\u4EF6\u8207\u53E6\u4E00\u500B PersistenceManager \u76F8\u95DC\u806F\u3002
jdo.persistencemanagerimpl.assertactivetransaction.error=JDO76007\uFF1A\u8207\u6B64\u6301\u7E8C\u6027\u7BA1\u7406\u7A0B\u5F0F\u95DC\u806F\u7684\u4F5C\u696D\u4E8B\u4EF6\u4E0D\u5728\u4F7F\u7528\u4E2D\u3002
jdo.persistencemanagerimpl.assertclosed.closed=JDO76008\uFF1APersistenceManager \u5DF2\u95DC\u9589\u3002
jdo.persistencemanagerimpl.assertpersistencecapable.error=JDO76009\uFF1A\u672A\u91DD\u5C0D\u4E0D\u9700\u8A2D\u5B9A\u7684\u6301\u7E8C\u6027\u589E\u5F37\u985E\u5225 {0}\u3002\u4F7F\u7528 IDE \u7684 JAR \u6216 WAR \u5C01\u88DD\u7A0B\u5F0F\uFF0C\u4EE5\u5728\u57F7\u884C\u4E4B\u524D\u5C01\u88DD\u5177\u6709\u6301\u7E8C\u6027\u7684\u985E\u5225\u3002\u6216\u8005\uFF0C\u5C07\u4E3B\u985E\u5225\u7684\u57F7\u884C\u7A0B\u5F0F\u7279\u6027\u8A2D\u5B9A\u70BA\u6301\u7E8C\u6027\u57F7\u884C\u7A0B\u5F0F\uFF0C\u4EE5\u5F9E IDE \u57F7\u884C\u3002
jdo.persistencemanagerimpl.close.activetransaction=JDO76010\uFF1A\u6B64\u6301\u7E8C\u6027\u7BA1\u7406\u7A0B\u5F0F\u8207\u4E00\u500B\u958B\u555F\u7684\u4F5C\u696D\u4E8B\u4EF6\u76F8\u95DC\u806F\u3002
jdo.persistencemanagerimpl.fetchinstance.none=JDO76012\uFF1A\u627E\u4E0D\u5230\u6B64 ObjectId \u7684\u7269\u4EF6\u3002
jdo.persistencemanagerimpl.internaldeletepersistent.transient=JDO76014\uFF1A\u7121\u6CD5\u522A\u9664\u975E\u6301\u7E8C\u6027\u7269\u4EF6\u3002
jdo.persistencemanagerimpl.internalmakepersistent.dups=JDO76015\uFF1A\u5177\u6709\u76F8\u540C\u4E3B\u9375\u7684\u57F7\u884C\u8655\u7406\u5DF2\u5B58\u5728\u65BC\u6B64 PersistenceManager \u5FEB\u53D6\u4E2D\u3002
jdo.persistencemanagerimpl.loadclassforoid.wrongoidclass=JDO76016\uFF1A\u5F9E OID \u64F7\u53D6\u7269\u4EF6\u985E\u5225\u6642\u767C\u751F\u932F\u8AA4\u3002
jdo.persistencemanagerimpl.newscoinstance.wrongclass=JDO76017\uFF1A\u7531\u65BC\u985E\u5225 {0} \u662F\u7121\u6548\u985E\u578B\uFF0C\u7121\u6CD5\u5EFA\u7ACB\u5176 SCO \u57F7\u884C\u8655\u7406\u3002
jdo.persistencemanagerimpl.notprocessed=JDO76018\uFF1A\u7531\u65BC\u5FAA\u74B0\u76F8\u4F9D\u6027\uFF0C\u7121\u6CD5\u6E05\u9664\u6301\u7E8C\u6027\u57F7\u884C\u8655\u7406\u3002
jdo.persistencemanagerimpl.releaseexclusivelock.failed=JDO76019\uFF1A\u7531\u65BC _readWriteCount \u5927\u65BC\u96F6\uFF0C\u7121\u6CD5\u91CB\u653E\u5C08\u7528\u9396\u5B9A
jdo.persistencemanagerimpl.releasesharelock.failed=JDO76020\uFF1A\u7531\u65BC _readWriteCount \u70BA\u96F6\uFF0C\u7121\u6CD5\u91CB\u653E\u5171\u7528\u9396\u5B9A
jdo.persistencemanagerwrapper.invalidpm=JDO76021\uFF1APersistenceManagerWrapper \u5DF2\u95DC\u9589\u3002
jdo.extentcollection.constructor.invalidclass=JDO76022\uFF1A\u5EF6\u4F38\u96C6\u5408\u7684\u985E\u5225 ''{0}'' \u7121\u6548\u3002
jdo.extentcollection.constructor.nonpc=JDO76023\uFF1A\u985E\u5225 ''{0}'' \u4E0D\u5177\u6709\u6301\u7E8C\u6027\u3002
jdo.extentcollection.constructor.subclasses=JDO76024\uFF1A\u4E0D\u652F\u63F4\u5EF6\u4F38\u96C6\u5408\u7684\u9078\u9805\u5B50\u985E\u5225\u70BA True\u3002
jdo.extentcollection.illegalmodification=JDO76025\uFF1A\u5C0D\u985E\u5225 ''{0}'' \u4E4B\u5EF6\u4F38\u96C6\u5408\u7684\u4FEE\u6539\u975E\u6CD5\u3002
jdo.extentcollection.methodnotsupported=JDO76026\uFF1A\u4E0D\u652F\u63F4\u5EF6\u4F38\u96C6\u5408\u65B9\u6CD5 {0}\u3002
jdo.lifecycle.xactnotactive=JDO76027\uFF1A\u9700\u8981\u4F7F\u7528\u4E2D\u7684\u4F5C\u696D\u4E8B\u4EF6\uFF0C\u4EE5\u57F7\u884C\u6B64\u4F5C\u696D\u3002
jdo.persistencemanagerimpl.newinstance.badsm=JDO76028\uFF1AStateManager \u672A\u5B8C\u5168\u7D44\u614B\uFF01
jdo.persistencemanagerimpl.setjtatransaction.notnulljta=JDO76029\uFF1A\u5617\u8A66\u7528 {1} \u66FF\u4EE3\u975E\u7A7A\u7684 javax.transaction.Transaction\uFF1A{0}\u3002
jdo.persistencemanagerfactoryimpl.getpersistencemgr.closed=JDO76030\uFF1A\u6B64 javax.transaction.Transaction \u7684 PersistenceManager\uFF1A{0} \u5DF2\u95DC\u9589\u6216\u6B63\u5728\u78BA\u8A8D\u3002
jdo.persistencemanagerfactoryimpl.registerpm.registered=JDO76031\uFF1Ajavax.transaction.Transaction \u7684\u6B64\u57F7\u884C\u8655\u7406\uFF1A{0} \u5DF2\u4F7F\u7528\u5176\u4ED6 PersistenceManager \u8A3B\u518A\uFF1A{1}\u3002
jdo.persistencemanagerimpl.verificationfailed=JDO76032\uFF1A\u7248\u672C\u4E00\u81F4\u7684\u57F7\u884C\u8655\u7406\u5C0D\u8CC7\u6599\u5B58\u653E\u5340\u7684\u9A57\u8B49\u5931\u6557\u3002
jdo.persistencemanagerfactoryimpl.getversionconsistencycache.nullstore=JDO76033\uFF1A\u672A\u7D44\u614B StoreManager\u3002

#
# <NOI18N: LifeCycle>
#
sqlstore.state.lifecyclestate.changestate=LifeCycleState.changeState()\uFF0C\u820A\u72C0\u614B = {0}\u3001\u65B0\u72C0\u614B = {1}\u3002
sqlstore.state.lifecyclestate.initial=LifeCycleState.getLifeCycleState()\uFF0C\u521D\u59CB\u72C0\u614B = {0}\u3002

#
# <NOI18N: PersistenceManager>
#
sqlstore.persistencemgr.acquireexclusivelock.count=acquireExclusiveLock()\uFF0C\u7E6B\u7DDA {0}\uFF0C_readWriteCount = {1}\u3002
sqlstore.persistencemgr.acquireexclusivelock=acquireExclusiveock()\uFF0C\u7E6B\u7DDA {0} \u5C07\u6703\u7B49\u5F85\u3002
sqlstore.persistencemgr.acquiresharedlock.rdwrcount=acquireShareLock()\uFF0C\u7E6B\u7DDA {0} \u7372\u5F97\u5171\u7528\u9396\u5B9A\uFF0C_readWriteCount ={1}\u3002
sqlstore.persistencemgr.acquiresharedlock=acquireShareLock()\uFF0C\u7E6B\u7DDA {0} \u5C07\u6703\u7B49\u5F85\u3002
sqlstore.persistencemgr.aftercompletion.process=---PersistenceManagerImpl.afterCompletion() \u8655\u7406\u4F5C\u696D\uFF1A{0}\u3002
sqlstore.persistencemgr.aftercompletion=---PersistenceManagerImpl.afterCompletion() \u4E2D\u65B7\uFF1A{0}\u3002
sqlstore.persistencemgr.assertactivetx.closed=--- PersistenceManagerImpl.assertActiveTransaction\uFF1A\u5DF2\u70BA {0} \u95DC\u9589\u3002
sqlstore.persistencemgr.assertactivetx=--- PersistenceManagerImpl.assertActiveTransaction\uFF1A{0}\u3002
sqlstore.persistencemgr.assertisopen=--- PersistenceManagerImpl.assertIsOpen: \u5DF2\u70BA {0} \u95DC\u9589\u3002
sqlstore.persistencemgr.beforecompletion=---PersistenceManagerImpl.beforeCompletion()\u3002
sqlstore.persistencemgr.cacheproperties=PersistenceManagerImpl \u5FEB\u53D6\u7279\u6027\uFF1A_txCacheInitialCapacity={0}\u3001_flushedCacheInitialCapacity={1}\u3001_flushedCacheLoadFactor={2}\u3001_weakCacheInitialCapacity={3}\u3001_weakCacheLoadFactor={4}\u3002
sqlstore.persistencemgr.deregisterinstance.verified=---PersistenceManagerImpl.deregisterInstance() -- \u5DF2\u900F\u904E\u9A57\u8B49\u53D6\u6D88\u8A3B\u518A\u3002
sqlstore.persistencemgr.deregisterinstance.verify=---PersistenceManagerImpl.deregisterInstance() \u900F\u904E\u9A57\u8B49 SM \u53D6\u6D88\u8A3B\u518A -- oid\uFF1A{0}\uFF0CPersistenceManager\uFF1A{1} \u8207 JTA\uFF1A{2}\u3002
sqlstore.persistencemgr.deregisterinstance=---PersistenceManagerImpl.deregisterInstance() oid\uFF1A{0}\uFF0CPersistenceManager\uFF1A{1} \u8207 JTA\uFF1A{2}\u3002
sqlstore.persistencemgr.getbyobjid=---PersistenceManagerImpl.getObjectById() OID\uFF1A{0}\uFF0CPersistenceManager\uFF1A{1} \u8207 JTA\uFF1A{2}\u3002
sqlstore.persistencemgr.getcurrentwrapper=---PersistenceManagerImpl.getCurrentWrapper() > \u76EE\u524D\uFF1A{0}\u3002
sqlstore.persistencemgr.getobjid.notpc=---PersistenceManagerImpl.getObjectId() \u975E PC\uFF1A{0}\uFF0CPersistenceManager\uFF1A{1}\u3002
sqlstore.persistencemgr.getobjid.notpm=---PersistenceManagerImpl.getObjectId() \u975E PM\uFF1A{0}\uFF0CPersistenceManager\uFF1A{1} \u8207 JTA\uFF1A{2}\u3002
sqlstore.persistencemgr.getobjid= \uFF1A{0} ---PersistenceManagerImpl.getObjectId() PC\uFF1A{1}\uFF0CPersistenceManager\uFF1A{2} \u8207 JTA\uFF1A{3}\u3002
sqlstore.persistencemgr.internalcloneoid.old=---PersistenceManagerImpl.internalCloneOid()\uFF1A\u820A\uFF1A{0}\u3001\u65B0\uFF1A{1}\uFF0C\u76F8\u540C\uFF1A{2}\u3002
sqlstore.persistencemgr.internalcloneoid=---PersistenceManagerImpl.internalCloneOid() \u932F\u8AA4\uFF1A{0}\u3002
sqlstore.persistencemgr.isactivetx=---PersistenceManagerImpl.isActiveTransaction() \uFF1A{0}\u3002
sqlstore.persistencemgr.isnontxread=---PersistenceManagerImpl.isNontransactionalRead()\uFF1A{0}\u3002
sqlstore.persistencemgr.isoptimistic=---PersistenceManagerImpl.isOptimisticTransaction()\uFF1A{0}\u3002
sqlstore.persistencemgr.loadingclass=\u6B63\u5728\u8F09\u5165 ... \u985E\u5225\u540D\u7A31\uFF1A{0}\u3002
sqlstore.persistencemgr.loadingfile=\u6B63\u5728\u8F09\u5165 ... \u6A94\u6848\u540D\u7A31\uFF1A{0} {1} {2}\u3002
sqlstore.persistencemgr.makepersistent.done=---PersistenceManagerImpl.makePersistent()  \u5DF2\u91DD\u5C0D\uFF1A{1} \u8207 JTA\uFF1A{2} \u5B8C\u6210 {0}\u3002
sqlstore.persistencemgr.makepersistent= {0} ---PersistenceManagerImpl.makePersistent() PC\uFF1A{1}\uFF0CPersistenceManager\uFF1A{2} \u8207 JTA\uFF1A{3}\u3002
sqlstore.persistencemgr.newcollection=---PersistenceManagerImpl.newCollectionInstanceInternal() \u985E\u578B\uFF1A{0}\u3002
sqlstore.persistencemgr.popcurrentwrapper=---PersistenceManagerImpl.popCurrentWrapper() > \u76EE\u524D\uFF1A{0} \u5148\u524D\uFF1A{1}\u3002
sqlstore.persistencemgr.pushcurrentwrapper=---PersistenceManagerImpl.pushCurrentWrapper() > \u76EE\u524D\uFF1A{0} \u65B0\uFF1A{1}\u3002
sqlstore.persistencemgr.registerinstance= {0} ---PersistenceManagerImpl.registerInstance() oid/sm\uFF1A{1}/{2}\uFF0CPersistenceManager\uFF1A{3} \u8207 JTA\uFF1A{4}\u3002
sqlstore.persistencemgr.registerinstancein_txc=TXC \u4E2D\u7684 registerInstance\uFF1A{0} / {1}\uFF0CPersistenceManager\uFF1A{2} \u8207 JTA\uFF1A{3}\u3002
sqlstore.persistencemgr.registerinstancein_wkc=WKC \u4E2D\u7684 registerInstance\u3002
sqlstore.persistencemgr.releaseexclusivelock=releaseExclusiveock()\uFF0C\u7E6B\u7DDA {0}\uFF0C_readWriteCount = {1}\u3002
sqlstore.persistencemgr.releasesharedlock=releaseShareLock()\uFF0C\u7E6B\u7DDA {0}\uFF0C_readWriteCount = {1}\u3002
sqlstore.persistencemgr.replacingdeletedinstance=\u4EE5\u65B0\u7684\u57F7\u884C\u8655\u7406\u53D6\u4EE3\u522A\u9664\u7684\u57F7\u884C\u8655\u7406\uFF0C\u7269\u4EF6 ID\uFF1A{0}\u3002
sqlstore.persistencemgr.setkeyfields=---PersistenceManagerImpl.setKeyFields() \u932F\u8AA4\uFF1A{0}\u3002
#
# <NOI18N: PersistenceManagerFactory>
#
sqlstore.sqlpersistencemgrfactory.getfrompool.pmt=<--SQLPersistenceManagerFactory.getFromPool() PM\uFF1A{0}\uFF0CJTA {1}\u3002
sqlstore.sqlpersistencemgrfactory.getfrompool=<--SQLPersistenceManagerFactory.getFromPool()\u3002
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.found= {0} <->SQLPersistenceManagerFactory.getPersistenceManager() \u627E\u5230 javax.transaction.Transaction\uFF1A{1}\u3002
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.jdotx.notfound=<->SQLPersistenceManagerFactory.getPersistenceManager() \u627E\u4E0D\u5230 JDO \u4F5C\u696D\u4E8B\u4EF6\u3002
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.jdotx=<->SQLPersistenceManagerFactory.getPersistenceManager() JDO \u4F5C\u696D\u4E8B\u4EF6\uFF1A{0}\u3002
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.pmclosedfor= {0} <->SQLPersistenceManagerFactory.getPersistenceManager() PM \u5DF2\u70BA\uFF1A {1} \u95DC\u9589\u3002
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.pmt= {0} <->SQLPersistenceManagerFactory.getPersistenceManager()\uFF1A{1}\uFF0CJTA\uFF1A{2}\u3002
sqlstore.sqlpersistencemgrfactory.getpersistencemgr=\uFF1A{0} -->SQLPersistenceManagerFactory.getPersistenceManager()\u3002
sqlstore.sqlpersistencemgrfactory.init=---SQLPersistenceManagerFactory.initialize()\u3002
sqlstore.sqlpersistencemgrfactory.pmCacheBucketSize=---SQLPersistenceManagerFactory pmCacheBucketSize = {0}\u3002
sqlstore.sqlpersistencemgrfactory.pmCacheInitialCapacity=---SQLPersistenceManagerFactory pmCacheInitialCapacity = {0}\u3002
sqlstore.sqlpersistencemgrfactory.registerpersistencemgr.pmt=<->SQLPersistenceManagerFactory.registerPersistenceManager() PM\uFF1A{0}\uFF0CJTA Tx\uFF1A{1}\u3002
sqlstore.sqlpersistencemgrfactory.releasepm.pmt=---SQLPersistenceManagerFactory.releasePersistenceManager() PM\uFF1A{0}\uFF0CJTA Tx\uFF1A{1}\u3002
sqlstore.sqlpersistencemgrfactory.returnToPool=<--SQLPersistenceManagerFactory.returnToPool()\u3002


###############################################################################
# <Model>
# Message ID Range: JDO76100 - JDO76199
###############################################################################
core.configuration.columnnotable=JDO76100\uFF1A\u6B04\u63CF\u8FF0\u5143\u7121\u6709\u6548\u7684\u8868\u683C\u63CF\u8FF0\u5143\u3002
core.configuration.fieldnotable=JDO76101\uFF1A\u6B04\u4F4D {0} \u8207\u4EFB\u4F55\u8868\u683C\u5747\u7121\u95DC\u806F\u3002
core.configuration.fieldnotmapped=JDO76102\uFF1A\u672A\u5C0D\u61C9\u985E\u5225 {1} \u7684\u6301\u7E8C\u6027\u6B04\u4F4D {0}\u3002
core.configuration.iddescnofield=JDO76103\uFF1A\u672A\u6B63\u78BA\u8A2D\u5B9A SqlIDDesc \u7269\u4EF6\u3002\u7121\u53EF\u7528\u7684\u6B04\u4F4D\u63CF\u8FF0\u5143\u3002
core.configuration.loadfailed.class=JDO76104\uFF1A\u7121\u6CD5\u8F09\u5165\u985E\u5225 {0} \u7684\u7D44\u614B\u3002
core.configuration.noneexistentpkfield=JDO76105\uFF1AObjectId \u985E\u5225 {1} \u4E2D\u7684\u6B04\u4F4D {0} \u672A\u5B58\u5728\u65BC PersistenceCapable \u985E\u5225 {2} \u4E2D\u3002
core.configuration.unsupportedconsistencylevel=JDO76106\uFF1A\u985E\u5225 {0} \u5177\u6709\u4E0D\u53D7\u652F\u63F4\u7684\u4E00\u81F4\u6027\u5C64\u7D1A\u3002\u76EE\u524D\u652F\u63F4\u7684\u4E00\u81F4\u6027\u5C64\u7D1A\u70BA\u300Cnone\u300D\u3001\u300Ccheck-modified-at-commit\u300D\u3001\u300Clock-when-loaded\u300D\u548C\u300Ccheck-version-of-accessed-instances\u300D\u3002
core.configuration.validationfailed=JDO76107\uFF1A\u985E\u5225 {0} \u7684\u5C0D\u61C9\u7121\u6548\uFF1A\n{1}\u3002
core.configuration.validationproblem=JDO76108\uFF1A\u985E\u5225 {0} \u4E2D\u767C\u751F\u9A57\u8B49\u932F\u8AA4\uFF1A{1}
#
# <FieldDesc validation at runtime>
#
core.fielddesc.minvalue=JDO76109\uFF1A\u503C\uFF1A{0} \u5C0F\u65BC\u6240\u5141\u8A31\u7684\u6700\u5C0F\u503C\uFF1A\u6B04\u4F4D\u985E\u578B {2} \u7684 {1}\u3002
core.fielddesc.maxvalue=JDO76110\uFF1A\u503C\uFF1A{0} \u5927\u65BC\u6240\u5141\u8A31\u7684\u6700\u5927\u503C\uFF1A\u6B04\u4F4D\u985E\u578B {2} \u7684 {1}\u3002
core.configuration.noneexistentvcfield=JDO76111\uFF1A\u6B04\u4F4D {0} \u6A19\u8A18\u70BA\u7248\u672C\u6B04\u4F4D\uFF0C\u4F46\u5728 PersistenceCapable \u985E\u5225 {1} \u4E2D\u4E0D\u5B58\u5728\u3002
core.configuration.loadfailed.field=JDO76112\uFF1A\u7121\u6CD5\u8F09\u5165\u985E\u5225 {1} \u4E2D\u7684\u6B04\u4F4D {0} \u7D44\u614B\u3002

#
# <NOI18N: model>
#
sqlstore.model.classdesc.assocrelatedfield=\u95DC\u806F\u7684\u95DC\u4FC2\u6B04\u4F4D = {0}\u3002
sqlstore.model.classdesc.createsqldesc=\u5F9E {0} \u5EFA\u7ACB SqlIDDesc\u3002
sqlstore.model.classdesc.fieldinfo=\u6A94\u6848\u540D\u7A31 = {0}\uFF0CID= {1}\u3002
sqlstore.model.classdesc.general={0}.{1} =>{2}
sqlstore.model.classdesc.getlocalfielddesc=<-> SqlPersistenceDesc.getLocalFieldDesc()\uFF0C\u985E\u5225 ={0} \u5DF2\u70BA\u6B04 {2} \u65B0\u589E\u96B1\u85CF\u6B04\u4F4D {1}\u3002
sqlstore.model.classdesc.loadedclass=\u6210\u529F\u8F09\u5165 oid \u985E\u5225 = {0}\u3002
sqlstore.model.classdesc.persistconfiginit.exit=<-- SqlPersistenceConfig.initialize()\u3002
sqlstore.model.classdesc.persistconfiginit=--> SqlPersistenceConfig.initialize()\uFF0C\u985E\u5225 = {0}\u3002
sqlstore.model.classdesc.pkfield=PK \u6B04\u4F4D = {0}\u3002
sqlstore.model.classdesc.primarytrackedfield=\u6B04\u4F4D {0} \u70BA\u8FFD\u8E64\u7684\u4E3B\u8981\u6B04\u4F4D\u3002
sqlstore.model.classdesc.unsetconcurrencychk=\u53D6\u6D88\u8A2D\u5B9A lf {0} \u7684 IN_CONCURRENCY_CHECK \u7279\u6027\u3002
sqlstore.model.classdesc.unsetrefintegrityupdate=\u53D6\u6D88\u8A2D\u5B9A ff {0} \u7684 REF_INTEGRITY_UPDATES \u7279\u6027\u3002
sqlstore.model.classdesc.vcfield=\u7248\u672C\u4E00\u81F4\u6027\u6B04\u4F4D = {0}\u3002
sqlstore.model.fielddesc.addingfield=\u65B0\u589E\u8981\u7531\u6B04\u4F4D {1} \u8FFD\u8E64\u7684\u6B04\u4F4D {0}\u3002
sqlstore.model.fielddesc.convertvalue.from_to=convertValue\uFF1A{0}\uFF0C\u5F9E\uFF1A{1} \u81F3\uFF1A{2}\u3002
sqlstore.model.fielddesc.convertvalue.hidden=\u50B3\u56DE convertValue\uFF1A\u96B1\u85CF\u7684 {0} ...
sqlstore.model.fielddesc.convertvalue=\u50B3\u56DE convertValue\uFF1ANULL ...
sqlstore.model.fielddesc.fieldname={0} = {1}.
sqlstore.model.fielddesc.setupdesc=setupDesc()\uFF1AfieldName {0} fieldType {1}\u3002
sqlstore.model.configcacheimpl.size_before=\u6E05\u9664\u524D\u7684 {0} \u5927\u5C0F\uFF1A{1}\u3002
sqlstore.model.configcacheimpl.size_after=\u6E05\u9664\u5F8C\u7684 {0} \u5927\u5C0F\uFF1A{1}\u3002


###############################################################################
# <StateManager>
# Message ID Range: JDO76200 - JDO76299
###############################################################################
core.statemanager.anotherowner=JDO76200\uFF1A\u7121\u6CD5\u6307\u5B9A\u53E6\u4E00\u500B\u7269\u4EF6\u6240\u64C1\u6709\u7684 SCO \u57F7\u884C\u8655\u7406\u3002
core.statemanager.cantnewoid=JDO76201\uFF1A\u7121\u6CD5\u5EFA\u7ACB\u985E\u5225 {0} \u7684\u65B0\u4E3B\u9375\u57F7\u884C\u8655\u7406\u3002
core.statemanager.cantschedulejointable=JDO76202\uFF1A\u7121\u6CD5\u5728\u985E\u5225 {0} \u548C\u985E\u5225 {1} \u4E4B\u9593\u6392\u7A0B\u9023\u7D50\u8868\u683C\u9805\u76EE\uFF0C\u56E0\u70BA\u95DC\u4FC2\u6B04\u4F4D\u63CF\u8FF0\u70BA\u7A7A\u3002
core.statemanager.cantsetkeyfield=JDO76203\uFF1A\u7121\u6CD5\u8A2D\u5B9A\u4E3B\u9375\u6B04\u4F4D {0} \u7684\u503C\u3002
core.statemanager.conflictingvalues=JDO76204\uFF1A\u5C0D\u61C9\u81F3\u540C\u4E00\u500B\u6B04\u7684\u6B04\u4F4D {0} \u548C\u6B04\u4F4D {1} \u4E4B\u9593\u5B58\u5728\u885D\u7A81\u7684\u503C
core.statemanager.getfieldfailed=JDO76205\uFF1A\u7121\u6CD5\u53D6\u5F97\u6B04\u4F4D\u3002
core.statemanager.invalidpk=JDO76206\uFF1A\u91CD\u65B0\u8F09\u5165\u5177\u6709\u6301\u7E8C\u6027\u985E\u5225 {1} \u7684\u57F7\u884C\u8655\u7406\u6642\uFF0C\u7A7A\u4E3B\u9375\u6B04\u4F4D {0} \u7121\u6548\u3002\u57F7\u884C\u8655\u7406\u7684 ObjectId \u70BA {2}\u3002
core.statemanager.nopkupdate=JDO76207\uFF1A\u4E0D\u5141\u8A31\u66F4\u65B0\u4E3B\u9375\u6B04\u4F4D\u3002
core.statemanager.nopm=JDO76208\uFF1A\u72C0\u614B\u7BA1\u7406\u7A0B\u5F0F\u4E0D\u5305\u542B\u5C0D\u6301\u7E8C\u6027\u7BA1\u7406\u7A0B\u5F0F\u7684\u53C3\u7167\u3002
core.statemanager.notnavigable=JDO76209\uFF1A\u5DF2\u5617\u8A66\u5B58\u53D6\u985E\u5225 {1} \u7684\u6B04\u4F4D {0}\u3002\u6B64\u6B04\u4F4D\u5148\u524D\u672A\u5BE6\u4F8B\u5316\uFF0C\u4E14\u6B64\u985E\u5225\u4E0D\u5141\u8A31\u52D5\u614B\u5C0E\u89BD\u3002\u60A8\u5FC5\u9808\u5728\u64F7\u53D6\u6B64\u985E\u5225\u6642\u8ACB\u6C42\u6B64\u6B04\u4F4D\uFF0C\u6216\u8005\u5141\u8A31\u52D5\u614B\u5C0E\u89BD\uFF0C\u4EE5\u4FBF\u5B58\u53D6\u6642\u53EF\u81EA\u52D5\u64F7\u53D6\u5B83\u3002
core.statemanager.objectnotfound=JDO76210\uFF1A\u7269\u4EF6\u672A\u5B58\u5728\u65BC\u8CC7\u6599\u5B58\u653E\u5340\u4E2D\u3002
core.statemanager.poshiddenindex=JDO76211\uFF1A\u96B1\u85CF\u6B04\u4F4D\u7684\u7D22\u5F15\u61C9\u70BA\u8CA0\u503C\uFF0C\u4F46\u662F\u6211\u5011\u53D6\u5F97\u7684\u7D22\u5F15\u537B\u70BA {0}\u3002
core.statemanager.readonly=JDO76212\uFF1A\u5DF2\u5617\u8A66\u4FEE\u6539\u985E\u5225 {1} \u7684\u552F\u8B80\u6B04\u4F4D {0}\u3002
core.statemanager.releaselock.wrongthread=JDO76213\uFF1A\u6B64\u7E6B\u7DDA {0} \u4E0D\u6703\u66AB\u505C StateManager \u9396\u5B9A\u3002
core.statemanager.setfieldfailed=JDO76214\uFF1A\u7121\u6CD5\u8A2D\u5B9A\u6B04\u4F4D\u3002
core.statemanager.wrongusageforoverlappingpkfkdelete=JDO76215\uFF1A\u5F9E\u7BA1\u7406\u5F0F\u95DC\u4FC2\u4E2D\u79FB\u9664\u57F7\u884C\u8655\u7406\u7684\u5617\u8A66\u4E0D\u6B63\u78BA\u3002\u6B64\u95DC\u4FC2\u7531\u53E6\u4E00\u5074\u7684\u4E3B\u9375\u6B04\u5B9A\u7FA9\u3002\u5C0D\u96C6\u5408\u57F7\u884C\u79FB\u9664\u4F5C\u696D\u8981\u6C42\u66F4\u65B0\u53E6\u4E00\u5074\u7684\u6B04\uFF0C\u4F46\u4E0D\u5141\u8A31\u4E3B\u9375\u66F4\u65B0\u3002\u56E0\u6B64\uFF0C\u53EA\u6709\u660E\u78BA\u522A\u9664\u57F7\u884C\u8655\u7406\u6216\u4F7F\u7528\u91CD\u758A\u522A\u9664\uFF0C\u624D\u80FD\u5F9E\u4E3B\u9375\u5B9A\u7FA9\u7684\u7BA1\u7406\u5F0F\u95DC\u4FC2\u96C6\u5408\u4E2D\u79FB\u9664\u8A72\u57F7\u884C\u8655\u7406\u3002
core.statemanager.toomanyrows=JDO76215\uFF1A\u5C0D\u65BC\u5C0D\u61C9\u81F3\u985E\u5225 {0} \u7684\u8868\u683C\u4E4B\u4E00\uFF0C\u5DF2\u50B3\u56DE\u591A\u5217\u3002\u91DD\u5C0D\u7269\u4EF6\u7684\u6BCF\u500B\u57F7\u884C\u8655\u7406\uFF0C\u5C0D\u61C9\u81F3\u985E\u5225\u7684\u6BCF\u500B\u8868\u683C\u61C9\u8A72\u50C5\u6709\u4E00\u5217\u3002
core.statemanager.copyFields.mismatch=JDO76216\uFF1A\u5617\u8A66\u5F9E\u4E00\u500B StateManager \u5C07\u6B04\u4F4D\u8907\u88FD\u5230\u5176\u4ED6\u7BA1\u7406\u4E0D\u540C\u985E\u578B\u57F7\u884C\u8655\u7406\u7684 StateManager\uFF1A{0} \u548C {1}\u3002

#
# <NOI18N: StateManager>
#
sqlstore.sqlstatemanager.adddependency=<-> SQLStateManager.addDependency()\uFF0C\u6B64 StateManager\uFF1A{0}\uFF0C\u5176\u4ED6 StateManager\uFF1A{1}\u3002
sqlstore.sqlstatemanager.addupdate=<-> SQLStateManager.addUpdatedForeignReference()\uFF0Clobj={0}\uFF0Cf={1}\uFF0Cfobj={2}\uFF0CrefCount={3}\u3002
sqlstore.sqlstatemanager.applyupdates.exit=<-- SqlStateManager.applyUpdates()\u3002
sqlstore.sqlstatemanager.applyupdates=--> SqlStateManager.applyUpdates()\uFF0C\u6B04\u4F4D = {0}\u3002
sqlstore.sqlstatemanager.clearpersistencefields.exit=<--- SqlStateManager.clearPersistenceFields()\u3002
sqlstore.sqlstatemanager.clearpersistencefields=--> SqlStateManager.clearPersistenceFields()\u3002
sqlstore.sqlstatemanager.copychanges.exit=<-- SQLStateManager.copyChanges()\u3002
sqlstore.sqlstatemanager.copychanges=--> SQLStateManager.copyChanges()\uFF0C\u72C0\u614B\u7BA1\u7406\u7A0B\u5F0F = {0}\u3002
sqlstore.sqlstatemanager.deletepersistence=<-> SqlStateManager.deletePersistence()\uFF0C\u985E\u578B = {0}\u3002
sqlstore.sqlstatemanager.getbeforeimage.exit=<-- SqlStateManager.getBeforeImage()\u3002
sqlstore.sqlstatemanager.getbeforeimage=--> SqlStateManager.getBeforeImage()\uFF0C\u985E\u578B = {0}\u3002
sqlstore.sqlstatemanager.isbeforeimagerequired=isBeforeImageRequired \u70BA\uFF1A{0}\u3002
sqlstore.sqlstatemanager.loadforread.exit=<-- SQLStateManager.loadForRead()\u3002
sqlstore.sqlstatemanager.loadforread=--> SQLStateManager.loadForRead()\u3002
sqlstore.sqlstatemanager.loadforupdate.exit=<-- SQLStateManager.loadForUpdate()\u3002
sqlstore.sqlstatemanager.loadforupdate=--> SQLStateManager.loadForUpdate()\u3002
sqlstore.sqlstatemanager.loggingfield=\u767B\u5165\u6B04\u4F4D = {0}\uFF0C\u503C = {1}\u3002
sqlstore.sqlstatemanager.makedirty.fixscocollection=--- SqlStateManager.makeDirty()\uFF0C\u4FEE\u6B63 SCOCollection\u3002
sqlstore.sqlstatemanager.makedirty.fixscodate=--- SqlStateManager.makeDirty()\uFF0C\u4FEE\u6B63 SCODate\u3002
sqlstore.sqlstatemanager.makedirty=--> SqlStateManager.makeDirty()\uFF0C\u6B04\u4F4D = {0}\u3002
sqlstore.sqlstatemanager.makedirtyfield=\u6A19\u8A18\u70BA\u8B8A\u66F4\u7684\u6B04\u4F4D = {0}\u3002
sqlstore.sqlstatemanager.makepersistence=<-> SqlStateManager.makePersistence()\uFF0C\u985E\u578B = {0}\u3002
sqlstore.sqlstatemanager.makepresent=--> SqlStateManager.makePresent()\uFF0C\u6B04\u4F4D = {0}\u3002
sqlstore.sqlstatemanager.marking=\u5C07 {0} \u6A19\u8A18\u70BA\u5B58\u5728\u3002
sqlstore.sqlstatemanager.newtype=\u65B0\u985E\u578B\uFF1A{0}\u3002
sqlstore.sqlstatemanager.nosuchmethodexcep.clone=\u7570\u5E38\uFF1A{0}  \u8907\u88FD ... \u985E\u578B {1}\u3002
sqlstore.sqlstatemanager.preparegetfield.exit=<-- SqlStateManager.prepareGetField()\u3002
sqlstore.sqlstatemanager.preparegetfield=--> SqlStateManager.prepareGetField()\uFF0C\u540D\u7A31 = {0}\u3002
sqlstore.sqlstatemanager.preparesetfield.exit=<-- SQLStateManager.prepareSetField()\u3002
sqlstore.sqlstatemanager.preparesetfield=--> SQLStateManager.prepareSetField()\uFF0C\u540D\u7A31 = {0}\u3002
sqlstore.sqlstatemanager.preparetoupdateph1.exit=<-- SqlStateManager.prepareToUpdateI()\u3002
sqlstore.sqlstatemanager.preparetoupdateph1=--> SqlStateManager.prepareToUpdatePhaseI()\uFF0C\u985E\u578B = {0}\u3002
sqlstore.sqlstatemanager.preparetoupdateph2.exit=<-- SqlStateManager.prepareToUpdateII()\u3002
sqlstore.sqlstatemanager.preparetoupdateph2=--> SqlStateManager.prepareToUpdatePhaseII()\uFF0C\u985E\u578B = {0}\u3002
sqlstore.sqlstatemanager.preparetoupdateph3.exit=<-- SqlStateManager.prepareToUpdateIII()\u3002
sqlstore.sqlstatemanager.preparetoupdateph3=--> SqlStateManager.prepareToUpdatePhaseIII()\uFF0C\u985E\u578B = {0}\u3002
sqlstore.sqlstatemanager.prepareupdatefield.exit=<-- SQLStateManager.prepareUpdateField()\u3002
sqlstore.sqlstatemanager.prepareupdatefield=--> SQLStateManager.prepareUpdateField()\uFF0C\u540D\u7A31 = {0}\uFF0C\u72C0\u614B\uFF1A{1}\u3002
sqlstore.sqlstatemanager.prepareupdatefieldspl.exit=<-- SQLStateManager.prepareUpdateFieldSpecial()\u3002
sqlstore.sqlstatemanager.prepareupdatefieldspl=--> SQLStateManager.prepareUpdateFieldSpecial\uFF0C\u540D\u7A31= {0}\uFF0C\u72C0\u614B\uFF1A{1}\u3002
sqlstore.sqlstatemanager.processcollectionupdate.exit=<-- SQLStateManager.processCollectionUpdates()\u3002
sqlstore.sqlstatemanager.processcollectionupdate=--> SQLStateManager.processCollectionUpdates()\uFF0CbeforeList={0}\uFF0Cafterlist={1}\u3002
sqlstore.sqlstatemanager.processforeign=\u8655\u7406\u4F5C\u696D\u5916\u4F86\u6B04\u4F4D ={0}\u3002
sqlstore.sqlstatemanager.processforeignfield.remove=-- SQLStateManager.processForeignField()\uFF1A\u70BA Collection - \u79FB\u9664\u3002
sqlstore.sqlstatemanager.processforeignfield.remove_from_bi=-- SQLStateManager.processForeignField()\uFF1A\u70BA SCOCollection - \u5F9E BI \u79FB\u9664\u3002
sqlstore.sqlstatemanager.processforeignfield.reset=-- SQLStateManager.processForeignField()\uFF1A\u70BA SCOCollection - \u91CD\u8A2D\u3002
sqlstore.sqlstatemanager.processforeignfield=-- SQLStateManager.processForeignField()\uFF1A\u503C\uFF1A{0} \u985E\u578B\uFF1A{1}\u3002
sqlstore.sqlstatemanager.realizefield.exit=<-- SqlStateManager.realizeField()\u3002
sqlstore.sqlstatemanager.realizefield=--> SqlStateManager.realizeField()\uFF0C\u540D\u7A31 = {0}\u3002
sqlstore.sqlstatemanager.realizeforeignfield.exit=<-- SqlStateManager.realizeField()\uFF0C\u5DF2\u5BE6\u9AD4\u5316\u7684\u6B04\u4F4D = {0}\u3002
sqlstore.sqlstatemanager.realizeforeignfield=--> SqlStateManager.realizeField()\uFF0C\u540D\u7A31 = {0}\u3002
sqlstore.sqlstatemanager.recordingfield=\u8A18\u9304\u6B04\u4F4D = {0}\u3002
sqlstore.sqlstatemanager.refreshpersistent.exit=<-- SqlStateManager.refreshPersistent()\u3002
sqlstore.sqlstatemanager.refreshpersistent=--> SqlStateManager.refreshPersistence()\uFF0C\u985E\u578B = {0}\u3002
sqlstore.sqlstatemanager.reload.exit=<-- SqlStateManager.reload(FieldDesc)\u3002
sqlstore.sqlstatemanager.reload=--> SqlStateManager.reload(FieldDesc)\uFF0C\u985E\u578B = {0}\uFF0C\u6B04\u4F4D = {1}\u3002
sqlstore.sqlstatemanager.removeupdate=<-> SQLStateManager.removeUpdatedForeignReference()\uFF0Clobj={0}\uFF0Cf={1}\uFF0Cfobj={2}\uFF0CrefCount={3}\u3002
sqlstore.sqlstatemanager.replaceobjectfield.unsetsco=-- SqlStateManager.replaceObjectField()\uFF0C\u53D6\u6D88\u8A2D\u5B9A SCO\u3002
sqlstore.sqlstatemanager.replaceobjectfield=-- SqlStateManager.replaceObjectField()\uFF0C\u6B04\u4F4D = {0}\uFF0C\u985E\u578B = {1}\u3002
sqlstore.sqlstatemanager.reset=--> SqlStateManager.reset(), retValues = {0}\uFF0CwasNew\uFF1A{1}\uFF0CkeepState\uFF1A{2}\u3002
sqlstore.sqlstatemanager.resettingcollection=\u91CD\u8A2D\u96C6\u5408\u3002
sqlstore.sqlstatemanager.resettingdate=\u91CD\u8A2D\u65E5\u671F\u3002
sqlstore.sqlstatemanager.resolvedependencies=<-> SQLStateManager.resolveDependencies()\uFF0Cobj={0}\u3002
sqlstore.sqlstatemanager.resolvedependency=<-> SQLStateManager.resolveDependency()\uFF0C\u5DF2\u89E3\u6790\u7684\u76F8\u4F9D\u6027\uFF1Alobj={0}\uFF0Cf={1}\uFF0Cfobj={2}\u3002
sqlstore.sqlstatemanager.retrieve.exit=<-- SqlStateManager.retrieve()\u3002
sqlstore.sqlstatemanager.retrieve=--> SqlStateManager.retrieve()\uFF0C\u540D\u7A31 = {0}\u3002
sqlstore.sqlstatemanager.retrieveforeign.exit=<-- SqlStateManager.retrieveForeign()\u3002
sqlstore.sqlstatemanager.retrieveforeign=--> SqlStateManager.retrieveForeign()\uFF0C\u540D\u7A31 = {0}\u3002
sqlstore.sqlstatemanager.unsetmask=\u53D6\u6D88\u8A2D\u5B9A\u6B04\u4F4D = {0} \u7684\u906E\u7F69\u3002
sqlstore.sqlstatemanager.unconditionalreload.exit=<-- SqlStateManager.reload()\u3002
sqlstore.sqlstatemanager.unconditionalreload=--> SqlStateManager.reload()\uFF0C\u985E\u578B = {0}\u3002
sqlstore.sqlstatemanager.updatebeforeimage=<-> SQLStateManager.updateBeforeImage()\uFF0C\u540D\u7A31 = {0}\uFF0C\u503C = {1}\u3002
sqlstore.sqlstatemanager.updateobjfield.exit=<-- SQLStateManager.updateObjectField()\u3002
sqlstore.sqlstatemanager.updateobjfield=--> SQLStateManager.updateObjectField()\uFF0C\u540D\u7A31 = {0}\uFF0C\u985E\u578B = {1}\u3002
sqlstore.sqlstatemanager.updatepersistent.exit=<-- SqlStateManager.updatePersistent()\u3002
sqlstore.sqlstatemanager.updatepersistent.immediateflush=<--> SqlStateManager.updatePersistent()\uFF0C\u9700\u7ACB\u5373\u6E05\u9664\uFF1Aobj={0}\uFF0Cnext={1}\u3002
sqlstore.sqlstatemanager.updatepersistent.skipped=<--> SqlStateManager.updatePersistent() \u5DF2\u7565\u904E\uFF0C\u985E\u578B ={0}\uFF0Cobj= {1}\u3002
sqlstore.sqlstatemanager.updatepersistent=--> SqlStateManager.updatePersistent()\uFF0C\u985E\u578B = {0}\u3002
sqlstore.sqlstatemanager.updatetrackedfields.exit=<-- updateTrackedFields()\u3002
sqlstore.sqlstatemanager.updatetrackedfields=--> updateTrackedFields()\uFF0Cf = {0}\uFF0C\u503C = {1}\uFF0CfieldToIgnore = {2}\u3002


###############################################################################
# <sql generator components: All the source files under sql.>
# Message ID Range: JDO76300 - JDO76399
###############################################################################
core.constraint.duporderby=JDO76300\uFF1A\u6B04\u4F4D {0} \u7684\u9650\u5236\u70BA "order by"\uFF0C\u4F46\u5DF2\u5728 "order by" \u9650\u5236\u4E2D\u6307\u5B9A\u8A72\u6B04\u4F4D\u3002
core.constraint.fielddisallowed=JDO76301\uFF1A\u6307\u5B9A\u4E86 fieldName \u53C3\u6578\uFF0C\u4F46\u4E0D\u5141\u8A31\u5C07\u5176\u7528\u65BC\u4F5C\u696D {0}\u3002
core.constraint.fieldrequired=JDO76302\uFF1A\u7F3A\u5C11 fieldName \u53C3\u6578\uFF0C\u4F46\u4F5C\u696D {0} \u9700\u8981\u4E00\u500B\u6B04\u4F4D\u3002
core.constraint.illegalParameterInfo=JDO76303\uFF1A\u5FC5\u9808\u4F7F\u7528\u985E\u578B ParameterInfo \u7684\u503C\u547C\u53EB OP_PARAMETER \u7684 addConstraint()\u3002
core.constraint.illegalnode=JDO76304\uFF1ASqlConstraint \u5806\u758A\u4E2D\u7684\u9650\u5236\u7BC0\u9EDE {0} \u975E\u6CD5\u3002
core.constraint.illegalop=JDO76305\uFF1A\u4F5C\u696D\u53C3\u6578\u5305\u542B {0} \u7684\u975E\u6CD5\u503C\u3002
core.constraint.needfieldnamenode=JDO76306\uFF1A\u9650\u5236\u5806\u758A\u4E2D\u767C\u751F\u932F\u8AA4\u3002\u5DF2\u9810\u671F\u6A94\u6848\u540D\u7A31\u3002
core.constraint.needfieldnode=JDO76307\uFF1A\u9650\u5236\u5806\u758A\u4E2D\u767C\u751F\u932F\u8AA4\u3002\u5DF2\u9810\u671F\u6B04\u4F4D\u63CF\u8FF0\u3002
core.constraint.needvalnode=JDO76308\uFF1A\u9650\u5236\u5806\u758A\u4E2D\u767C\u751F\u932F\u8AA4\u3002\u5DF2\u9810\u671F\u503C\u3002
core.constraint.stackempty=JDO76309\uFF1A\u9650\u5236\u5806\u758A\u70BA\u7A7A \uFF0D \u904B\u7B97\u5B50\u6578\u76EE\u7684\u503C\u4E0D\u8DB3\u3002
core.constraint.unknownfield=JDO76310\uFF1A\u64F7\u53D6\u63CF\u8FF0\u5143\u4E2D\u6307\u5B9A\u7684\u6B04\u4F4D {0} \u4E0D\u662F\u985E\u5225 {1} \u7684\u6210\u54E1\u3002
core.constraint.valdisallowed=JDO76311\uFF1A\u6307\u5B9A\u4E86 value \u53C3\u6578\uFF0C\u4F46\u4E0D\u5141\u8A31\u5C07\u5176\u7528\u65BC\u4F5C\u696D {0}\u3002
core.constraint.valrequired=JDO76312\uFF1A\u7F3A\u5C11 value \u53C3\u6578\uFF0C\u4F46\u4F5C\u696D {0} \u9700\u8981\u4E00\u500B\u503C\u3002
sqlstore.resultdesc.errorgettingvalefromresulset=JDO76313\uFF1A\u5F9E\u7D22\u5F15 {0} \u7684 resultset \u4E2D\u53D6\u5F97\u505A\u70BA resultType {1} \u7684\u503C\u6642\u767C\u751F\u932F\u8AA4\u3002columnSqlType {2}\u3002\u7570\u5E38\uFF1A{3}
sqlstore.resultdesc.foreignfieldprojection=JDO76314\uFF1A{0} \u7684\u67E5\u8A62\u5728\u95DC\u4FC2\u6B04\u4F4D\u4E0A\u4E0D\u61C9\u5177\u6709\u6295\u5F71\u3002
sqlstore.resultdesc.unknownfieldtype=JDO76317\uFF1A\u9047\u5230\u672A\u77E5\u6B04\u4F4D\u985E\u578B {0}\u3002
sqlstore.retrievedesc.toomanyprojections=JDO76318\uFF1A\u7121\u6CD5\u70BA RetrieveDesc \u8A2D\u5B9A\u591A\u500B\u6295\u5F71\u3002
sqlstore.retrievedesc.toomanyresulttypes=JDO76319\uFF1A\u7121\u6CD5\u70BA RetrieveDesc \u8A2D\u5B9A\u591A\u500B\u7D50\u679C\u985E\u578B\u3002
sqlstore.selectstatement.noupdatelocksupport=JDO76320\uFF1A\u6B64\u67E5\u8A62\u4E2D\u5305\u542B\u7684\u7269\u4EF6\u985E\u578B\u4E4B\u4E00\u70BA\u4E00\u81F4\u6027\u5C64\u7D1A\u300Clock-when-loaded\u300D\u3002\u5F37\u5236\u6B64\u4E00\u81F4\u6027\u5C64\u7D1A\u9700\u8981\u8CC7\u6599\u5B58\u653E\u5340\uFF0C\u4EE5\u652F\u63F4\u5217\u5C64\u7D1A\u7684\u66F4\u65B0\u9396\u5B9A\u3002\u8A72\u8CC7\u6599\u5B58\u653E\u5340\u4E0D\u652F\u63F4\u5217\u5C64\u7D1A\u7684\u66F4\u65B0\u9396\u5B9A\u3002
sqlstore.sql.generator.statement.likeescapenotsupported=JDO76321\uFF1A\u6B64\u8CC7\u6599\u5EAB\u4E0D\u652F\u63F4 LIKE ESCAPE \u5B50\u53E5\u3002
sqlstore.sql.generator.statement.positionthreeargsnotsupported=JDO76322\uFF1APOSITION \u5B50\u53E5\u7684\u7B2C\u4E09\u500B\u5F15\u6578\u5FC5\u9808\u70BA 1\u3002
core.configuration.classnotmapped=JDO76323\uFF1A\u672A\u5C0D\u61C9\u985E\u5225 {0}\u3002
core.configuration.classnotmappedtotable=JDO76324\uFF1A\u985E\u5225 {0} \u672A\u5C0D\u61C9\u81F3\u8868\u683C {1}\u3002
sqlstore.sql.generator.statement.unexpectedconstraint=JDO76325\uFF1A\u4F5C\u696D {0} \u7684\u9650\u5236\u6C38\u9060\u4E0D\u80FD\u70BA where \u5B50\u53E5\u7684\u6839\u3002

# <I18N: sql generator>
# Following messages are used within other messages. They need to be i18ned but need not be numbered.
#
sqlstore.sql.generator.statement.sqlStatement=SQL \u6558\u8FF0\u53E5
sqlstore.sql.generator.statement.withinputvalues= \u8F38\u5165\u503C\uFF1A
sqlstore.sql.generator.statement.withnoinputvalues= \u7121\u8F38\u5165\u503C\u3002


#
# <ResultDesc NOI18N>
#
sqlstore.resultdesc.deserializing=\u53D6\u6D88\u5E8F\u5217\u5316 = {0}\u3002
sqlstore.resultdesc.marking_field=\u5C07\u672C\u6A5F\u6B04\u4F4D {0} \u6A19\u793A\u70BA\u5B58\u5728\u3002
sqlstore.resultdesc.marking_foreign_field=\u5C07\u5916\u4F86\u6B04\u4F4D {0} \u6A19\u793A\u70BA\u5B58\u5728\u3002
sqlstore.resultdesc.marking_key_field=\u5C07\u9375\u6B04\u4F4D {0} \u6A19\u793A\u70BA\u5B58\u5728\u3002
sqlstore.resultdesc.returning_field=\u4EE5\u6295\u5F71\u65B9\u5F0F\u50B3\u56DE\u6B04\u4F4D {0}\u3002
#
# <Misc. SQLStore NOI18N >
#
sqlstore.sql.concurrency.concurrencychkdirty.exit=--> ConcurrencyCheckDirty.update()\u3002
sqlstore.sql.concurrency.concurrencychkdirty=--> ConcurrencyCheckDirty.update()\uFF0CbeforeImage = {0}\u3002
sqlstore.sql.concurrencyoptverify.resumetx=<--> ConcurrencyOptVerify.resume()\uFF0C\u5DF2\u91CD\u65B0\u7E7C\u7E8C\u4F5C\u696D\u4E8B\u4EF6 = {0}\u3002
sqlstore.sql.concurrencyoptverify.suspendtx=<--> ConcurrencyOptVerify.suspend()\uFF0C\u5DF2\u66AB\u505C\u4F5C\u696D\u4E8B\u4EF6 = {0}\u3002
sqlstore.sql.concurrencyoptverify.update.exit=<-- ConcurrencyOptVerify.update()\u3002
sqlstore.sql.concurrencyoptverify.update=--> ConcurrencyOptVerify.update()\uFF0CbeforeImage = {0}\u3002
sqlstore.sql.generator.dbstatement.addbatch=addbatch ({0})
sqlstore.sql.generator.dbstatement.bindinputcolumn=bindInputColumn \u7D22\u5F15\uFF1A{0}\uFF0C\u503C\uFF1A{1}\uFF0CsqlType\uFF1A{2}\u3002
sqlstore.sql.generator.dbstatement.executebatch=executeBatch \u6B63\u5728\u57F7\u884C {0} \u500B\u547D\u4EE4
sqlstore.sql.generator.selectqueryplan.processforeignfield.exit=<-- SelectQueryPlan.processForeignFields()\u3002
sqlstore.sql.generator.selectqueryplan.processforeignfield=--> SelectQueryPlan.processForeignFields()\uFF0C\u985E\u5225 = {0}\u3002
sqlstore.sql.generator.selectqueryplan.processlocalfield.exit=<-- SelectQueryPlan.processLocalFields()\u3002
sqlstore.sql.generator.selectqueryplan.processlocalfield=--> SelectQueryPlan.processLocalFields()\uFF0C\u985E\u5225 = {0}\u3002
sqlstore.sql.generator.selectqueryplan.processstmts.exit=<-- SelectQueryPlan.processStatements()\u3002
sqlstore.sql.generator.selectqueryplan.processstmts=--> SelectQueryPlan.processStatements()\uFF0C\u985E\u5225 = {0}\u3001\u6558\u8FF0\u53E5 = {1}\u3002
sqlstore.sql.updateobjdescimpl.afterimagenull=\u672A\u8A2D\u5B9A AfterImage\u3002
sqlstore.sql.updateobjdescimpl.beforeimagenull=\u672A\u8A2D\u5B9A BeforeImage\u3002
sqlstore.sql.updateobjdescimpl.markrelationshipchange=<--> UpdateDesc.markRelationshipChange()\u3002
sqlstore.sql.updateobjdescimpl.updated=\u5DF2\u7D93\u66F4\u65B0 {0}\u3002


###############################################################################
# <SQLStoreManager>
# Message ID Range: JDO76400 - JDO76499
###############################################################################
#
# <SQLStoreManager>
#
core.persistencestore.jdbcerror=JDO76400\uFF1A\u57F7\u884C SQL \u6558\u8FF0\u53E5\u6642\u53D6\u5F97 JDBC SQLException\uFF1A\n{0}\u3002\n\u8ACB\u6AA2\u67E5 SQLException\uFF0C\u4EE5\u53D6\u5F97\u66F4\u591A\u8CC7\u8A0A\u3002
sqlstore.retrievedesc.stmntsnotjoined=JDO76401\uFF1A\u4E0D\u652F\u63F4\u4E00\u500B RetrieveDesc \u7684\u591A\u91CD SQL \u6558\u8FF0\u53E5\u3002
core.persistencestore.toofewrows=JDO76402\uFF1A\u5617\u8A66\u53D6\u5F97\u985E\u5225 {0} \u4E4B\u95DC\u806F {1} \u7684\u503C\u6642\uFF0C\u5F9E\u8CC7\u6599\u5EAB\u50B3\u56DE\u7684\u5217\u5C11\u65BC\u8A72\u95DC\u806F\u7684\u57FA\u6578\u6240\u5141\u8A31\u7684\u5217\u3002\u6240\u5141\u8A31\u7684\u6700\u5C11\u5217\u6578\u70BA {2}\u3002
core.persistencestore.toomanyobjforcard1=JDO76403\uFF1A\u8CC7\u6599\u5EAB\u8207\u6301\u7E8C\u6027\u6A21\u578B\u4E0D\u4E00\u81F4\u3002\u5617\u8A66\u64F7\u53D6\u7531 {0} \u985E\u5225\u7684 {1} \u95DC\u806F\u6240\u53C3\u7167\u7684\u7269\u4EF6\u6642\u64F7\u53D6\u4E86 {2} \u500B\u9805\u76EE\uFF0C\u4F46\u662F\u7531\u65BC\u8A72\u95DC\u806F\u7684\u57FA\u6578\u4E0A\u9650\u70BA 1\uFF0C\u56E0\u800C\u50C5\u53EF\u4EE5\u5BB9\u7D0D 1 \u500B\u9805\u76EE\u3002
core.persistencestore.toomanyrows=JDO76405\uFF1A\u5617\u8A66\u53D6\u5F97\u985E\u5225 {0} \u4E4B\u95DC\u806F {1} \u7684\u503C\u6642\uFF0C\u5F9E\u8CC7\u6599\u5EAB\u50B3\u56DE\u7684\u5217\u591A\u65BC\u8A72\u95DC\u806F\u7684\u57FA\u6578\u6240\u5141\u8A31\u7684\u5217\u3002\u6240\u5141\u8A31\u7684\u6700\u591A\u5217\u6578\u70BA {2}\u3002
core.store.concurrentaccess=JDO76406\uFF1A\u4E26\u884C\u904B\u4F5C\u5B58\u53D6\u7570\u5E38\uFF1A{0} \u7684\u7269\u4EF6\u5DF2\u7531\u5176\u4ED6\u4F5C\u696D\u4E8B\u4EF6\u66F4\u65B0\u6216\u522A\u9664\u3002
sqlstore.sqlstoremanager.errorcloseresultset=JDO76407\uFF1A\u95DC\u9589 SQL \u7D50\u679C\u96C6\u6642\u767C\u751F\u932F\u8AA4\u3002\u7570\u5E38\uFF1A{0}
sqlstore.sqlstoremanager.errorclosestatement=JDO76408\uFF1A\u95DC\u9589 SQL \u6558\u8FF0\u53E5\u6642\u767C\u751F\u932F\u8AA4\u3002\u7570\u5E38\uFF1A{0}
sqlstore.sql.generator.selectqueryplan.plansnotjoined=JDO76409\uFF1A\u4E0D\u652F\u63F4\u4E00\u500B RetrieveDesc \u7684\u591A\u91CD\u67E5\u8A62\u8A08\u5283\u3002

#
# <NOI18N: SQLStoreManager>
#
sqlstore.sqlstoremanager.executeQuery.exit=<-- SQLStoreManager.executeQuery()\u3002
sqlstore.sqlstoremanager.executeQuery=--> SQLStoreManager.executeQuery()\u3002
sqlstore.sqlstoremanager.executeupdate.exit=<-- SQLStoreManager.executeUpdate()\uFF0C\u53D7\u5F71\u97FF\u7684\u5217 = {0}\u3002
sqlstore.sqlstoremanager.executeupdate=--> SQLStoreManager.executeUpdate()\u3002
sqlstore.sqlstoremanager.executeupdatebatch.addbatch={0}\uFF1B\u65B0\u589E\u6279\u6B21\u3002
sqlstore.sqlstoremanager.executeupdatebatch.exit=<-- SQLStoreManager.executeUpdateBatch()\u3002
sqlstore.sqlstoremanager.executeupdatebatch.exit.flush=<-- SQLStoreManager.executeUpdateBatch()\uFF0C\u53D7\u5F71\u97FF\u7684\u5217 = {0}\u3002
sqlstore.sqlstoremanager.executeupdatebatch.flushbatch={0}\uFF1B\u6E05\u9664\u6279\u6B21\u3002
sqlstore.sqlstoremanager.executeupdatebatch=--> SQLStoreManager.executeUpdateBatch()\u3002
sqlstore.sqlstoremanager.getpersistenceconfig=<--> SQLStoreManager.getPersistenceConfig()\uFF0CclassType = {0}\u3002
sqlstore.sqlstoremanager.selectnoncorrelated.exit=<-- SQLStoreManager.selectNonCorrelated()\u3002
sqlstore.sqlstoremanager.selectnoncorrelated=--> SQLStoreManager.selectNonCorrelated()\u3002
sqlstore.sqlstoremanager.vendortype=<--> SQLStoreManager\uFF1A\u4F9B\u61C9\u5546\u985E\u578B = {0}\u3002


###############################################################################
# <Connection/Connectionpool/DBVendorType/TransactionImpl/OracleSpecialDBOperation>
# Message ID Range: JDO76500 - JDO76599
###############################################################################
#
# <Connection/Connection Pool> - database
#
connection.connectionmanager.badnew=JDO76500\uFF1A\u65B0\u7684 ''{0}'' \u5FC5\u9808\u5927\u65BC\u6216\u7B49\u65BC\u76EE\u524D\u7684 ''{1}''\u3002
connection.connectionmanager.badvalue=JDO76501\uFF1A''{0}'' \u7684\u503C\u7121\u6548\u3002
connection.connectionmanager.conntimeout=JDO76502\uFF1A\u9023\u7DDA\u903E\u6642\u904E\u671F\u3002
connection.connectionmanager.getconnection.mismatch=JDO76503\uFF1A\u96C6\u5340\u7684\u9023\u7DDA\u7121\u76F8\u540C\u7684\u4F7F\u7528\u8005\u74B0\u5883\u3002
connection.connectionmanager.isdown=JDO76504\uFF1A\u6B63\u5728\u95DC\u9589\u9023\u7DDA\u7BA1\u7406\u7A0B\u5F0F\u3002
connection.connectionmanager.maxpool=JDO76505\uFF1A\u9023\u7DDA\u96C6\u5340\u5DF2\u9054\u5230\u6700\u5927\u5BB9\u91CF\u3002
connection.connectionmanager.msintervalvalue=JDO76506\uFF1AMsInterval \u5FC5\u9808\u5927\u65BC\u96F6\uFF0C\u4E14\u5C0F\u65BC\u6216\u7B49\u65BC MsWait\u3002
connection.connectionmanager.mswaitvalue=JDO76507\uFF1AMsWait \u5FC5\u9808\u5927\u65BC\u6216\u7B49\u65BC\u96F6\u3002
connection.connectionmanager.nulldriver=JDO76508\uFF1A\u9A45\u52D5\u7A0B\u5F0F\u540D\u7A31\u7684\u503C\u70BA NULL\u3002
connection.connectionmanager.nullurl=JDO76509\uFF1AURL \u7684\u503C\u70BA NULL\u3002
connection.connectionmanager.poolsize=JDO76510\uFF1A\u300CmaxPool\u300D\u5FC5\u9808\u5927\u65BC\u6216\u7B49\u65BC\u300CminPool\u300D\u3002
connection.connectionmanager.threaditerupted=JDO76511\uFF1A\u7E6B\u7DDA\u5DF2\u4E2D\u65B7\u3002
connection.connectionmanager.zero=JDO76512\uFF1A''{0}'' \u5FC5\u9808\u5927\u65BC\u6216\u7B49\u65BC\u96F6\u3002
#
# <DBVendorType>
#
sqlstore.database.dbvendor.cantloadDefaultProperties=JDO76513\uFF1A\u7121\u6CD5\u8F09\u5165\u9810\u8A2D\u8CC7\u6599\u5EAB\u7684\u7279\u6027\u3002
sqlstore.database.dbvendor.init.default=JDO76514\uFF1A-->\u7121\u6CD5\u8F09\u5165\u4F9B\u61C9\u5546\u985E\u578B {0} \u7684\u7279\u6027\u3002\u5C07\u4F7F\u7528\u9810\u8A2D\u503C\u3002
sqlstore.database.dbvendor.cantinstantiateclass=JDO76515\uFF1A\u7121\u6CD5\u5BE6\u4F8B\u5316\u985E\u5225 {0}\u3002
#
# <OracleSpecialDBOperation>
#
sqlstore.database.oracle.defineCol=JDO76516\uFF1A\u7121\u6CD5\u5B9A\u7FA9\u6558\u8FF0\u53E5\u7684\u6B04\u3002
sqlstore.database.oracle.nooracleavailable=JDO76517\uFF1A\u521D\u59CB\u5316 Oracle \u8CC7\u6E90\u5DE5\u5EE0 ''{0}'' \u6642\uFF0C\u7121\u6CD5\u53D6\u5F97 oracle.jdbc.OraclePreparedStatement \u6216 oracle.jdbc.driver.OraclePreparedStatement \u7684\u57F7\u884C\u8655\u7406\u3002\u5C07\u505C\u7528 Oracle \u7279\u5B9A\u7684\u6700\u4F73\u5316\u3002\u5982\u679C\u4F7F\u7528\u6B64\u8CC7\u6E90\u7684\u57F7\u884C\u8655\u7406\u9700\u8981\u5DF2\u5C0D\u61C9\u81F3\u56FA\u5B9A\u5B57\u5143\u6B04\u7684\u6B04\u9023\u7D50\u503C\uFF0C\u9019\u4E9B\u503C\u5C07\u8207\u7A7A\u683C\u4E00\u8D77\u586B\u88DC\u81F3\u5C0D\u61C9\u7684 dbschema \u6A94\u6848\u4E2D\u6307\u5B9A\u7684\u9577\u5EA6\u3002
sqlstore.database.oracle.fixedcharpadded=JDO76518\uFF1A\u503C "{0}" \u9023\u7D50\u81F3 CHAR \u6B04\u3002\u9019\u9700\u8981\u5C0D Oracle \u9032\u884C\u7279\u5225\u8655\u7406\u3002\u7531\u65BC\u985E\u5225 OraclePreparedStatement \u7121\u6CD5\u5F9E\u9A45\u52D5\u7A0B\u5F0F\u53D6\u5F97\uFF0C\u8A72\u503C\u6703\u8207\u7A7A\u683C\u4E00\u8D77\u586B\u88DC\u81F3\u64F7\u53D6\u7684 dbschema \u6A94\u6848\u4E2D\u6307\u5B9A\u7684\u9577\u5EA6 {1}\u3002
#
# <Misc.>
#
core.configuration.getvendortypefailed=JDO76519\uFF1A\u7121\u6CD5\u8B58\u5225\u8CC7\u6599\u5B58\u653E\u5340\u7684\u4F9B\u61C9\u5546\u985E\u578B\u3002
jdo.sqlpersistencemanagerfactory.errorgettingDatabaseInfo=JDO76520\uFF1A\u53D6\u5F97\u6709\u95DC\u8CC7\u6599\u5EAB\u7684\u8CC7\u8A0A\u6642\u767C\u751F\u932F\u8AA4\u3002\u53D6\u5F97\u4E0B\u5217\u7570\u5E38\uFF1A

#
# <NOI18N: Connection>
#
sqlstore.connection.conncectiomgr.found=<--> ConnectionManager.getConnection\uFF1A\u767C\u73FE {0}\u3002
sqlstore.connection.conncectiomgr.getnewconn=<--> ConnectionManager.getConnection\uFF1A\u65B0\u7684 {0}\u3002
sqlstore.connection.conncectiomgr.replacefreeconn=<--> ConnectionManager.replaceFreeConnection\uFF1A\u53EF\u7528 {0}\u3002
sqlstore.connectionimpl.clearxact.close=--- ConnectionImpl.clearXact\uFF1A\u5DF2\u95DC\u9589\u9023\u7DDA\u3002
sqlstore.connectionimpl.clearxact.disassocxact=--- ConnectionImpl.clearXact\uFF1AdisassociateXact\u3002
sqlstore.connectionimpl.clearxact=--- ConnectionImpl.clearXact\uFF1A\u3002
sqlstore.connectionimpl.close.connrelease=<--- ConnectionImpl.close\uFF1A\u5DF2\u91CB\u51FA\u9023\u7DDA\u3002
sqlstore.connectionimpl.close.exit=<--- ConnectionImpl.close\uFF1A\u5DF2\u95DC\u9589\u9023\u7DDA\u3002
sqlstore.connectionimpl.close.freepending=<--- ConnectionImpl.close\uFF1A\u8A2D\u5B9A FreePending\u3002
sqlstore.connectionimpl.close.putfreelist=<--- ConnectionImpl.close\uFF1A\u653E\u5165 freeList \u4E2D\u3002
sqlstore.connectionimpl.close.replaced=<--- ConnectionImpl.close\uFF1A\u5DF2\u53D6\u4EE3\u9023\u7DDA\u3002
sqlstore.connectionimpl.close=---> ConnectionImpl.close\u3002
sqlstore.connectionimpl.close_arg=---> ConnectionImpl.close\uFF1A{0}\u3002
sqlstore.connectionimpl.commit=--- ConnectionImpl.commit\uFF1A\u5DF2\u95DC\u9589\u9023\u7DDA\u3002
sqlstore.connectionimpl.finalize=--- ConnectionImpl.finalize\uFF1A\u5DF2\u95DC\u9589\u9023\u7DDA\u3002
sqlstore.connectionimpl.internalcommit=--- ConnectionImpl.internalCommit\uFF1A\u3002
sqlstore.connectionimpl.pendingdisassocxact=--- ConnectionImpl.clearXact\uFF1A\u64F1\u7F6E disassociateXact\u3002
sqlstore.connectionimpl.rollback.close=--- ConnectionImpl.rollback\uFF1A\u5DF2\u95DC\u9589\u9023\u7DDA\u3002
sqlstore.connectionimpl.rollback=--- ConnectionImpl.rollback\uFF1A\u3002
#
# <NOI18N: DBVendorType>
#
sqlstore.database.dbvendor.castRequiredForNumericValues=<-> DBVendorType.isCastRequiredForNumericValues()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getModFunctionName=<-> DBVendorType.getModFunctionName()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getNullComparisonFunctionName=<-> DBVendorType.getNullComparisonFunctionName()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getConcatCast=<-> DBVendorType.getConcatCast()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getSpecialDBOperation=<-> DBVendorType.getSpecialDBOperation()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getabs=<-> DBVendorType.getAbs()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getcharlength=<-> DBVendorType.getCharLength()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getforupdate=<-> DBVendorType.getForUpdate()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getholdlock=<-> DBVendorType.getHoldlock()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getisnotnull=<-> DBVendorType.getIsNotNull()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getisnull=<-> DBVendorType.getIsNull()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getleftjoin=<-> DBVendorType.getLeftJoin()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getleftjoinpost=<-> DBVendorType.getLeftJoinPost()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getleftlikeescape=<-> DBVendorType.getLeftLikeEscape()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getnotequal=<-> DBVendorType.getNotEqual()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getposition3args=<-> DBVendorType.getPositionThreeArrgs()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getposition=<-> DBVendorType.getPosition()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getpositionin=<-> DBVendorType.getPositionIn()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getpositionsrchsrc=<-> DBVendorType.getPositionSearchSource()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getquotecharstart=<-> DBVendorType.getQuoteCharStart()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getrightjoinipre=<-> DBVendorType.getRightJoin()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getrightlikeescape=<-> DBVendorType.getRightLikeEscape()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getrtrim=<-> DBVendorType.getRtrim()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getrtrimpost=<-> DBVendorType.getRtrimPost()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getsqrt=<-> DBVendorType.getSqrt()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getstringconcat=<-> DBVendorType.getStringConcat()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getsubstring=<-> DBVendorType.getSubstring()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getsubstringfor=<-> DBVendorType.getSubstringFor()\uFF1A{0}\u3002
sqlstore.database.dbvendor.getsubstringfrom=<-> DBVendorType.getSubstringFrom()\uFF1A{0}\u3002
sqlstore.database.dbvendor.gettablelistend=<-> DBVendorType.getTableListEnd()\uFF1A{0}\u3002
sqlstore.database.dbvendor.gettableliststart=<-> DBVendorType.getTableListStart()\uFF1A{0}\u3002
sqlstore.database.dbvendor.isAnsiTrim=<-> DBVendorType.isAnsiTrim()\uFF1A{0}\u3002
sqlstore.database.dbvendor.isInlineNumeric=<-> DBVendorType.isInlineNumeric()\uFF1A{0}\u3002
sqlstore.database.dbvendor.isNativeOuterJoin=<-> DBVendorType.isNativeOuterJoin()\uFF1A{0}\u3002
sqlstore.database.dbvendor.isParameterCast=<-> DBVendorType.isParameterCast()\uFF1A{0}\u3002
sqlstore.database.dbvendor.isdistinctupdatelocksupported=<-> DBVendorType.isDistinctSupportedWithUpdateLock()\uFF1A{0}\u3002
sqlstore.database.dbvendor.islockcolumnlistsupported=<-> DBVendorType.isLockColumnListSupported()\uFF1A{0}\u3002
sqlstore.database.dbvendor.isupdatelocksupported=<-> DBVendorType.isUpdateLockSupported()\uFF1A{0}\u3002
sqlstore.database.dbvendor.mapemptystrtonull=<-> DBVendorType.mapEmptyStringToNull()\uFF1A{0}\u3002
sqlstore.database.dbvendor.overrideproperties.with=<-> DBVendorType.overrideProperties()\uFF1A{0}\uFF0C\u4F7F\u7528\uFF1A{1}\u3002
sqlstore.database.dbvendor.overrideproperties=<-> DBVendorType.overrideProperties() - NONE\u3002
sqlstore.database.dbvendor.supportslikeescape=<-> DBVendorType.supportsLikeEscape()\uFF1A{0}\u3002
sqlstore.database.dbvendor.vendorname=<-> DBVendorType()\uFF0CvendorName\uFF1A[{0}] vendorType\uFF1A{1}\u3002
#
# <NOI18N: TransactionImpl>
#
sqlstore.transactionimpl.call.info={0} Tran[ {1} ].{2}\uFF1A{4} \u7684 {3}\u3002
sqlstore.transactionimpl.call={0} Tran[ {1} ].{2}\uFF1A{5} \u7684\u72C0\u614B = {3}\uFF0CtxType\uFF1A{4}\u3002
sqlstore.transactionimpl.closeconnection=--- TransactionImpl.closeConnection() {0} ({1})\u3002
sqlstore.transactionimpl.general={0}.
sqlstore.transactionimpl.getconnection=--- TransactionImpl.getConnection()\uFF1A{0} {3} \u7684 TX optimistic\uFF1A{1} referenceCount = {2}\u3002
sqlstore.transactionimpl.releaseconnection=--- TransactionImpl.releaseConnection()\uFF1A{3} \u7684 TX optimistic\uFF1A{0} Inside Commit\uFF1A{1} referenceCount\uFF1A{2}\u3002
sqlstore.transactionimpl.rollbackconnection=--- TransactionImpl.rollbackConnection()\uFF1A{1} \u7684 {0}\u3002
sqlstore.transactionimpl.status={0} Tran[ {1} ].setStatus\uFF1A{2} => {4} \u7684 {3}\u3002


###############################################################################
# All the source files under subdir ejb.
# Message ID Range: JDO76600 - JDO76699
###############################################################################
#
#EJBHelper messages
#
# {0} - method name
ejb.ejbhelper.nonmanaged=JDO76600\uFF1A\u4E0D\u61C9\u5728\u975E\u7BA1\u7406\u5F0F\u74B0\u5883\u4E2D\u547C\u53EB\u65B9\u6CD5 {0}\u3002

#
# Common messages between SunContainerHelper and DeploymentHelper
# so they have a neutral key, that still starts with "ejb".
#
# {0} - jndi name.
ejb.jndi.lookupfailed=JDO76604\uFF1Acmp-resource ''{0}'' \u7684 JNDI \u67E5\u8A62\u5931\u6557\u3002
JDO76604.diag.cause.1=\u5177\u6709\u6B64 JNDI \u540D\u7A31\u7684 CMP \u8CC7\u6E90\u672A\u5728\u6B64\u57F7\u884C\u8655\u7406\u8A3B\u518A\u3002
JDO76604.diag.cause.2=\u5177\u6709 JNDI \u540D\u7A31\u7684 CMP \u8CC7\u6E90\u672A\u4F7F\u7528\u6B64\u5BE6\u4F8B\u8A3B\u518A\u3002
JDO76604.diag.check.1=\u6AA2\u67E5\u60A8\u8A08\u5283\u4F7F\u7528\u4E4B\u8CC7\u6E90\u7684 JNDI \u540D\u7A31\u3002
JDO76604.diag.check.2=\u6AA2\u67E5\u6A21\u7D44\u4E2D\u6240\u6307\u5B9A CMP \u8CC7\u6E90\u7684 JNDI \u540D\u7A31\u3002

# {0} - jndi name.
# {1} - returned class name.
ejb.jndi.unexpectedinstance=JDO76605\uFF1Acmp-resource ''{0}'' \u7684 JNDI \u67E5\u8A62\u50B3\u56DE\u672A\u9810\u671F\u985E\u578B\u7684\u57F7\u884C\u8655\u7406\uFF1A{1}\u3002
JDO76605.diag.cause.1=\u5177\u6709 JNDI \u540D\u7A31\u7684 CMP \u8CC7\u6E90\u4E0D\u6703\u53C3\u7167 jdbc-resource \u6216 persistence-manager-factory-resource\u3002
JDO76605.diag.cause.2=\u5177\u6709 JNDI \u540D\u7A31\u7684 CMP \u8CC7\u6E90\u672A\u4F7F\u7528\u6B64\u5BE6\u4F8B\u8A3B\u518A\u3002
JDO76605.diag.check.1=\u6AA2\u67E5\u60A8\u8A08\u5283\u4F7F\u7528\u4E4B\u8CC7\u6E90\u7684 JNDI \u540D\u7A31\u3002
JDO76605.diag.check.2=\u6AA2\u67E5\u6A21\u7D44\u4E2D\u6240\u6307\u5B9A CMP \u8CC7\u6E90\u7684 JNDI \u540D\u7A31\u3002

#
# DeploymentHelper messages - ejb
#
#
#<NOI18N: DeploymentHelper>
#
ejb.DeploymentHelper.getconnection=\u53D6\u5F97 JNDI \u540D\u7A31 ''{0}'' \u7684\u9023\u7DDA\u3002

# The messages JDO76606 through JDO76615 that were originally here 
# have been moved to 
# cmp/support/ejb/src/com/sun/jdo/spi/persistence/support/ejb/ejbc/Bundle.properties
# As part of INF#
# So do not use these messages. 


#
#CMPHelper messages
#
ejb.cmphelper.nonmanaged=JDO76613\uFF1A\u5C0D CMPHelper \u7684\u5B58\u53D6\u7121\u6548\u3002\u6B64\u985E\u5225\u50C5\u7528\u65BC CMP \u652F\u63F4\uFF0C\u4E14\u4E0D\u61C9\u5728\u61C9\u7528\u7A0B\u5F0F\u4F3A\u670D\u5668\u4E4B\u5916\u88AB\u547C\u53EB\u3002

#
#SunTransactionHelper messages
#

# {0} class name
ejb.SunTransactionHelper.wrongdatasourcetype=JDO76616\uFF1ADataSource \u4E0D\u662F\u9810\u671F\u7684\u985E\u578B\u3002\u9810\u671F\uFF1Acom.sun.appserv.jdbc.DataSource \u53D6\u5F97\uFF1A{0}\u3002


###############################################################################
# <Generic messages. Add new messages to this section only if none of the above categories can be used.>
###############################################################################
#
# <NOI18N: generic>
#
vendor=Sun Microsystems
# majorVersion (minorVersion) buildDate
fullVersion={0} ({1}) {2}
#
# <NOI18N: This messages are used for JDOFatalInternalException from multiple places. No need to I18N>
#
core.generic.unknownfield=\u6B04\u4F4D {0} \u4E0D\u662F\u985E\u5225 {1} \u7684\u6210\u54E1\u3002
core.generic.unknownexception=\u767C\u751F\u4E0D\u660E\u7684\u7570\u5E38\u3002
core.generic.nullparam={0} \u53C3\u6578\u70BA\u7A7A\u503C\u3002
core.generic.notinstanceof=\u985E\u5225 {0} \u7684\u7269\u4EF6\u4E0D\u662F {1} \u7684\u57F7\u884C\u8655\u7406\u3002


###############################################################################
# <These messages are used from multiple places in code.It is absolutely necessary to cleanup code
# to use different messages >
###############################################################################
core.configuration.cantloadclass=\u7121\u6CD5\u8F09\u5165\u985E\u5225 {0}\u3002
sqlstore.exception.log=\u7570\u5E38\u3002
jdo.lifecycle.deleted.accessField=\u7121\u6CD5\u5B58\u53D6\u5DF2\u522A\u9664\u57F7\u884C\u8655\u7406\u7684\u6B04\u4F4D\u3002
