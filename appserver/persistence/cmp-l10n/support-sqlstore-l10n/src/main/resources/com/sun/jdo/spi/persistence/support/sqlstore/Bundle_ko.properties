#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

# Resource bundle for sqlstore runtime messages
# key consists of: <subpackage>.<class>.<method>.<description>
# <subpackage> - is optional, package under runtime
# <class> - class name
# <method> - method name
# <description> - short description (use _ to represent space)
# all keys should be in lowercase
#
# Please note that many package names and classnames have changed over time.
# Unfortunately, this file was not maintained to follow above convention.
# Please ignore if the package/class name does not match actual names as today.
#
#
# The message ID for a message in persistence is derived as follows:
# JDO<2_digit_bundle_prefix><1_digit_section_number><2_digit_serial_number>
#
# The 2 digit prefix for this bundle is 76.
#
# This file is divided into the following sections:
# Under each section, messages that need not be I18Ned are separated under NOI18N. All other messages
# need to be numbered.
# 1. JDO:  PersistenceManagerFactory/PersistenceManager/ExtentCollection/LifeCycle
# 2. Model
# 3. StateManager
# 4. sql generator components: RetrieveDesc, ResultDesc plus all the files under generator subdir
# 5. SQLStoreManager
# 6. Connection/Connectionpool/Transaction/DBVendorType
# 7. EJB integration.
# 8. Generic messages.
#
# When adding a new message:
# 1. Please make sure that you add the message to the end of appropriate section.
# 2. Please add message ID to any user visible message.
# 3. The message ID for the new message = message ID for the last numbered
#    message in a section + 1.
# 4. Please do not change the message ID for existing messages. These
#    numbers are potentially mapped to more explanation about the message for
#    the end user.
#

####################################################################################################
# <All the source files under subdir impl (PersistenceManagerFactory/PersistenceManager etc.) >
# Message ID Range: JDO76000 - JDO76099
####################################################################################################
jdo.persistencemanagerfactoryimpl.getpersistencemanager.error=JDO76000: \uAC19\uC740 \uD2B8\uB79C\uC7AD\uC158\uC5D0\uC11C \uC5EC\uB7EC \uC0AC\uC6A9\uC790 \uC774\uB984/\uBE44\uBC00\uBC88\uD638 \uC870\uD569\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerfactoryimpl.getpersistencemanager.notconfigured=JDO76001: PersistenceManagerFactory\uAC00 \uAD6C\uC131\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerfactoryimpl.notsupported=JDO76002: \uB0B4\uBD80 PersistenceManagerFactoryImpl\uC5D0\uB294 \uC791\uC5C5\uC774 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.acquireexclusivelock.interrupted=JDO76003: InterruptedException \uB54C\uBB38\uC5D0 \uB2E8\uB3C5 \uC7A0\uAE08\uC744 \uC5BB\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.acquiresharelock.failed=JDO76004: _readWriteCount\uAC00 0\uBCF4\uB2E4 \uC791\uAE30 \uB54C\uBB38\uC5D0 \uACF5\uC720 \uC7A0\uAE08\uC744 \uC5BB\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.acquiresharelock.interrupted=JDO76005: InterruptedException \uB54C\uBB38\uC5D0 \uACF5\uC720 \uC7A0\uAE08\uC744 \uC5BB\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.another_pm=JDO76006: \uAC1D\uCCB4\uAC00 \uB2E4\uB978 PersistenceManager\uC640 \uC5F0\uAD00\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.assertactivetransaction.error=JDO76007: \uC774 \uC9C0\uC18D\uC131 \uAD00\uB9AC\uC790\uC5D0 \uC5F0\uAD00\uB41C \uD2B8\uB79C\uC7AD\uC158\uC774 \uD65C\uC131\uD654\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.assertclosed.closed=JDO76008: PersistenceManager\uAC00 \uB2EB\uD614\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.assertpersistencecapable.error=JDO76009: {0} \uD074\uB798\uC2A4\uAC00 \uD22C\uBA85\uD55C \uC9C0\uC18D\uC131\uC6A9\uC73C\uB85C \uD5A5\uC0C1\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4. \uC2E4\uD589 \uC804\uC5D0 IDE\uC758 JAR \uB610\uB294 WAR \uD328\uD0A4\uC800\uB97C \uC0AC\uC6A9\uD574\uC11C \uC9C0\uC18D\uC131\uC774 \uC788\uB294 \uD074\uB798\uC2A4\uB97C \uD328\uD0A4\uC9C0\uD654\uD558\uC2ED\uC2DC\uC624. \uB610\uB294 \uC8FC \uD074\uB798\uC2A4\uC758 \uC2E4\uD589\uC790 \uC18D\uC131\uC744 IDE\uC5D0\uC11C \uC2E4\uD589\uD560 \uC9C0\uC18D\uC131 \uC2E4\uD589\uC790\uB85C \uC124\uC815\uD558\uC2ED\uC2DC\uC624.
jdo.persistencemanagerimpl.close.activetransaction=JDO76010: \uC774 \uC9C0\uC18D\uC131 \uAD00\uB9AC\uC790\uC5D0 \uC5F0\uAD00\uB41C \uC5F4\uB9B0 \uD2B8\uB79C\uC7AD\uC158\uC774 \uC788\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.fetchinstance.none=JDO76012: \uC774 ObjectId\uC5D0 \uD574\uB2F9\uD558\uB294 \uAC1D\uCCB4\uB97C \uCC3E\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.internaldeletepersistent.transient=JDO76014: \uBE44\uC9C0\uC18D\uC131 \uAC1D\uCCB4\uB97C \uC0AD\uC81C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.internalmakepersistent.dups=JDO76015: \uC774 PersistenceManager \uCE90\uC2DC\uC5D0 \uAC19\uC740 \uAE30\uBCF8 \uD0A4\uB97C \uAC00\uC9C4 \uC778\uC2A4\uD134\uC2A4\uAC00 \uC874\uC7AC\uD569\uB2C8\uB2E4.
jdo.persistencemanagerimpl.loadclassforoid.wrongoidclass=JDO76016: OID\uC5D0\uC11C \uAC1D\uCCB4 \uD074\uB798\uC2A4\uB97C \uAC80\uC0C9\uD558\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.newscoinstance.wrongclass=JDO76017: {0} \uD074\uB798\uC2A4\uC758 SCO \uC778\uC2A4\uD134\uC2A4\uB294 \uC801\uD569\uD55C \uC720\uD615\uC774 \uC544\uB2C8\uAE30 \uB54C\uBB38\uC5D0 \uC0DD\uC131\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.notprocessed=JDO76018: \uC21C\uD658 \uC885\uC18D\uC131 \uB54C\uBB38\uC5D0 \uC9C0\uC18D\uC131 \uC778\uC2A4\uD134\uC2A4\uB97C \uBE44\uC6B8 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.releaseexclusivelock.failed=JDO76019: _readWriteCount\uAC00 0\uBCF4\uB2E4 \uD06C\uAE30 \uB54C\uBB38\uC5D0 \uB2E8\uB3C5 \uC7A0\uAE08\uC744 \uD574\uC81C\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.releasesharelock.failed=JDO76020: _readWriteCount\uAC00 0\uC774\uAE30 \uB54C\uBB38\uC5D0 \uACF5\uC720 \uC7A0\uAE08\uC744 \uD574\uC81C\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerwrapper.invalidpm=JDO76021: PersistenceManagerWrapper\uAC00 \uB2EB\uD614\uC2B5\uB2C8\uB2E4.
jdo.extentcollection.constructor.invalidclass=JDO76022: \uBC94\uC704 \uBAA8\uC74C\uC758 ''{0}'' \uD074\uB798\uC2A4\uAC00 \uBD80\uC801\uD569\uD569\uB2C8\uB2E4.
jdo.extentcollection.constructor.nonpc=JDO76023: ''{0}'' \uD074\uB798\uC2A4\uB294 \uC9C0\uC18D\uC131\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
jdo.extentcollection.constructor.subclasses=JDO76024: \uBC94\uC704 \uBAA8\uC74C\uC5D0\uB294 \uD558\uC704 \uD074\uB798\uC2A4 true \uC635\uC158\uC774 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
jdo.extentcollection.illegalmodification=JDO76025: ''{0}'' \uD074\uB798\uC2A4\uC758 \uBC94\uC704 \uBAA8\uC74C\uC5D0 \uC798\uBABB\uB41C \uC218\uC815 \uC0AC\uD56D\uC774 \uC788\uC2B5\uB2C8\uB2E4.
jdo.extentcollection.methodnotsupported=JDO76026: \uBC94\uC704 \uBAA8\uC74C \uBA54\uC18C\uB4DC {0}\uC740(\uB294) \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
jdo.lifecycle.xactnotactive=JDO76027: \uC774 \uC791\uC5C5\uC744 \uC218\uD589\uD558\uB824\uBA74 \uD65C\uC131 \uD2B8\uB79C\uC7AD\uC158\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.
jdo.persistencemanagerimpl.newinstance.badsm=JDO76028: StateManager\uAC00 \uC644\uC804\uD788 \uAD6C\uC131\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4!
jdo.persistencemanagerimpl.setjtatransaction.notnulljta=JDO76029: \uB110\uC774 \uC544\uB2CC javax.transaction.Transaction \uBCC0\uACBD \uC2DC\uB3C4: {0}\uC5D0\uC11C {1}(\uC73C)\uB85C \uBCC0\uACBD\uD569\uB2C8\uB2E4.
jdo.persistencemanagerfactoryimpl.getpersistencemgr.closed=JDO76030: \uC774 javax.transaction.Transaction\uC758 PersistenceManager: {0}\uC774(\uAC00) \uC774\uBBF8 \uB2EB\uD600 \uC788\uAC70\uB098 \uCEE4\uBC0B\uB418\uB294 \uC911\uC785\uB2C8\uB2E4.
jdo.persistencemanagerfactoryimpl.registerpm.registered=JDO76031: javax.transaction.Transaction\uC758 \uC774 \uC778\uC2A4\uD134\uC2A4: {0}\uC740(\uB294) \uC774\uBBF8 \uB2E4\uB978 PersistenceManager: {1}\uC5D0 \uB4F1\uB85D\uB418\uC5B4 \uC788\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerimpl.verificationfailed=JDO76032: \uBC84\uC804 \uC77C\uAD00\uC131\uC744 \uAC00\uC9C4 \uC778\uC2A4\uD134\uC2A4\uAC00 \uB370\uC774\uD130 \uC800\uC7A5\uC18C\uB97C \uD655\uC778\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
jdo.persistencemanagerfactoryimpl.getversionconsistencycache.nullstore=JDO76033: StoreManager\uAC00 \uAD6C\uC131\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

#
# <NOI18N: LifeCycle>
#
sqlstore.state.lifecyclestate.changestate=LifeCycleState.changeState(), old state = {0}, new state = {1}.
sqlstore.state.lifecyclestate.initial=LifeCycleState.getLifeCycleState(), initial state = {0}.

#
# <NOI18N: PersistenceManager>
#
sqlstore.persistencemgr.acquireexclusivelock.count=acquireExclusiveLock(), thread {0} with _readWriteCount = {1}.
sqlstore.persistencemgr.acquireexclusivelock=acquireExclusiveock(), thread {0} going to wait.
sqlstore.persistencemgr.acquiresharedlock.rdwrcount=acquireShareLock(), thread {0} acquired shared lock with _readWriteCount ={1}.
sqlstore.persistencemgr.acquiresharedlock=acquireShareLock(), thread {0} going to wait.
sqlstore.persistencemgr.aftercompletion.process=---PersistenceManagerImpl.afterCompletion() process: {0}.
sqlstore.persistencemgr.aftercompletion=---PersistenceManagerImpl.afterCompletion() abort: {0}.
sqlstore.persistencemgr.assertactivetx.closed=--- PersistenceManagerImpl.assertActiveTransaction: Closed for  {0}.
sqlstore.persistencemgr.assertactivetx=--- PersistenceManagerImpl.assertActiveTransaction: {0}.
sqlstore.persistencemgr.assertisopen=--- PersistenceManagerImpl.assertIsOpen: Closed for {0}.
sqlstore.persistencemgr.beforecompletion=---PersistenceManagerImpl.beforeCompletion().
sqlstore.persistencemgr.cacheproperties=PersistenceManagerImpl cache properties: _txCacheInitialCapacity={0}, _flushedCacheInitialCapacity={1}, _flushedCacheLoadFactor={2}, _weakCacheInitialCapacity={3}, _weakCacheLoadFactor={4}.
sqlstore.persistencemgr.deregisterinstance.verified=---PersistenceManagerImpl.deregisterInstance() -- deregistered with verify.
sqlstore.persistencemgr.deregisterinstance.verify=---PersistenceManagerImpl.deregisterInstance() with verify SM -- oid: {0}  for PersistenceManager: {1}  and JTA: {2}.
sqlstore.persistencemgr.deregisterinstance=---PersistenceManagerImpl.deregisterInstance() oid: {0}  for PersistenceManager: {1}  and JTA: {2}.
sqlstore.persistencemgr.getbyobjid=---PersistenceManagerImpl.getObjectById() OID:{0}  for PersistenceManager: {1} and JTA: {2}.
sqlstore.persistencemgr.getcurrentwrapper=---PersistenceManagerImpl.getCurrentWrapper() > current: {0}.
sqlstore.persistencemgr.getobjid.notpc=---PersistenceManagerImpl.getObjectId() NOT PC: {0} - PersistenceManager: {1}.
sqlstore.persistencemgr.getobjid.notpm=---PersistenceManagerImpl.getObjectId() NOT PM: {0} for PersistenceManager: {1}  and JTA: {2}.
sqlstore.persistencemgr.getobjid= :{0} ---PersistenceManagerImpl.getObjectId() PC: {1} for PersistenceManager: {2} and JTA: {3}.
sqlstore.persistencemgr.internalcloneoid.old=---PersistenceManagerImpl.internalCloneOid(): old: {0}  new: {1} same: {2}.
sqlstore.persistencemgr.internalcloneoid=---PersistenceManagerImpl.internalCloneOid() error: {0}.
sqlstore.persistencemgr.isactivetx=---PersistenceManagerImpl.isActiveTransaction() : {0}.
sqlstore.persistencemgr.isnontxread=---PersistenceManagerImpl.isNontransactionalRead() : {0}.
sqlstore.persistencemgr.isoptimistic=---PersistenceManagerImpl.isOptimisticTransaction() : {0}.
sqlstore.persistencemgr.loadingclass=Loading ... ClassName: {0}.
sqlstore.persistencemgr.loadingfile=Loading ... FileName: {0} {1} {2}.
sqlstore.persistencemgr.makepersistent.done=---PersistenceManagerImpl.makePersistent() {0}  finished for: {1}  and JTA: {2}.
sqlstore.persistencemgr.makepersistent= {0} ---PersistenceManagerImpl.makePersistent() PC: {1} for PersistenceManager: {2} and JTA: {3}.
sqlstore.persistencemgr.newcollection=---PersistenceManagerImpl.newCollectionInstanceInternal() type: {0}.
sqlstore.persistencemgr.popcurrentwrapper=---PersistenceManagerImpl.popCurrentWrapper() > current: {0}  prev: {1}.
sqlstore.persistencemgr.pushcurrentwrapper=---PersistenceManagerImpl.pushCurrentWrapper() > current: {0}  new: {1}.
sqlstore.persistencemgr.registerinstance= {0} ---PersistenceManagerImpl.registerInstance() oid/sm: {1}/{2}  for PersistenceManager: {3}  and JTA: {4}.
sqlstore.persistencemgr.registerinstancein_txc=registerInstance in TXC :{0} / {1} for PersistenceManager: {2} and JTA: {3}.
sqlstore.persistencemgr.registerinstancein_wkc=registerInstance in WKC.
sqlstore.persistencemgr.releaseexclusivelock=releaseExclusiveock(), thread {0} with _readWriteCount = {1}.
sqlstore.persistencemgr.releasesharedlock=releaseShareLock(), thread {0} with _readWriteCount = {1}.
sqlstore.persistencemgr.replacingdeletedinstance=\uAC1D\uCCB4 ID {0}\uC5D0 \uB300\uD574 \uC0AD\uC81C\uB41C \uC778\uC2A4\uD134\uC2A4\uB97C \uC0C8 \uC778\uC2A4\uD134\uC2A4\uB85C \uBC14\uAFB8\uB294 \uC911
sqlstore.persistencemgr.setkeyfields=---PersistenceManagerImpl.setKeyFields() error: {0}.
#
# <NOI18N: PersistenceManagerFactory>
#
sqlstore.sqlpersistencemgrfactory.getfrompool.pmt=<--SQLPersistenceManagerFactory.getFromPool() PM: {0} - JTA {1}.
sqlstore.sqlpersistencemgrfactory.getfrompool=<--SQLPersistenceManagerFactory.getFromPool().
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.found= {0} <->SQLPersistenceManagerFactory.getPersistenceManager() found javax.transaction.Transaction: {1}.
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.jdotx.notfound=<->SQLPersistenceManagerFactory.getPersistenceManager() not found JDO Transaction.
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.jdotx=<->SQLPersistenceManagerFactory.getPersistenceManager() JDO Transaction: {0}.
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.pmclosedfor= {0} <->SQLPersistenceManagerFactory.getPersistenceManager() PM is closed for: {1}.
sqlstore.sqlpersistencemgrfactory.getpersistencemgr.pmt= {0} <->SQLPersistenceManagerFactory.getPersistenceManager() : {1} - JTA: {2}.
sqlstore.sqlpersistencemgrfactory.getpersistencemgr=:{0} -->SQLPersistenceManagerFactory.getPersistenceManager().
sqlstore.sqlpersistencemgrfactory.init=---SQLPersistenceManagerFactory.initialize().
sqlstore.sqlpersistencemgrfactory.pmCacheBucketSize=---SQLPersistenceManagerFactory pmCacheBucketSize = {0}.
sqlstore.sqlpersistencemgrfactory.pmCacheInitialCapacity=---SQLPersistenceManagerFactory pmCacheInitialCapacity = {0}.
sqlstore.sqlpersistencemgrfactory.registerpersistencemgr.pmt=<->SQLPersistenceManagerFactory.registerPersistenceManager() PM: {0} - JTA Tx: {1}.
sqlstore.sqlpersistencemgrfactory.releasepm.pmt=---SQLPersistenceManagerFactory.releasePersistenceManager() PM:{0} - JTA Tx: {1}.
sqlstore.sqlpersistencemgrfactory.returnToPool=<--SQLPersistenceManagerFactory.returnToPool().


###############################################################################
# <Model>
# Message ID Range: JDO76100 - JDO76199
###############################################################################
core.configuration.columnnotable=JDO76100: \uC5F4 \uAE30\uC220\uC790\uC5D0 \uC801\uD569\uD55C \uD14C\uC774\uBE14 \uAE30\uC220\uC790\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
core.configuration.fieldnotable=JDO76101: {0} \uD544\uB4DC\uB294 \uC5B4\uB5A4 \uD14C\uC774\uBE14\uC5D0\uB3C4 \uC5F0\uAD00\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
core.configuration.fieldnotmapped=JDO76102: {1} \uD074\uB798\uC2A4\uC758 \uC9C0\uC18D\uC131 \uD544\uB4DC {0}\uC774(\uAC00) \uB9E4\uD551\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
core.configuration.iddescnofield=JDO76103: SqlIDDesc \uAC1D\uCCB4\uAC00 \uC81C\uB300\uB85C \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4. \uC0AC\uC6A9\uD560 \uC218 \uC788\uB294 \uD544\uB4DC \uAE30\uC220\uC790\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
core.configuration.loadfailed.class=JDO76104: {0} \uD074\uB798\uC2A4\uC758 \uAD6C\uC131\uC744 \uB85C\uB4DC\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
core.configuration.noneexistentpkfield=JDO76105: ObjectId \uD074\uB798\uC2A4 {1}\uC758 {0} \uD544\uB4DC\uAC00 PersistenceCapable \uD074\uB798\uC2A4 {2}\uC5D0 \uC874\uC7AC\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
core.configuration.unsupportedconsistencylevel=JDO76106: {0} \uD074\uB798\uC2A4\uC5D0 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uB294 \uC77C\uAD00\uC131 \uB808\uBCA8\uC774 \uC788\uC2B5\uB2C8\uB2E4. \uD604\uC7AC \uC9C0\uC6D0\uB418\uB294 \uC77C\uAD00\uC131 \uB808\uBCA8\uC740 "none", "check-modified-at-commit", "lock-when-loaded" \uBC0F "check-version-of-accessed-instances"\uC785\uB2C8\uB2E4.
core.configuration.validationfailed=JDO76107: {0} \uD074\uB798\uC2A4\uC758 \uB9E4\uD551\uC774 \uBD80\uC801\uD569\uD569\uB2C8\uB2E4.\n{1}.
core.configuration.validationproblem=JDO76108: {0} \uD074\uB798\uC2A4\uC5D0\uC11C \uAC80\uC99D \uC624\uB958 \uBC1C\uC0DD: {1}
#
# <FieldDesc validation at runtime>
#
core.fielddesc.minvalue=JDO76109: \uAC12: {0}\uC740(\uB294) \uD544\uB4DC \uC720\uD615 {2}\uC5D0 \uD5C8\uC6A9\uB418\uB294 \uCD5C\uC18C\uAC12: {1}\uBCF4\uB2E4 \uC791\uC2B5\uB2C8\uB2E4.
core.fielddesc.maxvalue=JDO76110: \uAC12: {0}\uC740(\uB294) \uD544\uB4DC \uC720\uD615 {2}\uC5D0 \uD5C8\uC6A9\uB418\uB294 \uCD5C\uB300\uAC12: {1}\uBCF4\uB2E4 \uD07D\uB2C8\uB2E4.
core.configuration.noneexistentvcfield=JDO76111: {0} \uD544\uB4DC\uB294 \uBC84\uC804 \uD544\uB4DC\uB85C \uD45C\uC2DC\uB418\uC9C0\uB9CC PersistenceCapable \uD074\uB798\uC2A4 {1}\uC5D0\uB294 \uC874\uC7AC\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
core.configuration.loadfailed.field=JDO76112: {1} \uD074\uB798\uC2A4\uC758 {0} \uD544\uB4DC\uC5D0 \uB300\uD55C \uAD6C\uC131\uC744 \uB85C\uB4DC\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.

#
# <NOI18N: model>
#
sqlstore.model.classdesc.assocrelatedfield=associated relationship field = {0}.
sqlstore.model.classdesc.createsqldesc=creating SqlIDDesc from {0}.
sqlstore.model.classdesc.fieldinfo=field name = {0}, id= {1}.
sqlstore.model.classdesc.general={0}.{1} =>{2}
sqlstore.model.classdesc.getlocalfielddesc=<-> SqlPersistenceDesc.getLocalFieldDesc(), class ={0} added hidden field {1}  for column {2}.
sqlstore.model.classdesc.loadedclass=Successfully loaded oid class= {0}.
sqlstore.model.classdesc.persistconfiginit.exit=<-- SqlPersistenceConfig.initialize().
sqlstore.model.classdesc.persistconfiginit=--> SqlPersistenceConfig.initialize(), class = {0}.
sqlstore.model.classdesc.pkfield=PK \uD544\uB4DC = {0}.
sqlstore.model.classdesc.primarytrackedfield={0} \uD544\uB4DC\uAC00 \uCD94\uC801\uB41C \uAE30\uBCF8 \uD544\uB4DC\uC785\uB2C8\uB2E4.
sqlstore.model.classdesc.unsetconcurrencychk=lf {0}\uC5D0 \uB300\uD55C IN_CONCURRENCY_CHECK \uC18D\uC131 \uC124\uC815\uC744 \uD574\uC81C\uD558\uB294 \uC911
sqlstore.model.classdesc.unsetrefintegrityupdate=ff {0}\uC5D0 \uB300\uD55C REF_INTEGRITY_UPDATES \uC18D\uC131 \uC124\uC815\uC744 \uD574\uC81C\uD558\uB294 \uC911
sqlstore.model.classdesc.vcfield=\uBC84\uC804 \uC77C\uAD00\uC131 \uD544\uB4DC = {0}.
sqlstore.model.fielddesc.addingfield={0} \uD544\uB4DC\uAC00 {1} \uD544\uB4DC\uC5D0 \uC758\uD574 \uCD94\uC801\uB418\uB3C4\uB85D \uCD94\uAC00\uD558\uB294 \uC911
sqlstore.model.fielddesc.convertvalue.from_to=convertValue: {0} From: {1} To: {2}.
sqlstore.model.fielddesc.convertvalue.hidden=convertValue: hidden {0} ... return.
sqlstore.model.fielddesc.convertvalue=convertValue: NULL ... return.
sqlstore.model.fielddesc.fieldname={0} = {1}.
sqlstore.model.fielddesc.setupdesc=setupDesc(): fieldName {0} fieldType {1}.
sqlstore.model.configcacheimpl.size_before=\uC815\uB9AC \uC804 {0} \uD06C\uAE30: {1}.
sqlstore.model.configcacheimpl.size_after=\uC815\uB9AC \uD6C4 {0} \uD06C\uAE30: {1}.


###############################################################################
# <StateManager>
# Message ID Range: JDO76200 - JDO76299
###############################################################################
core.statemanager.anotherowner=JDO76200: \uB2E4\uB978 \uAC1D\uCCB4\uC5D0\uC11C \uC18C\uC720\uD55C SCO \uC778\uC2A4\uD134\uC2A4\uB294 \uC9C0\uC815\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
core.statemanager.cantnewoid=JDO76201: {0} \uD074\uB798\uC2A4\uC758 \uC0C8 \uAE30\uBCF8 \uD0A4 \uC778\uC2A4\uD134\uC2A4\uB97C \uC0DD\uC131\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
core.statemanager.cantschedulejointable=JDO76202: \uAD00\uACC4 \uD544\uB4DC \uC124\uBA85\uC774 \uB110\uC774\uAE30 \uB54C\uBB38\uC5D0 {0} \uD074\uB798\uC2A4\uC640 {1}\uC758 \uC870\uC778 \uD14C\uC774\uBE14 \uD56D\uBAA9\uC744 \uC608\uC57D\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
core.statemanager.cantsetkeyfield=JDO76203: \uAE30\uBCF8 \uD0A4 \uD544\uB4DC {0}\uC758 \uAC12\uC744 \uC124\uC815\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
core.statemanager.conflictingvalues=JDO76204: \uAC19\uC740 \uC5F4\uC5D0 \uB9E4\uD551\uB41C {0} \uD544\uB4DC \uAC12\uACFC {1} \uD544\uB4DC \uAC12 \uC0AC\uC774\uC5D0 \uCDA9\uB3CC\uC774 \uC788\uC2B5\uB2C8\uB2E4.
core.statemanager.getfieldfailed=JDO76205: \uD544\uB4DC\uB97C \uAC00\uC838\uC624\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
core.statemanager.invalidpk=JDO76206: \uC9C0\uC18D\uC131\uC774 \uC788\uB294 \uD074\uB798\uC2A4 {1}\uC758 \uC778\uC2A4\uD134\uC2A4\uB97C \uC7AC\uB85C\uB4DC\uD560 \uB54C \uBD80\uC801\uD569\uD55C \uB110 \uAE30\uBCF8 \uD0A4 \uD544\uB4DC {0}\uC774(\uAC00) \uC0AC\uC6A9\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uC778\uC2A4\uD134\uC2A4\uC758 ObjectId\uB294 {2}\uC785\uB2C8\uB2E4.
core.statemanager.nopkupdate=JDO76207: \uAE30\uBCF8 \uD0A4 \uD544\uB4DC \uC5C5\uB370\uC774\uD2B8\uB294 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
core.statemanager.nopm=JDO76208: \uC0C1\uD0DC \uAD00\uB9AC\uC790\uC5D0 \uC9C0\uC18D\uC131 \uAD00\uB9AC\uC790\uC5D0 \uB300\uD55C \uCC38\uC870\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
core.statemanager.notnavigable=JDO76209: {1} \uD074\uB798\uC2A4\uC758 {0} \uD544\uB4DC\uC5D0 \uC561\uC138\uC2A4\uB97C \uC2DC\uB3C4\uD588\uC2B5\uB2C8\uB2E4. \uC774 \uD544\uB4DC\uB294 \uC0AC\uC804\uC5D0 \uC778\uC2A4\uD134\uC2A4\uD654\uAC00 \uB418\uC9C0 \uC54A\uC558\uC73C\uBA70 \uC774 \uD074\uB798\uC2A4\uB294 \uB3D9\uC801 \uD0D0\uC0C9\uC744 \uD5C8\uC6A9\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uD074\uB798\uC2A4\uB97C \uAC80\uC0C9\uD560 \uB54C \uD544\uB4DC\uB97C \uC694\uCCAD\uD558\uAC70\uB098 \uB3D9\uC801 \uD0D0\uC0C9\uC744 \uD5C8\uC6A9\uD558\uC5EC \uC561\uC138\uC2A4 \uC2DC \uC790\uB3D9\uC73C\uB85C \uAC80\uC0C9\uD560 \uC218 \uC788\uB3C4\uB85D \uD574\uC57C \uD569\uB2C8\uB2E4.
core.statemanager.objectnotfound=JDO76210: \uB370\uC774\uD130 \uC800\uC7A5\uC18C\uC5D0 \uAC1D\uCCB4\uAC00 \uC874\uC7AC\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
core.statemanager.poshiddenindex=JDO76211: \uC228\uACA8\uC9C4 \uD544\uB4DC\uC5D0 \uB300\uD55C \uC0C9\uC778\uC740 \uC74C\uC218 \uAC12\uC774\uC5B4\uC57C \uD558\uC9C0\uB9CC {0} \uC0C9\uC778\uC744 \uAC00\uC838\uC654\uC2B5\uB2C8\uB2E4.
core.statemanager.readonly=JDO76212: {1} \uD074\uB798\uC2A4\uC758 \uC77D\uAE30 \uC804\uC6A9 \uD544\uB4DC {0}\uC744(\uB97C) \uC218\uC815\uD558\uB824\uACE0 \uC2DC\uB3C4\uD588\uC2B5\uB2C8\uB2E4.
core.statemanager.releaselock.wrongthread=JDO76213: \uC774 {0} \uC2A4\uB808\uB4DC\uC5D0\uB294 StateManager \uC7A0\uAE08\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.
core.statemanager.setfieldfailed=JDO76214: \uD544\uB4DC\uB97C \uC124\uC815\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
core.statemanager.wrongusageforoverlappingpkfkdelete=JDO76215: \uAD00\uB9AC \uB300\uC0C1 \uAD00\uACC4\uC5D0\uC11C \uC778\uC2A4\uD134\uC2A4\uB97C \uC81C\uAC70\uD558\uB824\uB294 \uC798\uBABB\uB41C \uC2DC\uB3C4\uAC00 \uC788\uC5C8\uC2B5\uB2C8\uB2E4. \uAD00\uACC4\uB294 \uB2E4\uB978 \uCABD\uC758 \uAE30\uBCF8 \uD0A4 \uC5F4\uC5D0\uC11C \uC815\uC758\uB429\uB2C8\uB2E4. \uBAA8\uC74C\uC5D0\uC11C \uC81C\uAC70 \uC791\uC5C5\uC744 \uC218\uD589\uD558\uB824\uBA74 \uB2E4\uB978 \uCABD \uC5F4\uC744 \uC5C5\uB370\uC774\uD2B8\uD574\uC57C \uD558\uBA70, \uAE30\uBCF8 \uD0A4 \uC5C5\uB370\uC774\uD2B8\uB294 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uB530\uB77C\uC11C \uAE30\uBCF8 \uD0A4\uB85C \uC815\uC758\uB41C \uAD00\uB9AC \uB300\uC0C1 \uAD00\uACC4 \uBAA8\uC74C\uC5D0\uC11C \uC778\uC2A4\uD134\uC2A4\uB97C \uC81C\uAC70\uD558\uB824\uBA74 \uBA85\uC2DC\uC801 \uC0AD\uC81C \uB610\uB294 \uBAA8\uB450 \uC0AD\uC81C\uB97C \uD1B5\uD574 \uC778\uC2A4\uD134\uC2A4\uB97C \uC0AD\uC81C\uD574\uC57C \uD569\uB2C8\uB2E4.
core.statemanager.toomanyrows=JDO76215: {0} \uD074\uB798\uC2A4\uC5D0 \uB9E4\uD551\uB41C \uD14C\uC774\uBE14 \uC911 \uD558\uB098\uC5D0 \uB300\uD574 \uB450 \uAC1C \uC774\uC0C1\uC758 \uD589\uC774 \uBC18\uD658\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uD074\uB798\uC2A4\uC5D0 \uB9E4\uD551\uB41C \uAC01 \uD14C\uC774\uBE14\uC5D0\uB294 \uAC1D\uCCB4\uC758 \uAC01 \uC778\uC2A4\uD134\uC2A4\uB97C \uC704\uD55C \uD589\uC774 \uD558\uB098\uB9CC \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.
core.statemanager.copyFields.mismatch=JDO76216: \uC11C\uB85C \uB2E4\uB978 \uC720\uD615\uC758 \uC778\uC2A4\uD134\uC2A4: {0}\uACFC(\uC640) {1}\uC744(\uB97C) \uAD00\uB9AC\uD558\uB294 \uD544\uB4DC\uB97C \uD558\uB098\uC758 StateManager\uC5D0\uC11C \uB2E4\uB978 StateManager\uB85C \uBCF5\uC0AC\uD558\uB824\uB294 \uC2DC\uB3C4.

#
# <NOI18N: StateManager>
#
sqlstore.sqlstatemanager.adddependency=<-> SQLStateManager.addDependency(), this StateManager: {0}, other StateManager: {1}.
sqlstore.sqlstatemanager.addupdate=<-> SQLStateManager.addUpdatedForeignReference(), lobj={0}, f={1}, fobj={2}, refCount={3}.
sqlstore.sqlstatemanager.applyupdates.exit=<-- SqlStateManager.applyUpdates().
sqlstore.sqlstatemanager.applyupdates=--> SqlStateManager.applyUpdates(), field = {0}.
sqlstore.sqlstatemanager.clearpersistencefields.exit=<--- SqlStateManager.clearPersistenceFields().
sqlstore.sqlstatemanager.clearpersistencefields=--> SqlStateManager.clearPersistenceFields().
sqlstore.sqlstatemanager.copychanges.exit=<-- SQLStateManager.copyChanges().
sqlstore.sqlstatemanager.copychanges=--> SQLStateManager.copyChanges(), state manager = {0}.
sqlstore.sqlstatemanager.deletepersistence=<-> SqlStateManager.deletePersistence(), type = {0}.
sqlstore.sqlstatemanager.getbeforeimage.exit=<-- SqlStateManager.getBeforeImage().
sqlstore.sqlstatemanager.getbeforeimage=--> SqlStateManager.getBeforeImage(), type = {0}.
sqlstore.sqlstatemanager.isbeforeimagerequired=isBeforeImageRequired : {0}.
sqlstore.sqlstatemanager.loadforread.exit=<-- SQLStateManager.loadForRead().
sqlstore.sqlstatemanager.loadforread=--> SQLStateManager.loadForRead().
sqlstore.sqlstatemanager.loadforupdate.exit=<-- SQLStateManager.loadForUpdate().
sqlstore.sqlstatemanager.loadforupdate=--> SQLStateManager.loadForUpdate().
sqlstore.sqlstatemanager.loggingfield=logging field = {0} with value = {1}.
sqlstore.sqlstatemanager.makedirty.fixscocollection=--- SqlStateManager.makeDirty(), fix SCOCollection.
sqlstore.sqlstatemanager.makedirty.fixscodate=--- SqlStateManager.makeDirty(), fix SCODate.
sqlstore.sqlstatemanager.makedirty=--> SqlStateManager.makeDirty(), field = {0}.
sqlstore.sqlstatemanager.makedirtyfield=marked dirty field = {0}.
sqlstore.sqlstatemanager.makepersistence=<-> SqlStateManager.makePersistence(), type = {0}.
sqlstore.sqlstatemanager.makepresent=--> SqlStateManager.makePresent(), field = {0}.
sqlstore.sqlstatemanager.marking=marking: {0} as present.
sqlstore.sqlstatemanager.newtype=New Type: {0}.
sqlstore.sqlstatemanager.nosuchmethodexcep.clone=Exception : {0}  clone ... for type {1}.
sqlstore.sqlstatemanager.preparegetfield.exit=<-- SqlStateManager.prepareGetField().
sqlstore.sqlstatemanager.preparegetfield=--> SqlStateManager.prepareGetField(), name = {0}.
sqlstore.sqlstatemanager.preparesetfield.exit=<-- SQLStateManager.prepareSetField().
sqlstore.sqlstatemanager.preparesetfield=--> SQLStateManager.prepareSetField(), name = {0}.
sqlstore.sqlstatemanager.preparetoupdateph1.exit=<-- SqlStateManager.prepareToUpdateI().
sqlstore.sqlstatemanager.preparetoupdateph1=--> SqlStateManager.prepareToUpdatePhaseI(), type = {0}.
sqlstore.sqlstatemanager.preparetoupdateph2.exit=<-- SqlStateManager.prepareToUpdateII().
sqlstore.sqlstatemanager.preparetoupdateph2=--> SqlStateManager.prepareToUpdatePhaseII(), type = {0}.
sqlstore.sqlstatemanager.preparetoupdateph3.exit=<-- SqlStateManager.prepareToUpdateIII().
sqlstore.sqlstatemanager.preparetoupdateph3=--> SqlStateManager.prepareToUpdatePhaseIII(), type = {0}.
sqlstore.sqlstatemanager.prepareupdatefield.exit=<-- SQLStateManager.prepareUpdateField().
sqlstore.sqlstatemanager.prepareupdatefield=--> SQLStateManager.prepareUpdateField(), name = {0} for state: {1}.
sqlstore.sqlstatemanager.prepareupdatefieldspl.exit=<-- SQLStateManager.prepareUpdateFieldSpecial().
sqlstore.sqlstatemanager.prepareupdatefieldspl=--> SQLStateManager.prepareUpdateFieldSpecial, name = {0} for state: {1}.
sqlstore.sqlstatemanager.processcollectionupdate.exit=<-- SQLStateManager.processCollectionUpdates().
sqlstore.sqlstatemanager.processcollectionupdate=--> SQLStateManager.processCollectionUpdates(), beforeList={0}, afterlist={1}.
sqlstore.sqlstatemanager.processforeign=process foreign field ={0}.
sqlstore.sqlstatemanager.processforeignfield.remove=-- SQLStateManager.processForeignField(): was Collection - remove.
sqlstore.sqlstatemanager.processforeignfield.remove_from_bi=-- SQLStateManager.processForeignField(): is SCOCollection - remove from BI.
sqlstore.sqlstatemanager.processforeignfield.reset=-- SQLStateManager.processForeignField(): was SCOCollection - reset.
sqlstore.sqlstatemanager.processforeignfield=-- SQLStateManager.processForeignField(): value: {0} type: {1}.
sqlstore.sqlstatemanager.realizefield.exit=<-- SqlStateManager.realizeField().
sqlstore.sqlstatemanager.realizefield=--> SqlStateManager.realizeField(), name = {0}.
sqlstore.sqlstatemanager.realizeforeignfield.exit=<-- SqlStateManager.realizeField(), field realized = {0}.
sqlstore.sqlstatemanager.realizeforeignfield=--> SqlStateManager.realizeField(), name = {0}.
sqlstore.sqlstatemanager.recordingfield=recording field = {0}.
sqlstore.sqlstatemanager.refreshpersistent.exit=<-- SqlStateManager.refreshPersistent().
sqlstore.sqlstatemanager.refreshpersistent=--> SqlStateManager.refreshPersistence(), type = {0}.
sqlstore.sqlstatemanager.reload.exit=<-- SqlStateManager.reload(FieldDesc).
sqlstore.sqlstatemanager.reload=--> SqlStateManager.reload(FieldDesc), type = {0}, field = {1}.
sqlstore.sqlstatemanager.removeupdate=<-> SQLStateManager.removeUpdatedForeignReference(), lobj={0}, f={1}, fobj={2}, refCount={3}.
sqlstore.sqlstatemanager.replaceobjectfield.unsetsco=-- SqlStateManager.replaceObjectField(), unset SCO.
sqlstore.sqlstatemanager.replaceobjectfield=-- SqlStateManager.replaceObjectField(), field = {0}, type= {1}.
sqlstore.sqlstatemanager.reset=--> SqlStateManager.reset(), retValues = {0}, wasNew: {1}, keepState: {2}.
sqlstore.sqlstatemanager.resettingcollection=\uBAA8\uC74C \uC7AC\uC124\uC815 \uC911
sqlstore.sqlstatemanager.resettingdate=\uB0A0\uC9DC \uC7AC\uC124\uC815 \uC911
sqlstore.sqlstatemanager.resolvedependencies=<-> SQLStateManager.resolveDependencies(), obj={0}.
sqlstore.sqlstatemanager.resolvedependency=<-> SQLStateManager.resolveDependency(), dependency resolved: lobj={0}, f={1}, fobj={2}.
sqlstore.sqlstatemanager.retrieve.exit=<-- SqlStateManager.retrieve().
sqlstore.sqlstatemanager.retrieve=--> SqlStateManager.retrieve(), name = {0}.
sqlstore.sqlstatemanager.retrieveforeign.exit=<-- SqlStateManager.retrieveForeign().
sqlstore.sqlstatemanager.retrieveforeign=--> SqlStateManager.retrieveForeign(), name = {0}.
sqlstore.sqlstatemanager.unsetmask=unsetting masks for field = {0}.
sqlstore.sqlstatemanager.unconditionalreload.exit=<-- SqlStateManager.reload().
sqlstore.sqlstatemanager.unconditionalreload=--> SqlStateManager.reload(), type = {0}.
sqlstore.sqlstatemanager.updatebeforeimage=<-> SQLStateManager.updateBeforeImage(), name = {0}, value = {1}.
sqlstore.sqlstatemanager.updateobjfield.exit=<-- SQLStateManager.updateObjectField().
sqlstore.sqlstatemanager.updateobjfield=--> SQLStateManager.updateObjectField(), name = {0}, type = {1}.
sqlstore.sqlstatemanager.updatepersistent.exit=<-- SqlStateManager.updatePersistent().
sqlstore.sqlstatemanager.updatepersistent.immediateflush=<--> SqlStateManager.updatePersistent(), immediate flush required: obj={0}, next={1}.
sqlstore.sqlstatemanager.updatepersistent.skipped=<--> SqlStateManager.updatePersistent() skipped, type ={0}, obj= {1}.
sqlstore.sqlstatemanager.updatepersistent=--> SqlStateManager.updatePersistent(), type = {0}.
sqlstore.sqlstatemanager.updatetrackedfields.exit=<-- updateTrackedFields().
sqlstore.sqlstatemanager.updatetrackedfields=--> updateTrackedFields(), f = {0} value = {1} fieldToIgnore = {2}.


###############################################################################
# <sql generator components: All the source files under sql.>
# Message ID Range: JDO76300 - JDO76399
###############################################################################
core.constraint.duporderby=JDO76300: \uC81C\uC57D \uC870\uAC74\uC740 "order by" \uC81C\uC57D \uC870\uAC74\uC5D0 \uC774\uBBF8 \uC9C0\uC815\uB41C \uD544\uB4DC {0}\uC5D0 \uB300\uD55C "order by"\uC785\uB2C8\uB2E4.
core.constraint.fielddisallowed=JDO76301: fieldName \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uC9C0\uC815\uB418\uC5C8\uC9C0\uB9CC {0} \uC791\uC5C5\uC5D0\uB294 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
core.constraint.fieldrequired=JDO76302: fieldName \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uB204\uB77D\uB418\uC5C8\uC9C0\uB9CC {0} \uC791\uC5C5\uC5D0\uB294 \uD544\uB4DC\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.
core.constraint.illegalParameterInfo=JDO76303: OP_PARAMETER\uC5D0 \uB300\uD55C addConstraint()\uB294 ParameterInfo \uC720\uD615\uC758 \uAC12\uACFC \uD568\uAED8 \uD638\uCD9C\uD574\uC57C \uD569\uB2C8\uB2E4.
core.constraint.illegalnode=JDO76304: SqlConstraint \uC2A4\uD0DD\uC5D0 \uC798\uBABB\uB41C \uC81C\uC57D \uC870\uAC74 \uB178\uB4DC {0}\uC774(\uAC00) \uC788\uC2B5\uB2C8\uB2E4.
core.constraint.illegalop=JDO76305: \uC791\uC5C5 \uB9E4\uAC1C\uBCC0\uC218\uC5D0 \uC798\uBABB\uB41C \uAC12 {0}\uC774(\uAC00) \uC788\uC2B5\uB2C8\uB2E4.
core.constraint.needfieldnamenode=JDO76306: \uC81C\uC57D \uC870\uAC74 \uC2A4\uD0DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. \uD544\uB4DC \uC774\uB984\uC774 \uC608\uC0C1\uB429\uB2C8\uB2E4.
core.constraint.needfieldnode=JDO76307: \uC81C\uC57D \uC870\uAC74 \uC2A4\uD0DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. \uD544\uB4DC \uC124\uBA85\uC774 \uC608\uC0C1\uB429\uB2C8\uB2E4.
core.constraint.needvalnode=JDO76308: \uC81C\uC57D \uC870\uAC74 \uC2A4\uD0DD\uC5D0 \uC624\uB958\uAC00 \uC788\uC2B5\uB2C8\uB2E4. \uAC12\uC774 \uC608\uC0C1\uB429\uB2C8\uB2E4.
core.constraint.stackempty=JDO76309: \uC81C\uC57D \uC870\uAC74 \uC2A4\uD0DD\uC774 \uBE44\uC5B4 \uC788\uC2B5\uB2C8\uB2E4. \uC5F0\uC0B0\uC790 \uC218\uC5D0 \uBE44\uD574 \uAC12\uC774 \uBD80\uC871\uD569\uB2C8\uB2E4.
core.constraint.unknownfield=JDO76310: \uAC80\uC0C9 \uAE30\uC220\uC790\uC5D0 \uC9C0\uC815\uB41C \uD544\uB4DC {0}\uC740(\uB294) {1} \uD074\uB798\uC2A4\uC758 \uBA64\uBC84\uAC00 \uC544\uB2D9\uB2C8\uB2E4.
core.constraint.valdisallowed=JDO76311: \uAC12 \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uC9C0\uC815\uB418\uC5C8\uC9C0\uB9CC {0} \uC791\uC5C5\uC5D0\uB294 \uD5C8\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
core.constraint.valrequired=JDO76312: \uAC12 \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uB204\uB77D\uB418\uC5C8\uC9C0\uB9CC {0} \uC791\uC5C5\uC5D0\uB294 \uAC12\uC774 \uD544\uC694\uD569\uB2C8\uB2E4.
sqlstore.resultdesc.errorgettingvalefromresulset=JDO76313: \uC0C9\uC778 {0}\uC758 \uACB0\uACFC \uC9D1\uD569\uC5D0\uC11C resultType {1} columnSqlType {2} \uC720\uD615\uC758 \uAC12\uC744 \uAC00\uC838\uC624\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uC608\uC678 \uC0AC\uD56D: {3}
sqlstore.resultdesc.foreignfieldprojection=JDO76314: {0}\uC5D0 \uB300\uD55C \uC9C8\uC758\uC5D0\uB294 \uAD00\uACC4 \uD544\uB4DC\uC5D0 \uB300\uD55C \uD504\uB85C\uC81D\uC158\uC774 \uC5C6\uC5B4\uC57C \uD569\uB2C8\uB2E4.
sqlstore.resultdesc.unknownfieldtype=JDO76317: \uC54C \uC218 \uC5C6\uB294 \uD544\uB4DC \uC720\uD615 {0}\uC774(\uAC00) \uC788\uC2B5\uB2C8\uB2E4.
sqlstore.retrievedesc.toomanyprojections=JDO76318: RetrieveDesc\uC5D0 \uB300\uD55C \uD504\uB85C\uC81D\uC158\uC744 \uB450 \uAC1C \uC774\uC0C1 \uC124\uC815\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
sqlstore.retrievedesc.toomanyresulttypes=JDO76319: RetrieveDesc\uC5D0 \uB300\uD55C \uACB0\uACFC \uC720\uD615\uC744 \uB450 \uAC1C \uC774\uC0C1 \uC124\uC815\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
sqlstore.selectstatement.noupdatelocksupport=JDO76320: \uC774 \uC9C8\uC758\uC5D0 \uD3EC\uD568\uB41C \uAC1D\uCCB4 \uC720\uD615 \uC911 \uD558\uB098\uC758 \uC77C\uAD00\uC131 \uB808\uBCA8\uC774 "lock-when-loaded"\uC785\uB2C8\uB2E4. \uC774 \uC77C\uAD00\uC131 \uB808\uBCA8\uC744 \uC0AC\uC6A9\uD558\uB824\uBA74 \uB370\uC774\uD130 \uC800\uC7A5\uC18C\uC5D0\uC11C \uB0AE\uC740 \uB808\uBCA8\uC758 \uC5C5\uB370\uC774\uD2B8\uB97C \uC704\uD55C \uC7A0\uAE08\uC744 \uC9C0\uC6D0\uD574\uC57C \uD569\uB2C8\uB2E4. \uB370\uC774\uD130 \uC800\uC7A5\uC18C\uAC00 \uB0AE\uC740 \uB808\uBCA8\uC758 \uC5C5\uB370\uC774\uD2B8\uB97C \uC704\uD55C \uC7A0\uAE08\uC744 \uC9C0\uC6D0\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
sqlstore.sql.generator.statement.likeescapenotsupported=JDO76321: LIKE ESCAPE \uC808\uC740 \uC774 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0\uC11C \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
sqlstore.sql.generator.statement.positionthreeargsnotsupported=JDO76322: POSITION \uC808\uC758 \uC138\uBC88\uC9F8 \uC778\uC218\uB294 1\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4.
core.configuration.classnotmapped=JDO76323: {0} \uD074\uB798\uC2A4\uAC00 \uB9E4\uD551\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
core.configuration.classnotmappedtotable=JDO76324: {0} \uD074\uB798\uC2A4\uAC00 {1} \uD14C\uC774\uBE14\uC5D0 \uB9E4\uD551\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
sqlstore.sql.generator.statement.unexpectedconstraint=JDO76325: \uC791\uC5C5 {0}\uC758 \uC81C\uC57D \uC870\uAC74\uC740 where \uC808\uC758 \uB8E8\uD2B8\uAC00 \uB420 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

# <I18N: sql generator>
# Following messages are used within other messages. They need to be i18ned but need not be numbered.
#
sqlstore.sql.generator.statement.sqlStatement=SQL statement
sqlstore.sql.generator.statement.withinputvalues= \uC785\uB825 \uAC12:
sqlstore.sql.generator.statement.withnoinputvalues= \uC785\uB825 \uAC12\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.


#
# <ResultDesc NOI18N>
#
sqlstore.resultdesc.deserializing=deserializing = {0}.
sqlstore.resultdesc.marking_field=marking local field {0} as present.
sqlstore.resultdesc.marking_foreign_field=marking foreign field {0} as present.
sqlstore.resultdesc.marking_key_field=marking key field {0} as present.
sqlstore.resultdesc.returning_field=returning field {0} as projection.
#
# <Misc. SQLStore NOI18N >
#
sqlstore.sql.concurrency.concurrencychkdirty.exit=--> ConcurrencyCheckDirty.update().
sqlstore.sql.concurrency.concurrencychkdirty=--> ConcurrencyCheckDirty.update(), beforeImage = {0}.
sqlstore.sql.concurrencyoptverify.resumetx=<--> ConcurrencyOptVerify.resume(), resumed transaction = {0}.
sqlstore.sql.concurrencyoptverify.suspendtx=<--> ConcurrencyOptVerify.suspend(), suspended transaction = {0}.
sqlstore.sql.concurrencyoptverify.update.exit=<-- ConcurrencyOptVerify.update().
sqlstore.sql.concurrencyoptverify.update=--> ConcurrencyOptVerify.update(), beforeImage = {0}.
sqlstore.sql.generator.dbstatement.addbatch=addbatch ({0})
sqlstore.sql.generator.dbstatement.bindinputcolumn=bindInputColumn index: {0} value: {1} sqlType: {2}.
sqlstore.sql.generator.dbstatement.executebatch=executeBatch executing {0} command(s)
sqlstore.sql.generator.selectqueryplan.processforeignfield.exit=<-- SelectQueryPlan.processForeignFields().
sqlstore.sql.generator.selectqueryplan.processforeignfield=--> SelectQueryPlan.processForeignFields(), class = {0}.
sqlstore.sql.generator.selectqueryplan.processlocalfield.exit=<-- SelectQueryPlan.processLocalFields().
sqlstore.sql.generator.selectqueryplan.processlocalfield=--> SelectQueryPlan.processLocalFields(), class = {0}.
sqlstore.sql.generator.selectqueryplan.processstmts.exit=<-- SelectQueryPlan.processStatements().
sqlstore.sql.generator.selectqueryplan.processstmts=--> SelectQueryPlan.processStatements(), class = {0}, statements = {1}.
sqlstore.sql.updateobjdescimpl.afterimagenull=AfterImage\uAC00 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.
sqlstore.sql.updateobjdescimpl.beforeimagenull=BeforeImage\uAC00 \uC124\uC815\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.
sqlstore.sql.updateobjdescimpl.markrelationshipchange=<--> UpdateDesc.markRelationshipChange().
sqlstore.sql.updateobjdescimpl.updated={0}\uC774(\uAC00) \uC5C5\uB370\uC774\uD2B8\uB418\uC5C8\uC2B5\uB2C8\uB2E4.


###############################################################################
# <SQLStoreManager>
# Message ID Range: JDO76400 - JDO76499
###############################################################################
#
# <SQLStoreManager>
#
core.persistencestore.jdbcerror=JDO76400: SQL \uBB38\uC744 \uC2E4\uD589\uD558\uB294 \uC911 JDBC SQLException\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.\n{0}.\n\uC790\uC138\uD55C \uB0B4\uC6A9\uC740 SQLException\uC744 \uBCF4\uC2ED\uC2DC\uC624.
sqlstore.retrievedesc.stmntsnotjoined=JDO76401: \uD558\uB098\uC758 RetrieveDesc\uC5D0 \uC5EC\uB7EC \uAC1C\uC758 SQL \uBB38\uC744 \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
core.persistencestore.toofewrows=JDO76402: {0} \uD14C\uC774\uBE14\uC758 {1} \uC5F0\uAD00\uC5D0 \uD574\uB2F9\uD558\uB294 \uAC12\uC744 \uAC00\uC838\uC62C \uB54C \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0\uC11C \uC774 \uC5F0\uAD00\uC5D0 \uD5C8\uC6A9\uB418\uB294 \uAC1C\uC218\uBCF4\uB2E4 \uC801\uC740 \uC218\uC758 \uD589\uC774 \uBC18\uD658\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uD5C8\uC6A9\uB418\uB294 \uCD5C\uC18C \uD589 \uC218\uB294 {2}\uC785\uB2C8\uB2E4.
core.persistencestore.toomanyobjforcard1=JDO76403: \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uAC00 \uC9C0\uC18D\uC131 \uBAA8\uB378\uACFC \uC77C\uCE58\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. {0} \uD074\uB798\uC2A4\uC758 {1} \uC5F0\uAD00\uC5D0 \uC758\uD574 \uCC38\uC870\uB41C \uAC1D\uCCB4\uC5D0 \uB300\uD55C \uAC80\uC0C9 \uC2DC\uB3C4\uC5D0\uC11C {2} \uD56D\uBAA9\uC774 \uAC80\uC0C9\uB418\uC5C8\uC9C0\uB9CC \uC5F0\uAD00\uC758 \uAE30\uBCF8 \uC0C1\uD55C\uAC12\uC774 1\uC774\uAE30 \uB54C\uBB38\uC5D0 \uD55C \uD56D\uBAA9\uB9CC \uC218\uC6A9\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
core.persistencestore.toomanyrows=JDO76405: {0} \uD074\uB798\uC2A4\uC758 {1} \uC5F0\uAD00\uC5D0 \uD574\uB2F9\uD558\uB294 \uAC12\uC744 \uAC00\uC838\uC62C \uB54C \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0\uC11C \uC774 \uC5F0\uAD00\uC5D0 \uD5C8\uC6A9\uB418\uB294 \uAC1C\uC218\uBCF4\uB2E4 \uB9CE\uC740 \uD589\uC774 \uBC18\uD658\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uD5C8\uC6A9\uB418\uB294 \uCD5C\uB300 \uD589 \uC218\uB294 {2}\uC785\uB2C8\uB2E4.
core.store.concurrentaccess=JDO76406: \uB3D9\uC2DC \uC561\uC138\uC2A4 \uC608\uC678 \uC0AC\uD56D: {0}\uC758 \uAC1D\uCCB4\uB294 \uB2E4\uB978 \uD2B8\uB79C\uC7AD\uC158\uC5D0 \uC758\uD574 \uC5C5\uB370\uC774\uD2B8 \uB610\uB294 \uC0AD\uC81C\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
sqlstore.sqlstoremanager.errorcloseresultset=JDO76407: SQL \uACB0\uACFC \uC9D1\uD569\uC744 \uB2EB\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uC608\uC678 \uC0AC\uD56D: {0}
sqlstore.sqlstoremanager.errorclosestatement=JDO76408: SQL \uBB38\uC744 \uB2EB\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uC608\uC678 \uC0AC\uD56D: {0}
sqlstore.sql.generator.selectqueryplan.plansnotjoined=JDO76409: \uD55C \uAC1C\uC758 RetrieveDesc\uC5D0 \uB300\uD55C \uC5EC\uB7EC \uAC1C\uC758 \uC9C8\uC758 \uACC4\uD68D\uC740 \uC9C0\uC6D0\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.

#
# <NOI18N: SQLStoreManager>
#
sqlstore.sqlstoremanager.executeQuery.exit=<-- SQLStoreManager.executeQuery().
sqlstore.sqlstoremanager.executeQuery=--> SQLStoreManager.executeQuery().
sqlstore.sqlstoremanager.executeupdate.exit=<-- SQLStoreManager.executeUpdate(), rows affected = {0}.
sqlstore.sqlstoremanager.executeupdate=--> SQLStoreManager.executeUpdate().
sqlstore.sqlstoremanager.executeupdatebatch.addbatch={0}; add batch.
sqlstore.sqlstoremanager.executeupdatebatch.exit=<-- SQLStoreManager.executeUpdateBatch().
sqlstore.sqlstoremanager.executeupdatebatch.exit.flush=<-- SQLStoreManager.executeUpdateBatch(), rows affected = {0}.
sqlstore.sqlstoremanager.executeupdatebatch.flushbatch={0}; flush batch.
sqlstore.sqlstoremanager.executeupdatebatch=--> SQLStoreManager.executeUpdateBatch().
sqlstore.sqlstoremanager.getpersistenceconfig=<--> SQLStoreManager.getPersistenceConfig(), classType = {0}.
sqlstore.sqlstoremanager.selectnoncorrelated.exit=<-- SQLStoreManager.selectNonCorrelated().
sqlstore.sqlstoremanager.selectnoncorrelated=--> SQLStoreManager.selectNonCorrelated().
sqlstore.sqlstoremanager.vendortype=<--> SQLStoreManager: vendor type = {0}.


###############################################################################
# <Connection/Connectionpool/DBVendorType/TransactionImpl/OracleSpecialDBOperation>
# Message ID Range: JDO76500 - JDO76599
###############################################################################
#
# <Connection/Connection Pool> - database
#
connection.connectionmanager.badnew=JDO76500: \uC0C8 ''{0}''\uC740(\uB294) \uD604\uC7AC ''{1}''\uBCF4\uB2E4 \uD06C\uAC70\uB098 \uAC19\uC544\uC57C \uD569\uB2C8\uB2E4.
connection.connectionmanager.badvalue=JDO76501: ''{0}''\uC758 \uAC12\uC774 \uBD80\uC801\uD569\uD569\uB2C8\uB2E4.
connection.connectionmanager.conntimeout=JDO76502: \uC811\uC18D \uC2DC\uAC04 \uCD08\uACFC\uAC00 \uB9CC\uB8CC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
connection.connectionmanager.getconnection.mismatch=JDO76503: \uD480\uB9C1\uB41C \uC811\uC18D\uC5D0 \uAC19\uC740 \uC0AC\uC6A9\uC790 \uCEE8\uD14D\uC2A4\uD2B8\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.
connection.connectionmanager.isdown=JDO76504: \uC811\uC18D \uAD00\uB9AC\uC790\uB97C \uC885\uB8CC\uD558\uACE0 \uC788\uC2B5\uB2C8\uB2E4.
connection.connectionmanager.maxpool=JDO76505: \uC811\uC18D \uD480\uC774 \uCD5C\uB300\uAC12\uC5D0 \uB3C4\uB2EC\uD588\uC2B5\uB2C8\uB2E4.
connection.connectionmanager.msintervalvalue=JDO76506: MsInterval\uC740 0\uBCF4\uB2E4 \uD06C\uACE0 MsWait\uBCF4\uB2E4 \uC791\uAC70\uB098 \uAC19\uC544\uC57C \uD569\uB2C8\uB2E4.
connection.connectionmanager.mswaitvalue=JDO76507: MsWait\uB294 0\uBCF4\uB2E4 \uD06C\uAC70\uB098 \uAC19\uC544\uC57C \uD569\uB2C8\uB2E4.
connection.connectionmanager.nulldriver=JDO76508: \uB4DC\uB77C\uC774\uBC84 \uC774\uB984\uC5D0 \uB300\uD55C NULL \uAC12\uC785\uB2C8\uB2E4.
connection.connectionmanager.nullurl=JDO76509: URL\uC5D0 \uB300\uD55C NULL \uAC12\uC785\uB2C8\uB2E4.
connection.connectionmanager.poolsize=JDO76510: 'maxPool'\uC740 'minPool'\uBCF4\uB2E4 \uD06C\uAC70\uB098 \uAC19\uC544\uC57C \uD569\uB2C8\uB2E4.
connection.connectionmanager.threaditerupted=JDO76511: \uC2A4\uB808\uB4DC\uAC00 \uC911\uB2E8\uB418\uC5C8\uC2B5\uB2C8\uB2E4.
connection.connectionmanager.zero=JDO76512: ''{0}''\uC740(\uB294) 0\uBCF4\uB2E4 \uD06C\uAC70\uB098 \uAC19\uC544\uC57C \uD569\uB2C8\uB2E4.
#
# <DBVendorType>
#
sqlstore.database.dbvendor.cantloadDefaultProperties=JDO76513: \uAE30\uBCF8 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC758 \uC18D\uC131\uC744 \uB85C\uB4DC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
sqlstore.database.dbvendor.init.default=JDO76514: -->\uACF5\uAE09\uC5C5\uCCB4 \uC720\uD615 {0}\uC758 \uC18D\uC131\uC744 \uB85C\uB4DC\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4. \uAE30\uBCF8\uAC12\uC744 \uC0AC\uC6A9\uD569\uB2C8\uB2E4.
sqlstore.database.dbvendor.cantinstantiateclass=JDO76515: {0} \uD074\uB798\uC2A4\uB97C \uC778\uC2A4\uD134\uC2A4\uD654\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
#
# <OracleSpecialDBOperation>
#
sqlstore.database.oracle.defineCol=JDO76516: \uBB38\uC758 \uC5F4\uC744 \uC815\uC758\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4
sqlstore.database.oracle.nooracleavailable=JDO76517: Oracle \uB9AC\uC18C\uC2A4 \uD329\uD1A0\uB9AC ''{0}''\uC744(\uB97C) \uCD08\uAE30\uD654\uD558\uB294 \uB3D9\uC548 oracle.jdbc.OraclePreparedStatement \uB610\uB294 oracle.jdbc.driver.OraclePreparedStatement \uC911 \uD55C \uC778\uC2A4\uD134\uC2A4\uB97C \uAC00\uC838\uC624\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4. Oracle \uD2B9\uC815 \uCD5C\uC801\uD654\uAC00 \uC0AC\uC6A9 \uC548\uD568\uC73C\uB85C \uC124\uC815\uB429\uB2C8\uB2E4. \uC774 \uB9AC\uC18C\uC2A4\uB97C \uC0AC\uC6A9\uD558\uB294 \uC778\uC2A4\uD134\uC2A4\uC5D0\uC11C Fixed Char \uC5F4\uC5D0 \uB9E4\uD551\uB41C \uC5F4\uC758 \uAC12\uC744 \uBC14\uC778\uB4DC\uD574\uC57C \uD560 \uACBD\uC6B0\uC5D0\uB294 \uAC12\uC774 \uD574\uB2F9 dbschema \uD30C\uC77C\uC5D0 \uC9C0\uC815\uB41C \uAE38\uC774\uAC00 \uB418\uB3C4\uB85D \uACF5\uBC31\uC774 \uCD94\uAC00\uB429\uB2C8\uB2E4.
sqlstore.database.oracle.fixedcharpadded=JDO76518: "{0}" \uAC12\uC740 CHAR \uC5F4\uC5D0 \uBC14\uC778\uB4DC\uB429\uB2C8\uB2E4. \uC774\uB97C \uC704\uD574\uC11C\uB294 Oracle\uC758 \uD2B9\uBCC4\uD55C \uCC98\uB9AC\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4. \uD074\uB798\uC2A4 OraclePreparedStatement\uB97C \uB4DC\uB77C\uC774\uBC84\uC5D0\uC11C \uAC00\uC838\uC624\uC9C0 \uBABB\uD558\uBA74 \uAC12\uC774 \uCEA1\uCC98\uB41C dbschema \uD30C\uC77C\uC5D0 \uC9C0\uC815\uB41C \uAE38\uC774 {1}\uC774(\uAC00) \uB418\uB3C4\uB85D \uACF5\uBC31\uC774 \uCD94\uAC00\uB429\uB2C8\uB2E4.
#
# <Misc.>
#
core.configuration.getvendortypefailed=JDO76519: \uB370\uC774\uD130 \uC800\uC7A5\uC18C\uC758 \uACF5\uAE09\uC5C5\uCCB4 \uC720\uD615\uC744 \uC2DD\uBCC4\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
jdo.sqlpersistencemanagerfactory.errorgettingDatabaseInfo=JDO76520: \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0 \uB300\uD55C \uC815\uBCF4\uB97C \uAC00\uC838\uC624\uB294 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. \uB2E4\uC74C \uC608\uC678 \uC0AC\uD56D\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.

#
# <NOI18N: Connection>
#
sqlstore.connection.conncectiomgr.found=<--> ConnectionManager.getConnection: found {0}.
sqlstore.connection.conncectiomgr.getnewconn=<--> ConnectionManager.getConnection: new {0}.
sqlstore.connection.conncectiomgr.replacefreeconn=<--> ConnectionManager.replaceFreeConnection: free {0}.
sqlstore.connectionimpl.clearxact.close=--- ConnectionImpl.clearXact: connection closed .
sqlstore.connectionimpl.clearxact.disassocxact=--- ConnectionImpl.clearXact: disassociateXact .
sqlstore.connectionimpl.clearxact=--- ConnectionImpl.clearXact: .
sqlstore.connectionimpl.close.connrelease=<--- ConnectionImpl.close: connection released.
sqlstore.connectionimpl.close.exit=<--- ConnectionImpl.close: connection closed.
sqlstore.connectionimpl.close.freepending=<--- ConnectionImpl.close: set FreePending.
sqlstore.connectionimpl.close.putfreelist=<--- ConnectionImpl.close: put in freeList.
sqlstore.connectionimpl.close.replaced=<--- ConnectionImpl.close: connection replaced.
sqlstore.connectionimpl.close=---> ConnectionImpl.close.
sqlstore.connectionimpl.close_arg=---> ConnectionImpl.close: {0}.
sqlstore.connectionimpl.commit=--- ConnectionImpl.commit: connection closed.
sqlstore.connectionimpl.finalize=--- ConnectionImpl.finalize: connection closed.
sqlstore.connectionimpl.internalcommit=--- ConnectionImpl.internalCommit: .
sqlstore.connectionimpl.pendingdisassocxact=--- ConnectionImpl.clearXact: Pending disassociateXact.
sqlstore.connectionimpl.rollback.close=--- ConnectionImpl.rollback: connection closed.
sqlstore.connectionimpl.rollback=--- ConnectionImpl.rollback:.
#
# <NOI18N: DBVendorType>
#
sqlstore.database.dbvendor.castRequiredForNumericValues=<-> DBVendorType.isCastRequiredForNumericValues(): {0}.
sqlstore.database.dbvendor.getModFunctionName=<-> DBVendorType.getModFunctionName(): {0}.
sqlstore.database.dbvendor.getNullComparisonFunctionName=<-> DBVendorType.getNullComparisonFunctionName(): {0}.
sqlstore.database.dbvendor.getConcatCast=<-> DBVendorType.getConcatCast(): {0}.
sqlstore.database.dbvendor.getSpecialDBOperation=<-> DBVendorType.getSpecialDBOperation(): {0}.
sqlstore.database.dbvendor.getabs=<-> DBVendorType.getAbs(): {0}.
sqlstore.database.dbvendor.getcharlength=<-> DBVendorType.getCharLength(): {0}.
sqlstore.database.dbvendor.getforupdate=<-> DBVendorType.getForUpdate(): {0}.
sqlstore.database.dbvendor.getholdlock=<-> DBVendorType.getHoldlock(): {0}.
sqlstore.database.dbvendor.getisnotnull=<-> DBVendorType.getIsNotNull(): {0}.
sqlstore.database.dbvendor.getisnull=<-> DBVendorType.getIsNull(): {0}.
sqlstore.database.dbvendor.getleftjoin=<-> DBVendorType.getLeftJoin(): {0}.
sqlstore.database.dbvendor.getleftjoinpost=<-> DBVendorType.getLeftJoinPost(): {0}.
sqlstore.database.dbvendor.getleftlikeescape=<-> DBVendorType.getLeftLikeEscape(): {0}.
sqlstore.database.dbvendor.getnotequal=<-> DBVendorType.getNotEqual(): {0}.
sqlstore.database.dbvendor.getposition3args=<-> DBVendorType.getPositionThreeArrgs(): {0}.
sqlstore.database.dbvendor.getposition=<-> DBVendorType.getPosition(): {0}.
sqlstore.database.dbvendor.getpositionin=<-> DBVendorType.getPositionIn(): {0}.
sqlstore.database.dbvendor.getpositionsrchsrc=<-> DBVendorType.getPositionSearchSource(): {0}.
sqlstore.database.dbvendor.getquotecharstart=<-> DBVendorType.getQuoteCharStart(): {0}.
sqlstore.database.dbvendor.getrightjoinipre=<-> DBVendorType.getRightJoin(): {0}.
sqlstore.database.dbvendor.getrightlikeescape=<-> DBVendorType.getRightLikeEscape(): {0}.
sqlstore.database.dbvendor.getrtrim=<-> DBVendorType.getRtrim(): {0}.
sqlstore.database.dbvendor.getrtrimpost=<-> DBVendorType.getRtrimPost(): {0}.
sqlstore.database.dbvendor.getsqrt=<-> DBVendorType.getSqrt(): {0}.
sqlstore.database.dbvendor.getstringconcat=<-> DBVendorType.getStringConcat(): {0}.
sqlstore.database.dbvendor.getsubstring=<-> DBVendorType.getSubstring(): {0}.
sqlstore.database.dbvendor.getsubstringfor=<-> DBVendorType.getSubstringFor(): {0}.
sqlstore.database.dbvendor.getsubstringfrom=<-> DBVendorType.getSubstringFrom(): {0}.
sqlstore.database.dbvendor.gettablelistend=<-> DBVendorType.getTableListEnd(): {0}.
sqlstore.database.dbvendor.gettableliststart=<-> DBVendorType.getTableListStart(): {0}.
sqlstore.database.dbvendor.isAnsiTrim=<-> DBVendorType.isAnsiTrim(): {0}.
sqlstore.database.dbvendor.isInlineNumeric=<-> DBVendorType.isInlineNumeric(): {0}.
sqlstore.database.dbvendor.isNativeOuterJoin=<-> DBVendorType.isNativeOuterJoin(): {0}.
sqlstore.database.dbvendor.isParameterCast=<-> DBVendorType.isParameterCast(): {0}.
sqlstore.database.dbvendor.isdistinctupdatelocksupported=<-> DBVendorType.isDistinctSupportedWithUpdateLock(): {0}.
sqlstore.database.dbvendor.islockcolumnlistsupported=<-> DBVendorType.isLockColumnListSupported(): {0}.
sqlstore.database.dbvendor.isupdatelocksupported=<-> DBVendorType.isUpdateLockSupported(): {0}.
sqlstore.database.dbvendor.mapemptystrtonull=<-> DBVendorType.mapEmptyStringToNull(): {0}.
sqlstore.database.dbvendor.overrideproperties.with=<-> DBVendorType.overrideProperties() : {0} with: {1}.
sqlstore.database.dbvendor.overrideproperties=<-> DBVendorType.overrideProperties() - NONE.
sqlstore.database.dbvendor.supportslikeescape=<-> DBVendorType.supportsLikeEscape(): {0}.
sqlstore.database.dbvendor.vendorname=<-> DBVendorType(), vendorName: [{0}]  vendorType: {1}.
#
# <NOI18N: TransactionImpl>
#
sqlstore.transactionimpl.call.info={0} Tran[ {1} ].{2}: {3} for  {4}.
sqlstore.transactionimpl.call={0} Tran[ {1} ].{2}:status = {3}, txType: {4} for  {5}.
sqlstore.transactionimpl.closeconnection=--- TransactionImpl.closeConnection() {0} for {1}.
sqlstore.transactionimpl.general={0}.
sqlstore.transactionimpl.getconnection=--- TransactionImpl.getConnection(): {0} TX optimistic: {1} referenceCount = {2} for {3}.
sqlstore.transactionimpl.releaseconnection=--- TransactionImpl.releaseConnection(): TX optimistic: {0} Inside Commit: {1} referenceCount: {2} for {3}.
sqlstore.transactionimpl.rollbackconnection=--- TransactionImpl.rollbackConnection(): {0} for {1}.
sqlstore.transactionimpl.status={0} Tran[ {1} ].setStatus: {2} => {3} for {4}.


###############################################################################
# All the source files under subdir ejb.
# Message ID Range: JDO76600 - JDO76699
###############################################################################
#
#EJBHelper messages
#
# {0} - method name
ejb.ejbhelper.nonmanaged=JDO76600: {0} \uBA54\uC18C\uB4DC\uB294 \uAD00\uB9AC\uB418\uC9C0 \uC54A\uC740 \uD658\uACBD\uC5D0\uC11C \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

#
# Common messages between SunContainerHelper and DeploymentHelper
# so they have a neutral key, that still starts with "ejb".
#
# {0} - jndi name.
ejb.jndi.lookupfailed=JDO76604: cmp-resource ''{0}''\uC758 JNDI \uC870\uD68C\uB97C \uC2E4\uD328\uD588\uC2B5\uB2C8\uB2E4.
JDO76604.diag.cause.1=\uC774 JNDI \uC774\uB984\uC744 \uAC00\uC9C4 CMP \uB9AC\uC18C\uC2A4\uAC00 \uC774 \uC778\uC2A4\uD134\uC2A4\uC5D0 \uB4F1\uB85D\uB418\uC5B4 \uC788\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
JDO76604.diag.cause.2=CMP \uB9AC\uC18C\uC2A4\uC758 JNDI \uC774\uB984 \uCCA0\uC790\uAC00 \uD2C0\uB838\uC2B5\uB2C8\uB2E4.
JDO76604.diag.check.1=\uC0AC\uC6A9\uD558\uB824\uB294 \uB9AC\uC18C\uC2A4\uC758 JNDI \uC774\uB984\uC744 \uD655\uC778\uD558\uC2ED\uC2DC\uC624.
JDO76604.diag.check.2=\uBAA8\uB4C8\uC5D0 \uC9C0\uC815\uB41C CMP \uB9AC\uC18C\uC2A4\uC758 JNDI \uC774\uB984\uC744 \uD655\uC778\uD558\uC2ED\uC2DC\uC624.

# {0} - jndi name.
# {1} - returned class name.
ejb.jndi.unexpectedinstance=JDO76605: cmp-resource ''{0}''\uC758 JNDI \uC870\uD68C \uACB0\uACFC \uC608\uAE30\uC9C0 \uC54A\uC740 \uC720\uD615\uC758 \uC778\uC2A4\uD134\uC2A4\uAC00 \uBC18\uD658\uB428: {1}.
JDO76605.diag.cause.1=\uC774 JNDI \uC774\uB984\uC744 \uAC00\uC9C4 CMP \uB9AC\uC18C\uC2A4\uB294 jdbc-resource \uB610\uB294 persistence-manager-factory-resource\uB97C \uCC38\uC870\uD558\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.
JDO76605.diag.cause.2=CMP \uB9AC\uC18C\uC2A4\uC758 JNDI \uC774\uB984 \uCCA0\uC790\uAC00 \uD2C0\uB838\uC2B5\uB2C8\uB2E4.
JDO76605.diag.check.1=\uC0AC\uC6A9\uD558\uB824\uB294 \uB9AC\uC18C\uC2A4\uC758 JNDI \uC774\uB984\uC744 \uD655\uC778\uD558\uC2ED\uC2DC\uC624.
JDO76605.diag.check.2=\uBAA8\uB4C8\uC5D0 \uC9C0\uC815\uB41C CMP \uB9AC\uC18C\uC2A4\uC758 JNDI \uC774\uB984\uC744 \uD655\uC778\uD558\uC2ED\uC2DC\uC624.

#
# DeploymentHelper messages - ejb
#
#
#<NOI18N: DeploymentHelper>
#
ejb.DeploymentHelper.getconnection=JNDI \uC774\uB984 ''{0}''\uC5D0 \uB300\uD55C \uC811\uC18D\uC744 \uAC00\uC838\uC624\uB294 \uC911

# The messages JDO76606 through JDO76615 that were originally here 
# have been moved to 
# cmp/support/ejb/src/com/sun/jdo/spi/persistence/support/ejb/ejbc/Bundle.properties
# As part of INF#
# So do not use these messages. 


#
#CMPHelper messages
#
ejb.cmphelper.nonmanaged=JDO76613: CMPHelper\uC758 \uC561\uC138\uC2A4\uAC00 \uBD80\uC801\uD569\uD569\uB2C8\uB2E4. \uC774 \uD074\uB798\uC2A4\uB294 CMP \uC9C0\uC6D0\uC5D0\uB9CC \uC0AC\uC6A9\uB418\uBA70 \uC560\uD50C\uB9AC\uCF00\uC774\uC158 \uC11C\uBC84 \uC678\uBD80\uC5D0\uC11C \uD638\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.

#
#SunTransactionHelper messages
#

# {0} class name
ejb.SunTransactionHelper.wrongdatasourcetype=JDO76616: \uB370\uC774\uD130 \uC18C\uC2A4\uAC00 \uC608\uC0C1\uB418\uB294 \uC720\uD615\uC774 \uC544\uB2D9\uB2C8\uB2E4. \uC608\uC0C1 \uC720\uD615: com.sun.appserv.jdbc.DataSource \uD604\uC7AC \uC720\uD615: {0}.


###############################################################################
# <Generic messages. Add new messages to this section only if none of the above categories can be used.>
###############################################################################
#
# <NOI18N: generic>
#
vendor=Sun Microsystems
# majorVersion (minorVersion) buildDate
fullVersion={0} ({1}) {2}
#
# <NOI18N: This messages are used for JDOFatalInternalException from multiple places. No need to I18N>
#
core.generic.unknownfield={0} \uD544\uB4DC\uB294 {1} \uD074\uB798\uC2A4\uC758 \uBA64\uBC84\uAC00 \uC544\uB2D9\uB2C8\uB2E4.
core.generic.unknownexception=\uC54C \uC218 \uC5C6\uB294 \uC608\uC678 \uC0AC\uD56D\uC774 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4.
core.generic.nullparam={0} \uB9E4\uAC1C\uBCC0\uC218\uAC00 \uB110\uC785\uB2C8\uB2E4.
core.generic.notinstanceof={0} \uD074\uB798\uC2A4\uC758 \uAC1D\uCCB4\uAC00 {1}\uC758 \uC778\uC2A4\uD134\uC2A4\uAC00 \uC544\uB2D9\uB2C8\uB2E4.


###############################################################################
# <These messages are used from multiple places in code.It is absolutely necessary to cleanup code
# to use different messages >
###############################################################################
core.configuration.cantloadclass={0} \uD074\uB798\uC2A4\uB97C \uB85C\uB4DC\uD558\uC9C0 \uBABB\uD588\uC2B5\uB2C8\uB2E4.
sqlstore.exception.log=\uC608\uC678 \uC0AC\uD56D.
jdo.lifecycle.deleted.accessField=\uC0AD\uC81C\uB41C \uC778\uC2A4\uD134\uC2A4\uC758 \uD544\uB4DC\uC5D0\uB294 \uC561\uC138\uC2A4\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.
