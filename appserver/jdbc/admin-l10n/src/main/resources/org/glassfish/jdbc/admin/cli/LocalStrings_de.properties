#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

add.resources=Der Befehl "add-resources" erstellt die in der angegebenen XML-Datei genannten Ressourcen. Der xml-Datei-Pfad ist der Pfad zu der XML-Datei, die die zu erstellenden Ressourcen enth\u00E4lt. Der DOCTYPE muss so wie in der Datei resources.xml angegeben werden.
add.resources.target=Gibt das Ziel an, f\u00FCr das Sie die Ressourcen erstellen.
add.resources.xml_file_name=Der Pfad zu der XML-Datei mit der/den zu erstellenden Ressource(n). Die XML-Datei muss sich im Verzeichnis <Installationsverzeichnis>/domains/domain1/config befinden. Wenn Sie einen relativen Pfad oder einfach den Namen der XML-Datei angeben, stellt dieser Befehl dem Operanden <Installationsverzeichnis>/domains/domain1/config voran.
add.resources.noJdbcConnectionPoolId=Kein Poolname f\u00FCr den JDBC-Connection Pool definiert.
add.resources.noDataSourceClassname=Kein datasourceclassname f\u00FCr den JDBC-Connection Pool definiert.
create.jdbc.resource=JDBC-Ressource mit dem angegebenen JNDI-Namen erstellen.
create.jdbc.resource.connectionpoolid=Der Name des JDBC-Connection Pools. Wenn zwei oder mehr JDBC-Ressourcenelemente auf dasselbe Connection Poolelement verweisen, verwenden sie w\u00E4hrend der Laufzeit dieselbe Poolverbindung.
create.jdbc.resource.description=Text, der Beschreibungsdetails zur JDBC-Ressource angibt.
create.jdbc.resource.jndi_name=Der JNDI-Name dieser JDBC-Ressource.
create.jdbc.resource.enabled=Legt fest, ob die JDBC-Ressource w\u00E4hrend der Laufzeit aktiviert ist. Der Standardwert ist "True".
create.jdbc.resource.success=JDBC-Ressource {0} erfolgreich erstellt.
create.jdbc.resource.duplicate=Eine Ressource mit dem Namen {0} ist bereits vorhanden.
create.jdbc.resource.fail=Befehl "create-jdbc-resource" nicht erfolgreich.
create.jdbc.resource.connPoolNotFound=Attributwert (pool-name = {0}) wurde nicht in der Liste der JDBC-Connection Pools gefunden.
delete.jdbc.resource=JDBC-Ressource mit dem angegebenen JNDI-Namen entfernen.
delete.jdbc.resource.jdbc_resource_name=Der JNDI-Name der zu entfernenden JDBC-Ressource.
delete.jdbc.resource.success=Befehl "delete-jdbc-resource" erfolgreich ausgef\u00FChrt.
delete.jdbc.resource.fail=Befehl "create-jdbc-resource" nicht erfolgreich.
delete.jdbc.resource.notfound=Eine JDBC-Ressource mit dem Namen {0} ist nicht vorhanden.
delete.jdbc.resource.resource-ref.exist=jdbc-resource [ {0} ] wird in einem Instanz/Cluster-Ziel referenziert. Verwenden Sie delete-resource-ref auf dem entsprechenden Ziel.
delete.jdbc.resource.multiple.resource-refs=jdbc-resource [ {0} ] wird in mehreren Instanz/Cluster-Zielen referenziert; verwenden Sie delete-resource-ref auf dem entsprechenden Ziel
delete.jdbc.resource.no.resource-ref=jdbc-resource [ {0} ] wird nicht in Ziel [ {1} ] referenziert
delete.jdbc.resource.system-all-req.object-type=Die JDBC-Ressource [{0}] kann nicht gel\u00F6scht werden, da ihre Konfiguration im System erforderlich ist.
list.jdbc.resources=Alle JDBC-Ressourcen auflisten.
list.jdbc.resources.success=Befehl "list-jdbc-resources" erfolgreich ausgef\u00FChrt.
list.jdbc.resources.fail=Befehl "list-jdbc-resources" nicht erfolgreich ausgef\u00FChrt.
list.jdbc.resources.empty=Nichts aufzulisten.

create.jdbc.connection.pool=JDBC-Connection Pool registrieren.
create.jdbc.connection.pool.datasourceClassname=Der Name des vom Hersteller bereitgestellten JDBC-Datenquellen-Ressourcenmanagers.
create.jdbc.connection.pool.resType=Die Schnittstelle, die die Datenquellenklasse implementiert. Muss eines der folgenden Elemente sein: javax.sql.DataSource, javax.sql.ConnectionPoolDataSource oder javax.sql.XADataSource. Ein Fehler tritt auf, wenn diese Option einen zul\u00E4ssigen Wert aufweist und die angegebene Schnittstelle nicht von der Datenquellenklasse implementiert wird. F\u00FCr diese Option gibt es keinen Standardwert.
create.jdbc.connection.pool.steadyPoolSize=Die minimale und urspr\u00FCngliche Anzahl der Verbindungen, die im Pool beibehalten werden. Der Standardwert ist 8.
create.jdbc.connection.pool.maxPoolSize=Die maximale Anzahl der Verbindungen, die erstellt werden k\u00F6nnen. Der Standardwert lautet 32.
create.jdbc.connection.pool.maxWait=Die Zeit, die ein Caller wartet, bevor ein Verbindungs-Timeout gesendet wird. Der Standardwert sind 60 Sekunden. Der Wert 0 zwingt den Caller, unbestimmte Zeit zu warten.
create.jdbc.connection.pool.poolResize=Die Menge, um die der Pool die Anzahl der Verbindungen nach oben oder unten skaliert. Skalierung nach oben: Wenn der Pool keine freien Verbindungen besitzt, wird der Pool um diese Menge nach oben skaliert. Skalierung nach unten: Alle ung\u00FCltigen Verbindungen und Leerlaufverbindungen werden entfernt, was zuweilen zum Entfernen von einer gr\u00F6\u00DFeren Menge an Verbindungen f\u00FChrt, als durch diesen Wert angegeben. Steadypoolsize wird gew\u00E4hrleistet. Die m\u00F6glichen Werte reichen von 0 bis MAX_INTEGER. Der Standardwert ist 2.
create.jdbc.connection.pool.idleTimeout=Die maximale Zeit in Sekunden, die sich eine Verbindung im Pool im Leerlauf befinden kann. Nach dieser Zeit kann die Implementierung diese Verbindung schlie\u00DFen. Dieser Timeout\u00FCberschreitungswert muss k\u00FCrzer gehalten werden als der Timeoutwert auf der Serverseite, um die Anh\u00E4ufung unbrauchbarer Verbindungen in der Anwendung zu vermeiden. Der Standardwert betr\u00E4gt 300.
create.jdbc.connection.pool.initSql=Dient zum Festlegen einer SQL-Zeichenfolge durch den Benutzer, die ausgef\u00FChrt wird, wenn eine Verbindung vom Pool hergestellt wird (gilt nicht f\u00FCr erneut verwendete Verbindungen). Bei der Ausf\u00FChrung wird der Status der Verbindung initialisiert. Es handelt sich um ein optionales Attribut und sollte einen Wert aufweisen, wenn eine Initialisierungs-SQL ausgef\u00FChrt werden soll. 
create.jdbc.connection.pool.isolationLevel=Die Transaktionsisolationsebene (transaction-isolation-level) bei den zusammengefassten (gepoolten) Datenbankverbindungen. F\u00FCr diese Option gibt es keinen Standardwert. Wenn diese Option nicht angegeben ist, arbeitet der Pool mit der vom JDBC-Treiber bereitgestellten Standardisolationsebene. Sie k\u00F6nnen eine gew\u00FCnschte Isolationsebene mit einer der Standardebenen f\u00FCr die Transaktionsisolation festlegen: read-uncommitted (nicht \u00DCbernommene lesen), read-committed (\u00DCbernommene lesen), repeatable-read (wiederholbarer Lesevorgang), serializable (serialisierbar). Anwendungen, die die Isolationsebene bei einer zusammengefassten (gepoolten) Verbindung \u00E4ndern, riskieren auf programmatische Weise eine Verseuchung des Pools. Die kann zu Programmfehlern f\u00FChren.
create.jdbc.connection.pool.isIsolationGuaranteed=Dies gilt nur dann, wenn eine bestimmte Isolationsebene f\u00FCr transaction-isolation-level spezifisch ist. Der Standardwert ist "True". Diese Option stellt sicher, dass jedes Mal, wenn eine Verbindung vom Pool abgerufen wird, die Isolationsebene auf den gew\u00FCnschten Wert gesetzt wird. Dies kann bei einigen JDBC-Treibern gewisse Auswirkungen auf die Leistung haben. Die Administratoren k\u00F6nnen diesen Wert auf "False" setzen, wenn die Anwendung "-isolationlevel" nicht \u00E4ndert, bevor die Verbindung zur\u00FCckgegeben wird.
create.jdbc.connection.pool.isConnectValidatereq=Wenn dieser Wert auf "True" gesetzt ist, werden Verbindungen validiert oder \u00FCberpr\u00FCft, um festzustellen, ob sie brauchbar sind, bevor sie an die Anwendung ausgegeben werden. Der Standardwert lautet "False".
create.jdbc.connection.pool.validationMethod=Der Name der Validierungstabelle, die zur Durchf\u00FChrung einer Abfrage zur Validierung einer Verbindung verwendet wird. Folgende Einstellungen sind zul\u00E4ssig: auto-commit, meta-data oder table. Der Standardwert ist "auto-commit"
create.jdbc.connection.pool.validationTable=Der Name der Validierungstabelle, die zur Durchf\u00FChrung einer Abfrage zur Validierung einer Verbindung verwendet wird.
create.jdbc.connection.pool.failConnection=Falls dieser Wert auf "True" gesetzt ist, m\u00FCssen alle Verbindungen im Pool geschlossen sein, wenn eine einzelne Validierungspr\u00FCfung nicht erfolgreich verl\u00E4uft. Der Standardwert ist "False". Es wird ein einziger Versuch unternommen, nicht erfolgreiche Verbindungen wiederherzustellen.
create.jdbc.connection.pool.allowNonComponentCallers=Ein Pool, bei dem diese Eigenschaft auf "True" gesetzt ist, kann nicht von Nicht-J2EE-Komponenten verwendet werden, also von anderen Komponenten als EJBs oder Servlets. Die zur\u00FCckgegebene Verbindung wird automatisch mit dem vom Transaktionsmanager erhaltenen Transaktionskontext eingetragen. 
create.jdbc.connection.pool.nonTransactionalConnections=Ein Pool, bei dem diese Eigenschaft auf "True" gesetzt ist, gibt Verbindungen zur\u00FCck, die nicht auf Transaktionen ausgelegt sind. Diese Verbindung wird nicht automatisch mit dem Transaktionsmanager eingetragen.
create.jdbc.connection.pool.validateAtMostOncePeriod=Dient zum Festlegen des Zeitintervalls, in dem eine Verbindung h\u00F6chstens einmal validiert wird. Der Standardwert lautet 0, d.h. nicht aktiviert.
create.jdbc.connection.pool.leakTimeout=Hilft dem Benutzer bei der Erkennung m\u00F6glicher Verbindungslecks durch die Anwendung. Wenn eine Verbindung von der Anwendung nicht innerhalb des angegebenen Zeitraums an den Pool zur\u00FCckgegeben wird, wird diese als m\u00F6gliches Leck betrachtet, und der Stack Trace des Callers wird protokolliert. Der Standardwert lautet 0, d.h. die Leckerkennung ist standardm\u00E4\u00DFig nicht aktiviert. Durch Angabe eines positiven Werts ungleich Null wird die Leckerkennung aktiviert. Beachten Sie dennoch, dass dieses Attribut nur dann zur Erkennung dient, wenn ein Verbindungsleck vorhanden ist. Die Verbindung kann nur dann zur\u00FCckgefordert werden, wenn connection-leak-reclaim auf "True" gesetzt ist.
create.jdbc.connection.pool.leakReclaim=Wenn sie aktiviert ist, kann die Verbindung im Anschluss an connection-leak-timeout-in-seconds erneut verwendet (an den Pool zur\u00FCckgegeben) werden. Der Standardwert lautet "False".
create.jdbc.connection.pool.creationRetryAttempts=Die Anzahl der Versuche zur Herstellung einer neuen Verbindung. Der Standardwert lautet 0, d.h. keine Neuversuche.
create.jdbc.connection.pool.creationRetryInterval=Das Zeitintervall zwischen Neuversuchen, w\u00E4hrend versucht wird, eine Verbindung herzustellen. Der Standardwert betr\u00E4gt 10 Sekunden. Tritt in Kraft, wenn connection-creation-retry-attempts gr\u00F6\u00DFer als 0 ist.
create.jdbc.connection.pool.statementTimeout=Legt die Timeouteigenschaft einer Verbindung fest, damit ungew\u00F6hnlich lang dauernde Abfragen beendet werden k\u00F6nnen. Der Standardwert ist -1, d.h. nicht aktiviert.
create.jdbc.connection.pool.lazyConnectionEnlistment=Nimmt eine Ressource nur dann f\u00FCr die Transaktion in Anspruch, wenn sie tats\u00E4chlich in einer Methode verwendet wird, bei der keine Verbindungen in Anspruch genommen werden, die nicht in einer Transaktion verwendet werden. Dadurch wird auch die unn\u00F6tige Inanspruchnahme von Verbindungen verhindert, die in den Abrufkomponenten zwischengespeichert sind. Der Standardwert ist "False".
create.jdbc.connection.pool.lazyConnectionAssociation=Verbindungen werden lose verkn\u00FCpft, wenn ein Vorgang f\u00FCr sie durchgef\u00FChrt wird. Die Verkn\u00FCpfung wird dar\u00FCber hinaus wieder aufgehoben, wenn die Transaktion abgeschlossen ist und eine Komponentenmethode beendet wird. Auf diese Weise wird die Wiederverwendung der physischen Verbindungen gef\u00F6rdert. Der Standardwert ist "False".
create.jdbc.connection.pool.associateWithThread=Verkn\u00FCpfen Sie eine oder mehrere Verbindungen mit einem Thread. Wenn dieser Thread eine Verbindung ben\u00F6tigt, kann er die mit dem Thread verkn\u00FCpften Verbindungen verwenden und erzeugt keinen Overhead durch das Abrufen einer Verbindung aus dem Pool. Der Standardwert ist "False". (Weitere Informationen finden Sie unter "associate-with-thread-connections-count")
create.jdbc.connection.pool.associateWithThreadConnectionsCount=Maximale Anzahl mit einem Thread zu verkn\u00FCpfende Verbindungen. Der Standardwert ist 1. Wird nur dann wirksam, wenn associate-with-thread auf "True" gesetzt ist.
create.jdbc.connection.pool.driverClassname=Der vom Hersteller angegebene JDBC-Treiberklassenname. Der angegebene Treiber sollte die java.sql.Driver-Schnittstelle implementieren
create.jdbc.connection.pool.matchConnections=Ein-/Ausschalten der Verbindungsabgleichung f\u00FCr den Pool. Die Einstellung kann auf "False" gesetzt werden, wenn der Administrator wei\u00DF, dass die Verbindungen im Pool immer homogen sind und eine aus dem Pool abgerufene Verbindung nicht mit dem Ressourcenadapter abgeglichen werden muss. Der Standardwert ist "False".
create.jdbc.connection.pool.maxConnectionUsageCount=Wenn angegeben, werden Verbindungen vom Pool mit der angegebenen H\u00E4ufigkeit wiederverwendet und anschlie\u00DFend geschlossen. Diese Einstellung eignet sich beispielsweise zur Vermeidung von Anweisungslecks. Der Standardwert lautet 0, d.h. die Funktion ist nicht aktiviert.
create.jdbc.connection.pool.ping=An einen Pool, bei dem dieses Attribut auf "True" gesetzt ist, wird w\u00E4hrend der Erstellung oder Neukonfiguration ein Ping-Signal gesendet, um bei falschen Attributwerten eine Warnmeldung anzuzeigen. Der Standardwert dieses Attributs ist "False".
create.jdbc.connection.pool.pooling=Ist der Wert auf "False" gesetzt, wird das Connection Pooling durch dieses Attribut deaktiviert. Der Standardwert dieses Attributs ist "True".
create.jdbc.connection.pool.sqlTraceListeners=Dient zum Festlegen, ob die von den Anwendungen ausgef\u00FChrten SQL-Anweisungen verfolgt werden sollen. Unterst\u00FCtzt Administratoren bei der Analyse der Anweisungen. Es k\u00F6nnen mehrere Listener als eine durch Komma getrennte Liste mit Namen von Listener-Implementierungsklassen angegeben werden.
create.jdbc.connection.pool.statementCachesize=Dient zum Festlegen der Anzahl der Anweisungen, die mit dem Standard-Caching-Mechanismus (Am l\u00E4ngsten nicht mehr verwendet, LRU) gecacht werden sollen. Der Standardwert ist 0, d.h. das Caching von Anwendungen ist nicht aktiviert.
create.jdbc.connection.pool.wrapJdbcObjects=Ist dieses Attribut auf "True" gesetzt, werden umschlossene JDBC-Objekte f\u00FCr Statement, PreparedStatement, CallableStatement, ResultSet und DatabaseMetaData erzeugt. Standardeinstellung: "True".
create.jdbc.connection.pool.validationClassname=Dient zum Festlegen des vom Benutzer implementierten Namens einer benutzerdefinierten Validierungsimplementierungsklasse. Dieses Parameter ist obligatorisch, wenn connection-validation-type auf "custom-validation" gesetzt ist. Der angegebene Klassenname muss f\u00FCr den Application Server zug\u00E4nglich sein.
create.jdbc.connection.pool.description=Text, der Details zum angegebenen JDBC-Connection Pool enth\u00E4lt.
create.jdbc.connection.pool.property=Optionale Name/Wert-Paare f\u00FCr Attribute zur Konfiguration des Connection Pools.
create.jdbc.connection.pool.jdbc_connection_pool_id=Der Name des zu erstellenden JDBC-Connection Pools.
create.jdbc.connection.pool.success=JDBC-Connection Pool {0} erfolgreich erstellt.
create.jdbc.connection.pool.fail=JDBC-Connection Pool {0} nicht erfolgreich erstellt. {1}
create.jdbc.connection.pool.duplicate=Eine Ressource mit dem Namen {0} ist bereits vorhanden.
create.jdbc.connection.pool.validationtable_required=--validationtable ist erforderlich, wenn --validationmethod=table und --isconnectvalidatereq=true.
delete.jdbc.connection.pool=Angegebenen JDBC-Connection Pool entfernen.
delete.jdbc.connection.pool.cascade=Wenn die Option auf "True" gesetzt ist, werden alle mit dem Pool verkn\u00FCpften JDBC-Ressourcen, abgesehen vom Pool selbst, gel\u00F6scht. Wenn die Option auf "False" gesetzt ist, kann der Pool nicht gel\u00F6scht werden, wenn mit dem Pool Ressourcen verkn\u00FCpft sind. Die Ressourcen m\u00FCssen explizit gel\u00F6scht werden, oder die Option muss auf "True" gesetzt werden. Standardm\u00E4\u00DFig ist die Option auf "False" gesetzt.
delete.jdbc.connection.pool.jdbc_connection_pool_id=Der Name der zu entfernenden JDBC-Ressource.
delete.jdbc.connection.pool.success=Befehl "delete-jdbc-connection-pool" erfolgreich ausgef\u00FChrt.
delete.jdbc.connection.pool.fail=Befehl "delete-jdbc-connection-pool" nicht erfolgreich.
delete.jdbc.connection.pool.notfound=Es ist kein JDBC-Connection Pool mit dem Namen {0} vorhanden.
delete.jdbc.connection.pool.noJndiName=Keine ID f\u00FCr JDBC-Connection Pool definiert.
delete.jdbc.connection.pool.pool_in_use=Dieser Connection Pool wird von einigen JDBC-Ressourcen oder Persistence Manager-Factory-Ressourcen referenziert. Verwenden Sie die Option 'cascade', um auch diese zu l\u00F6schen.
list.jdbc.connection.pools=Alle JDBC-Connection Pools auflisten.
list.jdbc.connection.pools.success=Befehl "list-jdbc-connection-pools" erfolgreich ausgef\u00FChrt.
list.jdbc.connection.pools.fail=Befehl "list-jdbc-connection-pools" nicht erfolgreich
list.jdbc.connection.pools.empty=Nichts aufzulisten.
ping.create.jdbc.connection.pool.fail=Versuch, w\u00E4hrend der Erstellung eines JDBC-Connection Pools ein Ping-Signal zu senden: {0} - Nicht erfolgreich.
ping.create.jdbc.connection.pool.success=Versuch, w\u00E4hrend der Erstellung eines JDBC-Connection Pools ein Ping-Signal zu senden: {0} - Erfolgreich.
