#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

add.resources=O comando add-resources cria os recursos nomeados no arquivo XML especificado. xml_file_path \u00E9 o caminho do arquivo XML que cont\u00E9m os recursos a serem criados. DOCTYPE deve ser especificado como no arquivo resources.xml.
add.resources.target=Especifica o destino para o qual voc\u00EA est\u00E1 criando os recursos.
add.resources.xml_file_name=Caminho para o arquivo MIL que cont\u00E9m os recursos a serem criados. O arquivo MIL deve residir no diret\u00F3rio <install-dir>/domains/domain1/config. Se voc\u00EA especificar um caminho relativo ou simplesmente fornecer o nome do arquivo XML, este comando ser\u00E1 colocado no in\u00EDcio de <install-dir>/domains/domain1/config para este operando.
add.resources.noJdbcConnectionPoolId=Nenhum nome de pool definido para o Pool de Conex\u00F5es JDBC.
add.resources.noDataSourceClassname=Nenhuma datasourceclassname definida para o Pool de Conex\u00F5es JDBC.
create.jdbc.resource=Cria um recurso JDBC com o nome de JNDI especificado.
create.jdbc.resource.connectionpoolid=Nome do pool de conex\u00F5es JDBC. Quando dois ou mais elementos do recurso JDBC apontam para o mesmo elemento do pool de conex\u00F5es, eles utilizam o mesmo pool de conex\u00F5es durante o runtime.
create.jdbc.resource.description=Texto fornecendo detalhes descritivos sobre o recurso JDBC.
create.jdbc.resource.jndi_name=Nome de JNDI deste recurso JDBC.
create.jdbc.resource.enabled=Determina se o recurso JDBC \u00E9 ativado em runtime. O valor default \u00E9 verdadeiro.
create.jdbc.resource.success=Recurso JDBC {0} criado com sucesso.
create.jdbc.resource.duplicate=Um recurso nomeado como {0} j\u00E1 existe.
create.jdbc.resource.fail=Falha ao executar comando create-jdbc-resource.
create.jdbc.resource.connPoolNotFound=Valor de atributo (pool-name = {0}) n\u00E3o encontrado na lista de pools de conex\u00F5es JDBC.
delete.jdbc.resource=Remove um recurso JDBC com o nome de JNDI especificado.
delete.jdbc.resource.jdbc_resource_name=O nome JNDI desse recurso JDBC a ser removido.
delete.jdbc.resource.success=Comando delete-jdbc-resource executado com sucesso.
delete.jdbc.resource.fail=Falha ao executar comando create-jdbc-resource.
delete.jdbc.resource.notfound=Um recurso JDBC nomeado como {0} n\u00E3o existe.
delete.jdbc.resource.resource-ref.exist=\u00C9 feita refer\u00EAncia ao jdbc-resource [ {0} ] em um destino de inst\u00E2ncia/cluster. Utilize delete-resource-ref no destino apropriado.
delete.jdbc.resource.multiple.resource-refs=\u00C9 feita refer\u00EAncia ao jdbc-resource [ {0} ] em v\u00E1rios destinos de inst\u00E2ncia/cluster. Utilize delete-resource-ref no destino apropriado.
delete.jdbc.resource.no.resource-ref=O jdbc-resource [ {0} ] n\u00E3o est\u00E1 referenciado no destino [ {1} ]
delete.jdbc.resource.system-all-req.object-type=O recurso jdbc [ {0} ] n\u00E3o pode ser deletado porque sua configura\u00E7\u00E3o \u00E9 necess\u00E1ria no sistema.
list.jdbc.resources=Lista todos os recursos JDBC.
list.jdbc.resources.success=Comando list-jdbc-resources executado com sucesso.
list.jdbc.resources.fail=Falha ao executar comando list-jdbc-resources.
list.jdbc.resources.empty=Nada a listar.

create.jdbc.connection.pool=Registra o pool de conex\u00F5es JDBC.
create.jdbc.connection.pool.datasourceClassname=Nome do fornecedor -- o gerenciador de recursos de fonte de dados JDBC fornecido.
create.jdbc.connection.pool.resType=Interface que a classe de datasource implementa. Deve ser um javax.sql.DataSource, javax.sql.ConnectionPoolDataSource ou javax.sql.XADataSource. Conduz a erro, quando esta op\u00E7\u00E3o possui um valor legal e a interface indicada n\u00E3o \u00E9 implementada pela classe da datasource. Esta op\u00E7\u00E3o n\u00E3o possui valor default.
create.jdbc.connection.pool.steadyPoolSize=N\u00FAmero m\u00EDnimo e inicial de conex\u00F5es mantidas no pool. O valor default \u00E9 8.
create.jdbc.connection.pool.maxPoolSize=O n\u00FAmero m\u00E1ximo de conex\u00F5es que podem ser criadas. O valor default \u00E9 32.
create.jdbc.connection.pool.maxWait=Tempo que o chamador aguarda antes que o time-out da conex\u00E3o seja enviado. O default \u00E9 60 segundos. O valor 0 for\u00E7a o chamador a aguardar indefinidamente.
create.jdbc.connection.pool.poolResize=Quantidade pela qual o pool expandir\u00E1 ou reduzir\u00E1 o n\u00FAmero de conex\u00F5es. Expandir: quando o pool n\u00E3o possui conex\u00F5es livres, ele se expande nesta quantidade. Reduzir: Todas as conex\u00F5es inv\u00E1lidas e ociosas s\u00E3o removidas, resultando, \u00E0s vezes, na remo\u00E7\u00E3o de quantidade de conex\u00F5es maior do que este valor. Steadypoolsize ser\u00E1 protegido. Valores poss\u00EDveis v\u00E3o de 0 a MAX_INTEGER. O valor default \u00E9 2.
create.jdbc.connection.pool.idleTimeout=Tempo m\u00E1ximo, em segundos, que uma conex\u00E3o pode permanecer ociosa no pool. Ap\u00F3s esse tempo, a implementa\u00E7\u00E3o pode fechar a conex\u00E3o. Esse valor de timeout deve ser menor que o valor de time-out do servidor para impedir o ac\u00FAmulo de conex\u00F5es n\u00E3o utiliz\u00E1veis na aplica\u00E7\u00E3o. O valor default \u00E9 300.
create.jdbc.connection.pool.initSql=Utilizado para especificar uma string SQL pelo usu\u00E1rio, a ser executada sempre que uma conex\u00E3o for criada com base no pool (n\u00E3o pelas conex\u00F5es que s\u00E3o reutilizadas). \u00C9 executado para inicializar o estado da conex\u00E3o. \u00C9 um atributo opcional e deveria ter um valor quando um SQL de inicializa\u00E7\u00E3o deve ser executado.
create.jdbc.connection.pool.isolationLevel=O n\u00EDvel de isolamento de transa\u00E7\u00F5es nas conex\u00F5es do pool para o banco de dados. Esta op\u00E7\u00E3o n\u00E3o tem valor default. Quando ela n\u00E3o \u00E9 especificada, o pool opera com o n\u00EDvel de isolamento default fornecido pelo driver JDBC. Voc\u00EA pode definir o n\u00EDvel de isolamento desejado usando um dos n\u00EDveis default para isolamento de transa\u00E7\u00F5es: leitura sem confirma\u00E7\u00E3o, leitura com confirma\u00E7\u00E3o, leitura repet\u00EDvel, serializ\u00E1vel. Aplica\u00E7\u00F5es que alteram o n\u00EDvel de isolamento em uma conex\u00E3o de pool correm o risco de contaminar o pool de forma program\u00E1tica. Isso pode resultar em erros do programa.
create.jdbc.connection.pool.isIsolationGuaranteed=Isso \u00E9 aplic\u00E1vel somente quando determinado n\u00EDvel de isolamento \u00E9 especificado para o n\u00EDvel de isolamento de transa\u00E7\u00F5es. O valor default \u00E9 verdadeiro. Esta op\u00E7\u00E3o assegura que o n\u00EDvel de isolamento seja definido com o valor desejado sempre que uma conex\u00E3o for obtida do pool. Isso pode causar algum impacto no desempenho de alguns drivers JDBC. Os administradores poder\u00E3o definir esta op\u00E7\u00E3o como falsa quando a aplica\u00E7\u00E3o n\u00E3o mudar de n\u00EDvel de isolamento antes de retornar a conex\u00E3o.
create.jdbc.connection.pool.isConnectValidatereq=Se definida como verdadeira, as conex\u00F5es ser\u00E3o validadas ou verificadas para confirmar se podem ser utilizadas antes serem distribu\u00EDdas para a aplica\u00E7\u00E3o. O valor default \u00E9 falso.
create.jdbc.connection.pool.validationMethod=Nome da tabela de valida\u00E7\u00E3o utilizada para executar uma consulta a fim de validar uma conex\u00E3o. As defini\u00E7\u00F5es v\u00E1lidas s\u00E3o: confirma\u00E7\u00E3o autom\u00E1tica, metadados ou tabela. O valor default \u00E9 confirma\u00E7\u00E3o autom\u00E1tica.
create.jdbc.connection.pool.validationTable=Nome da tabela de valida\u00E7\u00E3o utilizada para executar uma consulta a fim de validar uma conex\u00E3o.
create.jdbc.connection.pool.failConnection=Se definida como verdadeira, todas as conex\u00F5es do pool dever\u00E3o ser fechadas quando uma \u00FAnica verifica\u00E7\u00E3o de valida\u00E7\u00E3o falhar. O valor default \u00E9 falso. \u00C9 feita uma tentativa de restabelecer as conex\u00F5es com falha.
create.jdbc.connection.pool.allowNonComponentCallers=Um pool com esta propriedade definida como verdadeira pode ser utilizado por componentes n\u00E3o J2EE, isto \u00E9, componentes que n\u00E3o sejam EJBs ou Servlets. A conex\u00E3o retornada \u00E9 inclu\u00EDda automaticamente no contexto de transa\u00E7\u00E3o obtido do gerenciador de transa\u00E7\u00F5es. 
create.jdbc.connection.pool.nonTransactionalConnections=Um pool com esta propriedade definida com verdadeira retorna conex\u00F5es n\u00E3o transacionais. Esta conex\u00E3o n\u00E3o \u00E9 inclu\u00EDda automaticamente no gerenciador de transa\u00E7\u00F5es.
create.jdbc.connection.pool.validateAtMostOncePeriod=Utilizado para definir o intervalo de tempo em que uma conex\u00E3o \u00E9 validada no m\u00E1ximo uma vez. O default \u00E9 0, o que implica que n\u00E3o est\u00E1 ativado.
create.jdbc.connection.pool.leakTimeout=Para ajudar o usu\u00E1rio a detectar potenciais vazamentos de conex\u00E3o pela aplica\u00E7\u00E3o. Quando uma conex\u00E3o n\u00E3o \u00E9 retornada para o pool pela aplica\u00E7\u00E3o em um per\u00EDodo especificado, presume-se que seja um vazamento em potencial e um rastreamento de pilha do chamador \u00E9 registrado. O default \u00E9 0, o que implica que n\u00E3o h\u00E1 uma detec\u00E7\u00E3o de vazamento, por default. Um valor positivo n\u00E3o zero ativa a detec\u00E7\u00E3o de vazamento. No entanto, observe que o atributo somente detecta se houver uma vazamento de conex\u00E3o. A conex\u00E3o pode ser solicitada somente se connection-leak-reclaim estiver definida como verdadeiro.
create.jdbc.connection.pool.leakReclaim=Quando ativada, a conex\u00E3o ser\u00E1 reutiliz\u00E1vel (colocada de volta no pool) ap\u00F3s ocorrer o connection-leak-timeout-in-seconds. O valor default \u00E9 falso.
create.jdbc.connection.pool.creationRetryAttempts=O n\u00FAmero de tentativas para criar a nova conex\u00E3o. O default \u00E9 0, o que implica nenhuma nova tentativa.
create.jdbc.connection.pool.creationRetryInterval=Intervalo de tempo entre novas tentativas para criar uma conex\u00E3o. O default \u00E9 10 segundos. Eficaz quando connection-creation-retry-attempts for maior do que zero.
create.jdbc.connection.pool.statementTimeout=Define a propriedade de time-out de uma conex\u00E3o para ativar o t\u00E9rmino de consultas cuja execu\u00E7\u00E3o tem dura\u00E7\u00E3o excessivamente anormal. O valor default \u00E9 -1, o que implica que n\u00E3o est\u00E1 ativado.
create.jdbc.connection.pool.lazyConnectionEnlistment=Seleciona um recurso para a transa\u00E7\u00E3o somente quando de fato \u00E9 utilizada em um m\u00E9todo, o que evita a sele\u00E7\u00E3o de conex\u00F5es que n\u00E3o s\u00E3o utilizadas em uma transa\u00E7\u00E3o. Essa op\u00E7\u00E3o tamb\u00E9m impede a sele\u00E7\u00E3o desnecess\u00E1ria de conex\u00F5es armazenadas no cache dos componentes de chamada. O valor default \u00E9 falso.
create.jdbc.connection.pool.lazyConnectionAssociation=Conex\u00F5es s\u00E3o associadas lentamente quando uma opera\u00E7\u00E3o \u00E9 executada nelas. Tamb\u00E9m, elas s\u00E3o desassociadas quando a transa\u00E7\u00E3o for conclu\u00EDda e um m\u00E9todo de componente for finalizado, o que ajuda a reutilizar as conex\u00F5es f\u00EDsicas. O valor default \u00E9 falso.
create.jdbc.connection.pool.associateWithThread=Associa conex\u00F5es a um thread de forma que, quando precisar de uma conex\u00E3o, ele possa reutilizar as conex\u00F5es j\u00E1 associadas a ele, n\u00E3o incorrendo, portanto, na sobrecarga para obten\u00E7\u00E3o de uma conex\u00E3o no pool. O valor default \u00E9 falso. (Consulte tamb\u00E9m associate-with-thread-connections-count)
create.jdbc.connection.pool.associateWithThreadConnectionsCount=N\u00FAmero m\u00E1ximo de conex\u00F5es a serem associadas com um thread. O valor default \u00E9 1. Tem efeito apenas quando associate-with-thread for verdadeiro.
create.jdbc.connection.pool.driverClassname=O nome da classe do driver JDBC disponibilizado pelo fornecedor. O driver especificado deveria implementar a interface java.sql.Driver.
create.jdbc.connection.pool.matchConnections=Para ativar/desativar correspond\u00EAncia de conex\u00F5es para o pool. Pode ser definido como falso se o administrador souber que as conex\u00F5es no pool sempre ser\u00E3o homog\u00EAneas e, portanto, uma conex\u00E3o obtida do pool n\u00E3o precisa corresponder ao adaptador de recurso. O valor default \u00E9 falso.
create.jdbc.connection.pool.maxConnectionUsageCount=Quando especificada, as conex\u00F5es ser\u00E3o reutilizadas pelo pool durante o n\u00FAmero especificado de vezes; ap\u00F3s esse n\u00FAmero, elas ser\u00E3o fechadas. Essa op\u00E7\u00E3o \u00E9 \u00FAtil, por exemplo, para evitar vazamentos de instru\u00E7\u00F5es. O default \u00E9 0, o que implica que o recurso n\u00E3o est\u00E1 ativado.
create.jdbc.connection.pool.ping=Um pool com este atributo definido como verdadeiro recebe o ping durante sua cria\u00E7\u00E3o ou reconfigura\u00E7\u00E3o, para identificar e advertir sobre valores err\u00F4neos em atributos. O valor default deste atributo \u00E9 falso.
create.jdbc.connection.pool.pooling=Quando definido como falso, esse atributo desativa o pool de conex\u00F5es. O valor default deste atributo \u00E9 verdadeiro.
create.jdbc.connection.pool.sqlTraceListeners=Utilizado para definir se as instru\u00E7\u00F5es SQL executadas por aplica\u00E7\u00F5es precisam ser rastreadas. Ajuda os administradores a analisar as instru\u00E7\u00F5es. V\u00E1rios listeners podem ser especificados como uma lista separada por v\u00EDrgulas dos nomes de classes de implementa\u00E7\u00E3o do listener.
create.jdbc.connection.pool.statementCachesize=Utilizado para definir o n\u00FAmero de instru\u00E7\u00F5es a serem colocadas no cache usando o mecanismo de cache default (M\u00EDnimo Utilizado Recentemente). O valor default 0 implica que as instru\u00E7\u00F5es armazenadas no cache n\u00E3o s\u00E3o ativadas.
create.jdbc.connection.pool.wrapJdbcObjects=Quando definido como verdadeiro, a aplica\u00E7\u00E3o obter\u00E1 objetos jdbc ajustados para Statement, PreparedStatement, CallableStatement, ResultSet, DatabaseMetaData. O default \u00E9 verdadeiro.
create.jdbc.connection.pool.validationClassname=Utilizado para definir o nome da classe personalizada de valida\u00E7\u00E3o implementada pelo usu\u00E1rio. Esse par\u00E2metro \u00E9 obrigat\u00F3rio se connection-validation-type estiver definido como custom-validation. O nome da classe fornecido precisa estar acess\u00EDvel pelo servidor de aplica\u00E7\u00F5es.
create.jdbc.connection.pool.description=Texto fornecendo detalhes sobre o pool de conex\u00F5es JDBC especificado.
create.jdbc.connection.pool.property=Pares opcionais de nome/valor de atributo para configurar o pool de conex\u00F5es.
create.jdbc.connection.pool.jdbc_connection_pool_id=Nome do pool de conex\u00F5es JDBC a ser criado.
create.jdbc.connection.pool.success=Pool de conex\u00F5es JDBC {0} criado com sucesso.
create.jdbc.connection.pool.fail=Falha ao criar pool de conex\u00F5es JDBC {0}. {1}
create.jdbc.connection.pool.duplicate=Um recurso nomeado como {0} j\u00E1 existe.
create.jdbc.connection.pool.validationtable_required=--validationtable \u00E9 necess\u00E1ria se --validationmethod=table e --isconnectvalidatereq=true.
delete.jdbc.connection.pool=Remove o pool de conex\u00F5es JDBC especificado.
delete.jdbc.connection.pool.cascade=Se a op\u00E7\u00E3o for definida como verdadeira, todos os recursos JDBC associados ao pool, exceto o pr\u00F3prio pool, ser\u00E3o deletados. Quando definida como falsa, a dele\u00E7\u00E3o do pool falhar\u00E1, se qualquer recurso estiver associado ao pool. Os recursos devem ser deletados explicitamente ou a op\u00E7\u00E3o deve ser definida como verdadeira. Por default, a op\u00E7\u00E3o \u00E9 falsa.
delete.jdbc.connection.pool.jdbc_connection_pool_id=Nome do recurso JDBC a ser removido.
delete.jdbc.connection.pool.success=O comando delete-jdbc-connection-pool foi executado com sucesso.
delete.jdbc.connection.pool.fail=Falha ao executar comando delete-jdbc-connection-pool.
delete.jdbc.connection.pool.notfound=N\u00E3o existe um pool de conex\u00F5es JDBC com o nome {0}.
delete.jdbc.connection.pool.noJndiName=Nenhum ID definido para o Pool de Conex\u00F5es JDBC.
delete.jdbc.connection.pool.pool_in_use=Alguns recursos jdbc ou recursos de f\u00E1brica do gerenciador de persist\u00EAncia est\u00E3o referenciando este pool de conex\u00F5es. Use tamb\u00E9m a op\u00E7\u00E3o 'em cascata' para delet\u00E1-los.
list.jdbc.connection.pools=Lista todos os pools de conex\u00F5es JDBC.
list.jdbc.connection.pools.success=Comando list-jdbc-connection-pools executado com sucesso.
list.jdbc.connection.pools.fail=Falha ao executar comando list-jdbc-connection-pools
list.jdbc.connection.pools.empty=Nada a listar.
ping.create.jdbc.connection.pool.fail=Falha ao tentar efetuar ping durante a Cria\u00E7\u00E3o do Pool de Conex\u00F5es JDBC: {0}.
ping.create.jdbc.connection.pool.success=Tentativa bem-sucedida de efetuar ping durante a Cria\u00E7\u00E3o do Pool de Conex\u00F5es JDBC: {0}.
