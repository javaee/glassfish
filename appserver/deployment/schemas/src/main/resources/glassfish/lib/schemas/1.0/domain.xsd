<?xml version="1.0" encoding="UTF-8" standalone="no"?><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:dom="http://xmlns.oracle.com/weblogic/domain" attributeFormDefault="unqualified" elementFormDefault="qualified" targetNamespace="http://xmlns.oracle.com/weblogic/domain">
  <xs:import namespace="http://xmlns.oracle.com/weblogic/security" schemaLocation="http://xmlns.oracle.com/weblogic/security/1.0/security.xsd"/>
  <xs:complexType name="unix-machineType">
    <xs:annotation>
      <xs:documentation>Corresponds to UnixMachineMBean
 (Interface=weblogic.management.configuration.UnixMachineMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:machineType">
        <xs:sequence>
          <xs:element default="false" minOccurs="0" name="post-bind-uid-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether a server running on this machine binds to a
 UNIX User ID (UID) after it has carried out all privileged startup
 actions.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="nobody" minOccurs="0" name="post-bind-uid" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The UNIX user ID (UID) that a server running on this machine will run
 under after it has carried out all privileged startup actions.
 Otherwise, the server will continue to run under the account under which
 it was started.(Requires that you enable Post-Bind UID.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="post-bind-gid-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether a server running on this machine binds to a
 UNIX Group ID (GID) after it has carried out all privileged startup
 actions.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="nobody" minOccurs="0" name="post-bind-gid" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The UNIX group ID (GID) that a server running on this machine will run
 under after it has carried out all privileged startup actions.
 Otherwise, the server will continue to run under the group under which
 it was started.(Requires that you enable Post-Bind GID.)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="machineType">
    <xs:annotation>
      <xs:documentation>Corresponds to MachineMBean
 (Interface=weblogic.management.configuration.MachineMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The addresses by which this machine is known. May be either host
 names or literal IP addresses.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="node-manager" nillable="true" type="dom:node-managerType">
            <xs:annotation>
              <xs:documentation>Returns the NodeManager Mbean that defines the configuration of the Node Manager instance that runs on the machine.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="configurationType">
    <xs:annotation>
      <xs:documentation>Corresponds to ConfigurationMBean
 (Interface=weblogic.management.configuration.ConfigurationMBean)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="name" nillable="false">
        <xs:annotation>
          <xs:documentation>The user-specified name of this MBean instance.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="notes" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>Optional information that you can include to describe this
 configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="node-managerType">
    <xs:annotation>
      <xs:documentation>Corresponds to NodeManagerMBean
 (Interface=weblogic.management.configuration.NodeManagerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="nm-type" nillable="true">
            <xs:annotation>
              <xs:documentation>Returns the node manager type.
 (Interface=weblogic.management.configuration.NodeManagerMBean Attribute=getNMType)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="SSH"/>
                <xs:enumeration value="RSH"/>
                <xs:enumeration value="Plain"/>
                <xs:enumeration value="SSL"/>
                <xs:enumeration value="ssh"/>
                <xs:enumeration value="rsh"/>
                <xs:enumeration value="ssl"/>
                <xs:enumeration value="plain"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="localhost" minOccurs="0" name="listen-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The host name or IP address where Node Manager listens for
 connection requests.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="5556" minOccurs="0" name="listen-port" nillable="false">
            <xs:annotation>
              <xs:documentation>The port number where Node Manager listens for connection
 requests.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether communication with this Node Manager needs to
 be debugged. When enabled, Node Manager provides more information
 about request processing. This information is sent to the log of the
 server making requests to Node Manager.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="shell-command" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Returns the local command line to use when invoking SSH or RSH node
 manager functions.
 (Interface=weblogic.management.configuration.NodeManagerMBean Attribute=getShellCommand)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="node-manager-home" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Returns the nodemanager home directory that will be used to substitute
 for the shell command template
 (Interface=weblogic.management.configuration.NodeManagerMBean Attribute=getNodeManagerHome)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="bridge-destinationType">
    <xs:annotation>
      <xs:documentation>Corresponds to BridgeDestinationMBean
 (Interface=weblogic.management.configuration.BridgeDestinationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:bridge-destination-commonType">
        <xs:sequence>
          <xs:element minOccurs="0" name="properties" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.BridgeDestinationMBean Attribute=getPropertiesAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="bridge-destination-commonType">
    <xs:annotation>
      <xs:documentation>Corresponds to BridgeDestinationCommonMBean
 (Interface=weblogic.management.configuration.BridgeDestinationCommonMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="eis.jms.WLSConnectionFactoryJNDIXA" minOccurs="0" name="adapter-jndi-name" nillable="false">
            <xs:annotation>
              <xs:documentation>The JNDI name of the adapter used to communicate with the
 specified destination.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="user-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The optional user name the adapter uses to access the
 bridge destination.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="user-password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.BridgeDestinationCommonMBean Attribute=getUserPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="classpath" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The &lt;tt&gt;CLASSPATH&lt;/tt&gt; of the bridge destination.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="foreign-jndi-providerType">
    <xs:annotation>
      <xs:documentation>Corresponds to ForeignJNDIProviderMBean
 (Interface=weblogic.management.configuration.ForeignJNDIProviderMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="initial-context-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The initial context factory to use to connect.
 This class name depends on the JNDI provider and the vendor
 you are using. The value corresponds to the standard JNDI property,
 &lt;code&gt;java.naming.factory.initial&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="provider-url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The foreign JNDI provider URL.
 This value corresponds to the
 standard JNDI property, &lt;code&gt;java.naming.provider.url&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ForeignJNDIProviderMBean Attribute=getPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="user" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The remote server's user name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="foreign-jndi-link" nillable="true" type="dom:foreign-jndi-linkType">
            <xs:annotation>
              <xs:documentation>The foreign links.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="properties" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ForeignJNDIProviderMBean Attribute=getPropertiesAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="deploymentType">
    <xs:annotation>
      <xs:documentation>Corresponds to DeploymentMBean
 (Interface=weblogic.management.configuration.DeploymentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="target" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DeploymentMBean Attribute=getTargetsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="1000" minOccurs="0" name="deployment-order" nillable="false">
            <xs:annotation>
              <xs:documentation>A priority that the server uses to determine when it deploys an
 item. The priority is relative to other deployable items of the
 same type.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="foreign-jndi-linkType">
    <xs:annotation>
      <xs:documentation>Corresponds to ForeignJNDILinkMBean
 (Interface=weblogic.management.configuration.ForeignJNDILinkMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="local-jndi-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The local JNDI name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="remote-jndi-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The foreign JNDI name.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wtc-tbridge-globalType">
    <xs:annotation>
      <xs:documentation>Corresponds to WTCtBridgeGlobalMBean
 (Interface=weblogic.management.configuration.WTCtBridgeGlobalMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="transactional" nillable="true">
            <xs:annotation>
              <xs:documentation>Specifies whether this Tuxedo queuing bridge should use
 transactions when retrieving messages from a source location and
 when placing messages on a target location.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Yes"/>
                <xs:enumeration value="No"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of timeout seconds for an entire redirection when
 this Tuxedo queuing bridge places a message on the target location.
 A value of &lt;code&gt;0&lt;/code&gt; specifies an infinite wait.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="retries" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of attempts to redirect a message before this Tuxedo
 queuing bridge places the message in the specified error location
 and logs an error.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="retry-delay" nillable="false">
            <xs:annotation>
              <xs:documentation>The minimum number of milliseconds this Tuxedo queuing bridge
 waits before redirecting a message after a failure.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="wls-error-destination" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the location used to store WebLogic Server JMS
 messages when a message cannot be redirected.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="tux-error-queue" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the Tuxedo queue used to store a message that cannot
 be redirected to a Tuxedo/Q source queue.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="delivery-mode-override" nillable="true">
            <xs:annotation>
              <xs:documentation>The delivery mode to use when placing messages onto the target
 location.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="PERSIST"/>
                <xs:enumeration value="NONPERSIST"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="default-reply-delivery-mode" nillable="true">
            <xs:annotation>
              <xs:documentation>The reply delivery mode to associate with a message when placing
 messages onto the target location.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="PERSIST"/>
                <xs:enumeration value="NONPERSIST"/>
                <xs:enumeration value="DEFAULT"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="user-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The user identity for all messages handled by this Tuxedo
 queuing bridge for ACL checks when security is configured.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="allow-non-standard-types" nillable="true">
            <xs:annotation>
              <xs:documentation>Specifies whether non-standard data types are allowed to pass
 through this Tuxedo queuing bridge.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Yes"/>
                <xs:enumeration value="No"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="weblogic.jndi.WLInitialContextFactory" minOccurs="0" name="jndi-factory" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the JNDI lookup factory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="weblogic.jms.XAConnectionFactory" minOccurs="0" name="jms-factory" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the JMS connection factory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="tuxedo.services.TuxedoConnection" minOccurs="0" name="tux-factory" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the Tuxedo connection factory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jms-to-tux-priority-map" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mapping of priorities from JMS to Tuxedo. The default JMS To
 Tux Priority Map is: &lt;tt&gt;0:1 | 1:12 | 2:23 | 3:34 | 4:45 |5:56 |
 6:67 | 7:78 | 8:89 | 9:100.&lt;/tt&gt;</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="tux-to-jms-priority-map" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mapping of priorities to map from Tuxedo to JMS. The default
 JMS To Tux Priority Map is: &lt;tt&gt;1-10:0 | 11-20:1 | 21-30:2 |
 31-40:3| 41-50:4| 51-60:5 | 61-70:6 | 71-80:7 | 81-90:8 |
 91-100:9&lt;code&gt;.&lt;/code&gt;&lt;/tt&gt;</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="mail-sessionType">
    <xs:annotation>
      <xs:documentation>Corresponds to MailSessionMBean
 (Interface=weblogic.management.configuration.MailSessionMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:rmc-factoryType">
        <xs:sequence>
          <xs:element minOccurs="0" name="properties" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.MailSessionMBean Attribute=getPropertiesAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="rmc-factoryType">
    <xs:annotation>
      <xs:documentation>Corresponds to RMCFactoryMBean
 (Interface=weblogic.management.configuration.RMCFactoryMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="jndi-name" nillable="false">
            <xs:annotation>
              <xs:documentation>The JNDI Name associated with this resource.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="cache-expirationType">
    <xs:annotation>
      <xs:documentation>Corresponds to CacheExpirationMBean
 (Interface=weblogic.management.configuration.CacheExpirationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="ttl" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>The time after creation an entry is removed from the cache. TTL is
 measured in milliseconds
 (Interface=weblogic.management.configuration.CacheExpirationMBean Attribute=getTTL)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="idle-time" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>The time after last access an entry becomes a target for eviction. Idle 
 time is measured in milliseconds.
 (Interface=weblogic.management.configuration.CacheExpirationMBean Attribute=getIdleTime)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="logType">
    <xs:annotation>
      <xs:documentation>Corresponds to LogMBean
 (Interface=weblogic.management.configuration.LogMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:common-logType">
        <xs:sequence>
          <xs:element minOccurs="0" name="log-file-filter" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.LogMBean Attribute=getLogFileFilterAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="stdout-filter" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.LogMBean Attribute=getStdoutFilterAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="domain-log-broadcast-severity" nillable="true">
            <xs:annotation>
              <xs:documentation>The minimum severity of log messages going to the domain log from this server's log broadcaster.
 Messages with a lower severity than the specified value will not be published to the domain log.
 (Interface=weblogic.management.configuration.LogMBean Attribute=getDomainLogBroadcastSeverity)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Debug"/>
                <xs:enumeration value="Info"/>
                <xs:enumeration value="Warning"/>
                <xs:enumeration value="Error"/>
                <xs:enumeration value="Notice"/>
                <xs:enumeration value="Critical"/>
                <xs:enumeration value="Alert"/>
                <xs:enumeration value="Emergency"/>
                <xs:enumeration value="Off"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="domain-log-broadcast-filter" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.LogMBean Attribute=getDomainLogBroadcastFilterAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="memory-buffer-severity" nillable="true">
            <xs:annotation>
              <xs:documentation>The minimum severity of log messages going to the
 memory buffer of recent log events.
 Messages with a lower severity than the specified value will not be
 cached in the buffer.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Trace"/>
                <xs:enumeration value="Debug"/>
                <xs:enumeration value="Info"/>
                <xs:enumeration value="Warning"/>
                <xs:enumeration value="Error"/>
                <xs:enumeration value="Notice"/>
                <xs:enumeration value="Critical"/>
                <xs:enumeration value="Alert"/>
                <xs:enumeration value="Emergency"/>
                <xs:enumeration value="Off"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="memory-buffer-filter" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.LogMBean Attribute=getMemoryBufferFilterAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="500" minOccurs="0" name="memory-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The size of the memory buffer that holds the last n log records.
 This is used to support viewing the most recent log record entries 
 (tail viewing) from the WebLogic Administration Console.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="100"/>
                <xs:maxInclusive value="5000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="log4j-logging-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the server logging is based on a Log4j
 implementation. By default, WebLogic logging uses an implementation
 based on the Java Logging APIs which are part of the JDK.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="redirect-stdout-to-server-log-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>When enabled, this redirects the stdout of the JVM in which a 
 WebLogic Server instance runs, to the WebLogic logging system.
 The stdout content is published to all the registered log destinations,
 like the server terminal console and log file.
 (Interface=weblogic.management.configuration.LogMBean Attribute=isRedirectStdoutToServerLogEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="redirect-stderr-to-server-log-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>When enabled, this redirects the stderr of the JVM in which a 
 WebLogic Server instance runs, to the WebLogic Logging system.
 The stderr content is published to all the registered log destinations,
 like the server terminal console and log file.
 (Interface=weblogic.management.configuration.LogMBean Attribute=isRedirectStderrToServerLogEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="domain-log-broadcaster-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>Broadcasts log messages to the domain log in batch mode.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="server-logging-bridge-use-parent-loggers-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether application log messages to the Server Logging Handler/Appender
 in the global JDK or Log4j logger tree are propagated to the parent loggers in the chain.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="common-logType">
    <xs:annotation>
      <xs:documentation>Corresponds to CommonLogMBean
 (Interface=weblogic.management.configuration.CommonLogMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:log-fileType">
        <xs:sequence>
          <xs:element minOccurs="0" name="logger-severity" nillable="true">
            <xs:annotation>
              <xs:documentation>The minimum severity of log messages going to all
 log destinations. By default all messages are published.
 </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Trace"/>
                <xs:enumeration value="Debug"/>
                <xs:enumeration value="Info"/>
                <xs:enumeration value="Notice"/>
                <xs:enumeration value="Warning"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="logger-severity-properties" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.CommonLogMBean Attribute=getLoggerSeverityPropertiesAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="log-file-severity" nillable="true">
            <xs:annotation>
              <xs:documentation>The minimum severity of log messages going to the
 server log file. By default all messages go to the log file.
 </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Trace"/>
                <xs:enumeration value="Debug"/>
                <xs:enumeration value="Info"/>
                <xs:enumeration value="Notice"/>
                <xs:enumeration value="Warning"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="stdout-severity" nillable="true">
            <xs:annotation>
              <xs:documentation>The minimum severity of log messages going to the
 standard out. Messages with a lower severity than the specified
 value will not be published to standard out.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Trace"/>
                <xs:enumeration value="Debug"/>
                <xs:enumeration value="Info"/>
                <xs:enumeration value="Warning"/>
                <xs:enumeration value="Error"/>
                <xs:enumeration value="Notice"/>
                <xs:enumeration value="Critical"/>
                <xs:enumeration value="Alert"/>
                <xs:enumeration value="Emergency"/>
                <xs:enumeration value="Off"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="stdout-format" nillable="true">
            <xs:annotation>
              <xs:documentation>The output format to use when logging to the console.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="standard"/>
                <xs:enumeration value="noid"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="stdout-log-stack" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether to dump stack traces to the console when
 included in logged message.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="stacktrace-depth" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Determines the no of stacktrace frames to display on standard out.
 All frames are displayed in the log file. 
 -1 means all frames are displayed.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="log-fileType">
    <xs:annotation>
      <xs:documentation>Corresponds to LogFileMBean
 (Interface=weblogic.management.configuration.LogFileMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="date-format-pattern" nillable="false">
            <xs:annotation>
              <xs:documentation>The date format pattern used for rendering dates in the  log. 
 The DateFormatPattern string conforms to
 the specification of the &lt;code&gt;java.text.SimpleDateFormat&lt;/code&gt; class.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the file that stores current log messages. Usually it is a
 computed value based on the name of the parent of this MBean. For example,
 for a server log, it is &lt;code&gt;&lt;i&gt;SERVER_NAME&lt;/i&gt;.log&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="rotation-type" nillable="true">
            <xs:annotation>
              <xs:documentation>Criteria for moving old log messages to a separate file.
 &lt;ul&gt;
 &lt;li&gt;&lt;code&gt;NONE&lt;/code&gt; Messages accumulate in a single file. 
 You must erase the contents of the file when the size is too large.
 Note that WebLogic Server sets a threshold size limit of 500 MB 
 before it forces a hard rotation to prevent excessive log file growth.

 &lt;li&gt;&lt;code&gt;SIZE&lt;/code&gt; When the log file reaches the size that you specify
 in &lt;code&gt;FileMinSize&lt;/code&gt;, the server renames the file as
 &lt;code&gt;&lt;i&gt;SERVER_NAME&lt;/i&gt;.log&lt;i&gt;nnnnn&lt;/i&gt;&lt;/code&gt;.

 &lt;li&gt;&lt;code&gt;TIME&lt;/code&gt; At each time interval that you specify in
 &lt;code&gt;TimeSpan&lt;/code&gt;, the server renames the file as &lt;code&gt;&lt;i&gt;SERVER_NAME&lt;/i&gt;.log&lt;i&gt;nnnnn&lt;/i&gt;&lt;/code&gt;.
 &lt;/ul&gt;

 &lt;p&gt;After the server renames a file, subsequent messages accumulate
 in a new file with the name that you specified as the log file name.&lt;/p&gt;
 (Interface=weblogic.management.configuration.LogFileMBean Attribute=getRotationType)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="bySize"/>
                <xs:enumeration value="byTime"/>
                <xs:enumeration value="none"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="number-of-files-limited" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether to limit the number of log files that this server
 instance creates to store old messages. (Requires that you
 specify a file rotation type of &lt;code&gt;SIZE&lt;/code&gt; or
 &lt;code&gt;TIME&lt;/code&gt;.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="7" minOccurs="0" name="file-count" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of log files that the server creates when it
 rotates the log. This number does not include the file that the
 server uses to store current messages. (Requires that you enable
 Number of Files Limited.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="99999"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="24" minOccurs="0" name="file-time-span" nillable="false">
            <xs:annotation>
              <xs:documentation>The interval (in hours) at which the server saves old log
 messages to another file. (Requires that you specify a file
 rotation type of &lt;code&gt;TIME&lt;/code&gt;.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="00:00" minOccurs="0" name="rotation-time" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Determines the start time (hour and minute) for a time-based rotation sequence.

 &lt;p&gt;At the time that this value specifies, the server renames the current log file.
 Thereafter, the server renames the log file at an interval that you
 specify in File Time Span.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3600000" minOccurs="0" name="file-time-span-factor" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>This factor is defined so that log rotation can be tested at a different frequency.
 (Interface=weblogic.management.configuration.LogFileMBean Attribute=getFileTimeSpanFactor)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="500" minOccurs="0" name="file-min-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The size (1 - 65535 kilobytes) that triggers the server to move log
 messages to a separate file. The default is 500 kilobytes. After the log file reaches the specified 
 minimum size, the next time the server checks the file size, it will 
 rename the current log file as &lt;code&gt;&lt;i&gt;SERVER_NAME&lt;/i&gt;.log&lt;i&gt;nnnnn&lt;/i&gt;&lt;/code&gt; and create 
 a new one to store subsequent messages. (Requires that you specify a 
 file rotation type of &lt;code&gt;Size&lt;/code&gt;.)
 (Interface=weblogic.management.configuration.LogFileMBean Attribute=getFileMinSize)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="rotate-log-on-startup" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether a server rotates its log file during its
 startup cycle.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="log-file-rotation-dir" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The directory where the rotated log files will be stored.
 By default the rotated files are stored in the same directory
 where the log file is stored.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="8" minOccurs="0" name="buffer-size-kb" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Gets the underlying log buffer size in kilobytes
 (Interface=weblogic.management.configuration.LogFileMBean Attribute=getBufferSizeKB)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-message-log-fileType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSMessageLogFileMBean
 (Interface=weblogic.management.configuration.JMSMessageLogFileMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:log-fileType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="generic-file-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to GenericFileStoreMBean
 (Interface=weblogic.management.configuration.GenericFileStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="directory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path name to the file system directory where the file store
 maintains its data files.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="synchronous-write-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>&lt;pThe policy that determines how a file store writes data to disk and affects performance, 
 scalability, and reliability of a file store. Oracle recommends &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt; which 
 tends to have the highest performance. The default value is &lt;code&gt;Direct-Write&lt;/code&gt;. To view a running file 
 store's synchronous write policy and driver, check the BEA-280050 message in the server log./p&gt;
 The valid options are:
 &lt;ul&gt;
 &lt;li&gt;&lt;code&gt;Direct-Write&lt;/code&gt;: Direct I/O is supported on all platforms. 
 When available, file stores in direct I/O mode automatically load the 
 native I/O &lt;code&gt;wlfileio2&lt;/code&gt; driver. This option tends to out-perform 
 &lt;code&gt;Cache-Flush&lt;/code&gt; and tend to be slower than &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt;. 
 This mode does not require a  native store &lt;code&gt;wlfileio&lt;/code&gt;driver, but 
 performs faster when they are available.  &lt;/li&gt;

 &lt;li&gt;&lt;code&gt;Direct-Write-With-Cache&lt;/code&gt;: Store records 
 are written synchronously to primary files in the directory 
 specified by &lt;code&gt;Store Directory&lt;/code&gt; and  
 asynchronously to a corresponding cache file in 
 the &lt;code&gt;Cache Directory&lt;/code&gt;. The &lt;code&gt;Cache Directory&lt;/code&gt; 
 provides information about disk space, locking, security, and 
 performance implications. Requires a native store &lt;code&gt;wlfileio&lt;/code&gt; 
 driver, if the native driver cannot be loaded, then the write mode 
 automatically switches to &lt;code&gt;Direct-Write&lt;/code&gt;.  
 see setCacheDirectory(String cacheDirectory)  CacheDirectory

 &lt;li&gt;&lt;code&gt;Cache-Flush&lt;/code&gt;: Transactions cannot complete until all 
 of their writes have been flushed down to disk. This policy is reliable and scales well
 as the number of simultaneous users increases. Transactionally safe but 
 tends to be a lower performer than direct-write policies.&lt;/li&gt;

 &lt;li&gt;&lt;code&gt;Disabled&lt;/code&gt;: Transactions are treated as
 complete as soon as their associated writes are cached 
 in machine memory instead of waiting for the writes to 
 successfully reach the disk. This is the fastest policy because 
 write requests do not block waiting to be synchronized 
 to disk, but, unlike other policies, is not transactionally 
 safe in the event of operating system or hardware failures.
 Such failures can lead to duplicate or lost data/messages.
 This option does not require native store &lt;code&gt;wlfileio&lt;/code&gt; 
 drivers, but may run faster when they are available. Some 
 non-WebLogic JMS vendors default to a policy that 
 is equivalent to &lt;code&gt;Disabled&lt;code&gt;. &lt;/li&gt;
 &lt;/ul&gt;

 Notes: &lt;ul&gt;
 &lt;li&gt;When available, file stores load WebLogic &lt;code&gt;wlfileio&lt;/code&gt; native drivers, 
 which can improve performance. These drivers are included with Windows, Solaris, 
 Linux, HP-UX, and AIX WebLogic installations. 
 &lt;li&gt;Certain older versions of Microsoft Windows may incorrectly report 
 storage device synchronous write completion if the Windows default &lt;code&gt;Write Cache Enabled&lt;/code&gt;
 setting is used. This violates the transactional semantics of transactional products
 (not specific to Oracle), including file stores configured with a &lt;code&gt;Direct-Write&lt;/code&gt; (default)
 or &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt; policy, as a system crash or power failure
 can lead to a loss or a duplication of records/messages. One of the visible symptoms 
 is that this problem may manifest itself in high persistent message/transaction 
 throughput exceeding the physical capabilities of your storage device. You can 
 address the problem by applying a Microsoft supplied patch, disabling the Windows
 &lt;code&gt;Write Cache Enabled&lt;/code&gt; setting, or by using a power-protected storage 
 device. 
 See &lt;a href=http://support.microsoft.com/kb/281672/ and http://support.microsoft.com/kb/332023&lt;/a&gt;.
 (Interface=weblogic.management.configuration.GenericFileStoreMBean Attribute=getSynchronousWritePolicy)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Disabled"/>
                <xs:enumeration value="Cache-Flush"/>
                <xs:enumeration value="Direct-Write"/>
                <xs:enumeration value="Direct-Write-With-Cache"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="cache-directory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The location of the cache directory for 
 &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt;, ignored for other policies.
 When &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt; is specified as the &lt;code&gt;SynchronousWritePolicy&lt;/code&gt;, 
 cache files are created in addition to primary files (see &lt;a href='#getStoreDirectory())'&gt;Store Directory&lt;/a&gt;
 for the location of primary files). If a cache directory location is specified, 
 the path is &lt;code&gt;&lt;i&gt;CacheDirectory&lt;/i&gt;/WLStoreCache/&lt;i&gt;StoreName&lt;/i&gt;-&lt;i&gt;FileNum&lt;/i&gt;.DAT.cache&lt;/code&gt;. 
 When specified, Oracle recommends using absolute paths, but if the directory location 
 is a relative path, then &lt;code&gt;&lt;i&gt;CacheDirectory&lt;/i&gt;&lt;/code&gt; is created relative to the WebLogic 
 Server instance's home directory. If "" or &lt;code&gt;Null&lt;/code&gt; is specified, the &lt;code&gt;CacheDirectory&lt;/code&gt; 
 is located in the current operating system &lt;code&gt;temp&lt;/code&gt; dir as determined by 
 the (&lt;code&gt;java.io.tmpdir&lt;/code&gt;) Java System property (for example: &lt;code&gt;/tmp&lt;/code&gt;
 on UNIX, &lt;code&gt;%TEMP% &lt;/code&gt; on Windows) and is 
 &lt;code&gt; &lt;i&gt;TempDirectory&lt;/i&gt;/WLStoreCache/&lt;i&gt;DomainName&lt;/i&gt;/&lt;i&gt;unique-id&lt;/i&gt;/&lt;i&gt;StoreName&lt;/i&gt;-&lt;i&gt;FileNum&lt;/i&gt;.DAT.cache". 
 The value of &lt;code&gt;java.io.tmpdir&lt;/code&gt; varies between operating systems and configurations, 
 and can be overridden by passing &lt;code&gt;-Djava.io.tmpdir=&lt;i&gt;My_path&lt;/i&gt;&lt;/code&gt; on the JVM command line. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="min-window-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The minimum amount of data, in bytes and rounded down to the nearest power of 2, mapped into the 
 JVM's address space per primary store file. Applies to synchronous write policies &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt; 
 and &lt;code&gt;Disabled&lt;/code&gt;, but only when a native &lt;code&gt;wlfileio&lt;/code&gt; library is loaded. See
 &lt;a href='#getMaxWindowBufferSize'&gt; MaxWindowBufferSize&lt;/a&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="1073741824"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-window-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum amount of data, in bytes and rounded down to the nearest power of 2,  mapped into the 
 JVM's address space per primary store file. A window buffer does not consume Java heap memory, 
 but does consume off-heap (native) memory. If the store is unable to allocate the 
 requested buffer size, it allocates smaller and smaller buffers until it reaches
 &lt;code&gt;MinWindowBufferSize&lt;/code&gt;. If the store cannot honor &lt;code&gt;MinWindowBufferSize&lt;/code&gt;, it fails.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="1073741824"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="io-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The I/O buffer size, in bytes, automatically rounded down to the nearest power of 2.
 &lt;ul&gt;
 &lt;li&gt; For &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt; policy when a native
 &lt;code&gt;wlfileio&lt;/code&gt; driver is available, &lt;code&gt;IOBufferSize&lt;/code&gt; describes 
 the maximum portion of a cache view that is passed to a system call. It 
 does not consume off-heap (native) or Java heap memory.&lt;/li&gt;

 &lt;li&gt; For the &lt;code&gt;Direct-Write&lt;/code&gt; and &lt;code&gt;Cache-Flush&lt;/code&gt; policies, 
 &lt;code&gt;IOBufferSize&lt;/code&gt; is the size of a per store buffer which consumes 
 off-heap (native) memory, where one buffer is allocated during run-time, 
 but multiple buffers may be temporarily created during boot recovery.&lt;/li&gt;

 &lt;li&gt;When a native &lt;code&gt;wlfileio&lt;/code&gt; driver is not available, 
 the setting applies to off-heap (native) memory for all policies (including &lt;code&gt;Disabled&lt;/code&gt;).&lt;/li&gt;

 &lt;li&gt;For the best runtime performance, Oracle recommends setting 
 &lt;code&gt;IOBufferSize&lt;/code&gt; so that it is larger than the largest 
 write (multiple concurrent store requests may be combined into a single write).&lt;/li&gt;

 &lt;li&gt;For the best boot recovery time performance of large stores, 
 Oracle recommends setting &lt;code&gt;IOBufferSize&lt;/code&gt; to at least 2 megabytes.&lt;/li&gt;

 See &lt;code&gt;AllocatedIOBufferBytes&lt;/code&gt; to find out the actual allocated 
 off-heap (native) memory amount. It is a multiple of &lt;code&gt;AllocatedIOBufferBytes&lt;/code&gt; 
 for the &lt;code&gt;Direct-Write&lt;/code&gt; and &lt;code&gt;Cache-Flush&lt;/code&gt; policies, 
 and zero otherwise).&lt;/li&gt;

&lt;li&gt; See &lt;a href='#AllocatedIOBufferBytes'&gt;AllocatedIOBufferBytes&lt;/a&gt;.
 &lt;/ul&gt;</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="67108864"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1342177280" minOccurs="0" name="max-file-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum file size, in bytes.  
 &lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;MaxFileSize&lt;/code&gt; value affects the number of files needed to accommodate 
 a store of a particular size (number of files = store size/MaxFileSize rounded up).&lt;/li&gt;

 &lt;li&gt;A file store automatically reuses space freed by deleted records and automatically 
  expands individual files up to &lt;code&gt;MaxFileSize&lt;/code&gt; if there is not enough space for a new 
 record. If there is no space left in exiting files for a new record, a store creates an additional file.&lt;/li&gt;

 &lt;li&gt; A small number of larger files is normally preferred over a large number of smaller files 
 as each file allocates Window Buffer and file handles. &lt;/li&gt;

 BlockSize, then &lt;code&gt;MaxFileSize&lt;/code&gt; is 
 ignored, and the actual maximum file size is used for this value. The default block size is 512, 
 512 is 8 GB. &lt;/li&gt;

&lt;li&gt; See &lt;a href='#getInitialSize())'&gt;InitialSize&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="1048576"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="512" minOccurs="0" name="block-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The smallest addressable block, in bytes, of a file.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="512"/>
                <xs:maxInclusive value="8192"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1048576" minOccurs="0" name="initial-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The initial file size, in bytes. 
 &lt;ul&gt;
 &lt;li&gt;Set &lt;code&gt;InitialSize&lt;/code&gt; to pre-allocate 
 file space during a file store boot. If &lt;code&gt;InitialSize&lt;/code&gt; exceeds &lt;code&gt;MaxFileSize&lt;/code&gt;, 
 a store creates multiple files (number of files = &lt;code&gt;InitialSize&lt;/code&gt;/&lt;code&gt;MaxFileSize&lt;/code&gt; rounded up).&lt;/li&gt;

 &lt;li&gt;A file store automatically reuses the space from deleted records and automatically expands a file if there is not enough space for a new write request.&lt;/li&gt;

 &lt;li&gt;Use &lt;code&gt;InitialSize&lt;/code&gt; to limit or prevent file expansions 
 during runtime, as file expansion introduces temporary latencies that may be noticeable 
 under rare circumstances. &lt;/li&gt;
 &lt;li&gt;Changes to initial size only take effect for new file stores, or after any current files have been deleted prior to restart.&lt;/li&gt;

 &lt;li&gt; See &lt;a href='#getMaxFileSize()'&gt;MaxFileSize&lt;/a&gt;.
 &lt;/ul&gt;</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="1048576"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="file-locking-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Determines whether OS file locking is used. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="messaging-bridgeType">
    <xs:annotation>
      <xs:documentation>Corresponds to MessagingBridgeMBean
 (Interface=weblogic.management.configuration.MessagingBridgeMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="source-destination" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.MessagingBridgeMBean Attribute=getSourceDestinationAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="target-destination" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.MessagingBridgeMBean Attribute=getTargetDestinationAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="selector" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The filter for messages that are sent across the messaging
 bridge instance.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="quality-of-service" nillable="true">
            <xs:annotation>
              <xs:documentation>The QOS (quality of service) for this messaging bridge
 instance.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Exactly-once"/>
                <xs:enumeration value="Atmost-once"/>
                <xs:enumeration value="Duplicate-okay"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="qos-degradation-allowed" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies if this messaging bridge instance allows the
 degradation of its QOS (quality of service) when the configured QOS
 is not available.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="durability-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether or not the messaging bridge allows durable
 messages.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="15" minOccurs="0" name="reconnect-delay-minimum" nillable="false">
            <xs:annotation>
              <xs:documentation>The minimum amount of time, in seconds, that a messaging bridge
 instance waits before it tries to reconnect to the source or target
 destination after a failure.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="reconnect-delay-increase" nillable="false">
            <xs:annotation>
              <xs:documentation>The incremental delay time, in seconds, that a messaging bridge
 instance increases its waiting time between one failed reconnection
 attempt and the next retry.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="reconnect-delay-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The longest time, in seconds, that a messaging bridge instance
 waits between one failed attempt to connect to the source or
 target, and the next retry.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="idle-time-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum amount of time, in seconds, that a messaging bridge
 instance remains idle.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="transaction-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time, in seconds, that the transaction manager
 waits for each transaction before timing it out.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="async-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies if a messaging bridge instance forwards in
 asynchronous messaging mode.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="started" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies the initial operating state of a targeted messaging
 bridge instance.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="batch-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of messages that are processed within one
 transaction.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="batch-interval" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>The maximum amount of time, in milliseconds, that a messaging
 bridge instance waits before sending a batch of messages in one
 transaction, regardless of whether the &lt;code&gt;Batch Size&lt;/code&gt; has
 been reached or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="preserve-msg-property" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies if message properties are preserved when messages are
 forwarded by a bridge instance.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jmxType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMXMBean
 (Interface=weblogic.management.configuration.JMXMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="true" minOccurs="0" name="runtime-m-bean-server-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether each server instance in the domain initializes
 its Runtime MBean Server, which provides access to a server's
 runtime MBeans and read-only configuration MBeans.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="domain-m-bean-server-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Administration Server initializes the
 Domain MBean Server, which provides federated access to all runtime
 MBeans and read-only configuration MBeans in the domain. Through
 it, JMX clients can access all MBeans in a domain through a single
 connection.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="edit-m-bean-server-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Administration Server initializes the Edit
 MBean Server, which contains the hierarchy of MBeans used to make
 modifications to the domain's configuration. All JMX clients,
 including utilities such as the Administration Console and the
 WebLogic Scripting Tool, use the Edit MBean Server to modify a
 domain's configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="compatibility-m-bean-server-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Enables JMX clients to use the deprecated &lt;code&gt;MBeanHome&lt;/code&gt;
 interface.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="management-ejb-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Enables access to the Management EJB (MEJB), which is part of
 the J2EE Management APIs (JSR-77). </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="platform-m-bean-server-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Causes each WebLogic Server instance to initialize the JDK's
 Platform MBean Server. Enabling it, along with &lt;code&gt;isPlatformMBeanServerUsed&lt;/code&gt;,
 causes WebLogic Server to use the Platform MBean Server as its Runtime MBean Server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="invocation-timeout-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds that internal WebLogic Server processes wait to 
 connect to an MBean server, invoke an MBean server method, and return the 
 results of the invocation. If the MBean server method does not complete 
 (return) within the timeout period, WebLogic Server abandons its invocation
 attempt.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="platform-m-bean-server-used" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether WebLogic Server will use
 the Platform MBean Server for its Runtime MBean Server. Previously,
 WebLogic Server used the Platform MBean Server by default if it was enabled.
 This attribute provides a separation between enabling the Platform MBean Server 
 and using it for WebLogic Server MBeans.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="log-filterType">
    <xs:annotation>
      <xs:documentation>Corresponds to LogFilterMBean
 (Interface=weblogic.management.configuration.LogFilterMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="severity-level" nillable="false">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.LogFilterMBean Attribute=getSeverityLevel)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:enumeration value="64"/>
                <xs:enumeration value="16"/>
                <xs:enumeration value="8"/>
                <xs:enumeration value="32"/>
                <xs:enumeration value="4"/>
                <xs:enumeration value="2"/>
                <xs:enumeration value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="subsystem-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.LogFilterMBean Attribute=getSubsystemNames)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="user-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.LogFilterMBean Attribute=getUserIds)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="filter-expression" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The filter expression to be evaluated for qualifying log messages.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jdbc-connection-poolType">
    <xs:annotation>
      <xs:documentation>Corresponds to JDBCConnectionPoolMBean
 (Interface=weblogic.management.configuration.JDBCConnectionPoolMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wtc-remote-tux-domType">
    <xs:annotation>
      <xs:documentation>Corresponds to WTCRemoteTuxDomMBean
 (Interface=weblogic.management.configuration.WTCRemoteTuxDomMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="myRAP" minOccurs="0" name="access-point" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The unique name used to identify this remote Tuxedo access
 point. This name should be unique for all local and remote Tuxedo
 access points defined within a WTC Service. This allows you to
 define unique configurations having the same Access Point ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myRAPId" minOccurs="0" name="access-point-id" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The connection principal name used to identify this remote
 Tuxedo access point when attempting to establish a session
 connection to local Tuxedo access points.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="connection-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>The conditions under which this remote Tuxedo access point
 establishes a session connection with a local Tuxedo access
 point.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="ON_DEMAND"/>
                <xs:enumeration value="ON_STARTUP"/>
                <xs:enumeration value="INCOMING_ONLY"/>
                <xs:enumeration value="LOCAL"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="acl-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>The inbound access control list (ACL) policy toward requests
 from a remote Tuxedo access point.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="GLOBAL"/>
                <xs:enumeration value="LOCAL"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="credential-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>The outbound access control list (ACL) policy toward requests to
 a remote Tuxedo access point.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="GLOBAL"/>
                <xs:enumeration value="LOCAL"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="tp-usr-file" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The full path to the user password file containing UID/GID
 information. (This field is only relevant if you specify
 &lt;tt&gt;TpUsrFile&lt;/tt&gt; as the AppKey Generator.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myLAP" minOccurs="0" name="local-access-point" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The local domain name from which this remote Tuxedo domain is
 reached.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="conn-principal-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The principal name used to verify the identity of this remote
 Tuxedo access point when it establishes a session connection with a
 local Tuxedo access point. If not specified, the connection
 principal name defaults to the AccessPointID for this access
 point.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="retry-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds that this remote Tuxedo access point waits
 between automatic connection attempts to local Tuxedo access
 points. Use this only when the ConnectionPolicy value is set to
 &lt;tt&gt;ON_STARTUP&lt;/tt&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-retries" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of times that this remote Tuxedo access point
 tries to establish a session connections to local Tuxedo access
 points. Use only when the ConnectionPolicy value is set to
 &lt;tt&gt;ON_STARTUP&lt;/tt&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="//localhost:8902" minOccurs="0" name="nw-addr" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The network address and port number of this remote Tuxedo access
 point. Specify the TCP/IP address in the format:
 &lt;tt&gt;//hostname:port_number&lt;/tt&gt; or
 &lt;tt&gt;//#.#.#.#:port_number&lt;/tt&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="federation-url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL for a foreign name service that is federated into
 JNDI.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="federation-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The context at which this remote Tuxedo access point federates
 to a foreign name service. If omitted, the default federation point
 is &lt;tt&gt;tuxedo.domains&lt;/tt&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="2147483647" minOccurs="0" name="cmp-limit" nillable="false">
            <xs:annotation>
              <xs:documentation>The compression threshold this remote Tuxedo access point uses
 when sending data to a local Tuxedo access point. Application
 buffers larger than this size are compressed.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="min-encrypt-bits" nillable="true">
            <xs:annotation>
              <xs:documentation>The minimum encryption key length (in bits) this remote Tuxedo
 access point uses when establishing a session connection. A value
 of &lt;code&gt;0&lt;/code&gt; indicates no encryption is used.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="0"/>
                <xs:enumeration value="40"/>
                <xs:enumeration value="56"/>
                <xs:enumeration value="128"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="max-encrypt-bits" nillable="true">
            <xs:annotation>
              <xs:documentation>The maximum encryption key length (in bits) this remote Tuxedo
 access point uses when establishing a session connection. A value
 of &lt;code&gt;0&lt;/code&gt; indicates no encryption is used.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="0"/>
                <xs:enumeration value="40"/>
                <xs:enumeration value="56"/>
                <xs:enumeration value="128"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="app-key" nillable="true">
            <xs:annotation>
              <xs:documentation>Specifies the type of AppKey plug-in used.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="TpUsrFile"/>
                <xs:enumeration value="LDAP"/>
                <xs:enumeration value="Custom"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="allow-anonymous" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the anonymous user is allowed to access remote
 Tuxedo services.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="default-app-key" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The default &lt;tt&gt;AppKey&lt;/tt&gt; value to be used by the anonymous
 user and other users who are not defined in the user database if
 the plug-in allows them to access Tuxedo.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="TUXEDO_UID" minOccurs="0" name="tuxedo-uid-kw" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The keyword for Tuxedo UID (User ID) used in the
 &lt;tt&gt;WlsUser&lt;/tt&gt; when using the Tuxedo migration utility
 &lt;code&gt;tpmigldap&lt;/code&gt;. (This keyword is only relevant if you
 specify &lt;tt&gt;LDAP&lt;/tt&gt; as the AppKey Generator.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="TUXEDO_GID" minOccurs="0" name="tuxedo-gid-kw" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The keyword for Tuxedo GID (Group ID) used in the
 &lt;tt&gt;WlsUser&lt;/tt&gt; when using the Tuxedo migration utility
 &lt;code&gt;tpmigldap&lt;/code&gt;. (This field is only relevant if you specify
 &lt;tt&gt;LDAP&lt;/tt&gt; as the AppKey Generator.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="custom-app-key-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The full pathname to the custom &lt;tt&gt;AppKey&lt;/tt&gt; generator class.
 (This class is only relevant if you specify &lt;tt&gt;Custom&lt;/tt&gt; as the
 AppKey Generator.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="custom-app-key-class-param" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The optional parameters to be used by the custom &lt;tt&gt;AppKey&lt;/tt&gt;
 class at the class initialization time. (This class is only
 relevant if you specify &lt;tt&gt;Custom&lt;/tt&gt; as the AppKey
 Generator.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="keep-alive" nillable="false">
            <xs:annotation>
              <xs:documentation>Return value tells whether this local Tuxedo access point 
 is configured with Application Level Keep Alive, and it maximum idle
 time value before wait timer start ticking.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="keep-alive-wait" nillable="false">
            <xs:annotation>
              <xs:documentation>Return value that tells whether this local Tuxedo access point 
 requires the acknowledgement of Application Level Keep Alive,
 and how long it will wait without receiving acknowledgement before
 declare the connection is inaccessible.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wldf-data-retirementType">
    <xs:annotation>
      <xs:documentation>Corresponds to WLDFDataRetirementMBean
 (Interface=weblogic.management.configuration.WLDFDataRetirementMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="true" minOccurs="0" name="enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Enable data retirement</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="archive-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of the archive for which data retirement is configured</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="retirement-time" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>This attribute specifies the hour of day at which the data 
 retirement task will first run during the day.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="24" minOccurs="0" name="retirement-period" nillable="false">
            <xs:annotation>
              <xs:documentation>This attribute specifies the period in hours at which the data 
 retirement task will be periodically performed for the archive 
 during the day after it is first executed. The value of this attribute
 must be positive
 </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jmssaf-message-log-fileType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSSAFMessageLogFileMBean
 (Interface=weblogic.management.configuration.JMSSAFMessageLogFileMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:log-fileType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="max-threads-constraintType">
    <xs:annotation>
      <xs:documentation>Corresponds to MaxThreadsConstraintMBean
 (Interface=weblogic.management.configuration.MaxThreadsConstraintMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element default="-1" minOccurs="0" name="count" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Maximum number of concurrent threads that can execute requests sharing this
 constraint.
 &lt;p&gt;
 A count of 0 or -1 is treated as if the constraint is not present. This
 means that no constraint is enforced for these two values. A count &gt; 0 can
 be dynamically changed to 0 to indicate that constraint enforcement is no
 longer needed.
 &lt;/p&gt;
 (Interface=weblogic.management.configuration.MaxThreadsConstraintMBean Attribute=getCount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="connection-pool-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Name of the connection pool whose size is taken as the max constraint.
 &lt;p&gt;
 This can be the name of a JDBC data source. The max capacity of the
 data source is used as the constraint.
 &lt;/p&gt;
 (Interface=weblogic.management.configuration.MaxThreadsConstraintMBean Attribute=getConnectionPoolName)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jpaType">
    <xs:annotation>
      <xs:documentation>Corresponds to JPAMBean
 (Interface=weblogic.management.configuration.JPAMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="default-jpa-provider" nillable="true">
            <xs:annotation>
              <xs:documentation>The configured default JPA provider for the domain.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Kodo"/>
                <xs:enumeration value="TopLink"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="context-caseType">
    <xs:annotation>
      <xs:documentation>Corresponds to ContextCaseMBean
 (Interface=weblogic.management.configuration.ContextCaseMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="user-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ContextCaseMBean Attribute=getUserName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="group-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ContextCaseMBean Attribute=getGroupName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="request-class-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ContextCaseMBean Attribute=getRequestClassName)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="securityType">
    <xs:annotation>
      <xs:documentation>Corresponds to SecurityMBean
 (Interface=weblogic.management.configuration.SecurityMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="realm" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SecurityMBean Attribute=getRealmAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="audit-provider-class-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the Java class that implements a 6.x Auditing provider. The Auditing
 provider must be an implementation of the &lt;tt&gt;weblogic.security.audit.AuditProvider&lt;/tt&gt;
 interface. This interface is only available in Compatibility mode.
 (Interface=weblogic.management.configuration.SecurityMBean Attribute=getAuditProviderClassName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="guest-disabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether guest logins can be used to access WebLogic
 resources in this WebLogic Server domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="system" minOccurs="0" name="system-user" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the &lt;tt&gt;system&lt;/tt&gt; user. This attribute must be
 specified.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="log-all-checks-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether this WebLogic Server domain should log all
 security checks.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="password-policy" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SecurityMBean Attribute=getPasswordPolicyAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="compatibility-mode" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether migration from a WebLogic Server 6.x security
 configuration is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="federation-servicesType">
    <xs:annotation>
      <xs:documentation>Corresponds to FederationServicesMBean
 (Interface=weblogic.management.configuration.FederationServicesMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="false" minOccurs="0" name="source-site-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the Source Site is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="source-site-url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL for the Source Site.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="intersite-transfer-uri" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The Intersite Transfer URIs.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="its-requires-ssl" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Intersite Transfer Service requires SSL.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="assertion-retrieval-uri" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>One or more URIs on which to listen
  for incoming assertion retrieval requests.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="ars-requires-ssl" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Assertion Retrieval Service requires SSL.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="ars-requires-two-way-ssl" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Assertion Retrieval Service requires two-way SSL authentication.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="assertion-store-class-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The class that provides persistent storage for assertions, if you use an Assertion Store class other than the default class.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="assertion-store-properties" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.FederationServicesMBean Attribute=getAssertionStorePropertiesAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="signing-key-alias" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The alias used to store and retrieve the Source Site's signing key
 in the keystore. This key is used to sign POST profile responses.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="signing-key-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.FederationServicesMBean Attribute=getSigningKeyPassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="destination-site-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Destination Site is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="assertion-consumer-uri" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The Assertion Consumer URIs.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="acs-requires-ssl" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Assertion Consumer Service requires SSL.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="post-recipient-check-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the POST recipient check is enabled. When true, the recipient of
  the SAML Response must match the URL in the HTTP Request.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="post-one-use-check-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the POST one-use check is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="used-assertion-cache-class-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The class used as the persistent store for the Used Assertion Cache.  
 When no class is specified, the default Used Assertion Cache implemention
  is used.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="used-assertion-cache-properties" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.FederationServicesMBean Attribute=getUsedAssertionCachePropertiesAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ssl-client-identity-alias" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The alias used to store and retrieve the Destination Site's SSL client identity
 in the keystore.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ssl-client-identity-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.FederationServicesMBean Attribute=getSSLClientIdentityPassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-log-filterType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPLogFilterMBean
 (Interface=weblogic.management.configuration.SNMPLogFilterMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:snmp-trap-sourceType">
        <xs:sequence>
          <xs:element default="Notice" minOccurs="0" name="severity-level" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The minimum severity of a message that causes a WebLogic Server SNMP agent to
 generate a notification.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="subsystem-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>A list of subsystems whose messages are selected by this log
 filter. If none are specified, messages from all subsystems are
 selected.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="user-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>A list of user IDs that causes a WebLogic Server SNMP agent to generate a
 notification.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="message-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>A list of message IDs or ID ranges that cause a WebLogic Server SNMP agent to
 generate a notification.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="message-substring" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>A string that is searched for in the message text. Only messages
 that contain the string are selected. If a string is not specified,
 all messages are selected.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-trap-sourceType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPTrapSourceMBean
 (Interface=weblogic.management.configuration.SNMPTrapSourceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="enabled-server" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SNMPTrapSourceMBean Attribute=getEnabledServersAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="debug-scopeType">
    <xs:annotation>
      <xs:documentation>Corresponds to DebugScopeMBean
 (Interface=weblogic.management.configuration.DebugScopeMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="false" minOccurs="0" name="enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Gets the enabled state of the debug scope mbean.
 By default a debug scope is disabled.
 (Interface=weblogic.management.configuration.DebugScopeMBean Attribute=isEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-trap-destinationType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPTrapDestinationMBean
 (Interface=weblogic.management.configuration.SNMPTrapDestinationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="localhost" minOccurs="0" name="host" nillable="true">
            <xs:annotation>
              <xs:documentation>The DNS name or IP address of the computer on which the SNMP
 manager is running.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="162" minOccurs="0" name="port" nillable="false">
            <xs:annotation>
              <xs:documentation>The UDP port on which the SNMP manager is listening.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="public" minOccurs="0" name="community" nillable="true">
            <xs:annotation>
              <xs:documentation>The password (community name) that a WebLogic Server SNMP agent
 sends to the SNMP manager when the agent generates SNMPv1 or SNMPv2
 notifications.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="security-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Specifies the user name that the WebLogic Server SNMP agent encodes
 into SNMPv3 responses or notifications. Requires you to create a credential map
 for this user name in the WebLogic Server security realm.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="security-level" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the security protocols that the SNMP agent uses when sending
 SNMPv3 responses or notifications to the SNMP manager that this trap 
 destination represents. Requires you to specify a security name for this
 trap destination.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="noAuthNoPriv"/>
                <xs:enumeration value="authNoPriv"/>
                <xs:enumeration value="authPriv"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="rdbms-realmType">
    <xs:annotation>
      <xs:documentation>Corresponds to RDBMSRealmMBean
 (Interface=weblogic.management.configuration.RDBMSRealmMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:basic-realmType">
        <xs:sequence>
          <xs:element minOccurs="0" name="database-driver" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The Java class name for the database driver used with the RDBMS
 security realm.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="database-url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The location of the database.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="database-user-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The user name used to login into the database.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="database-password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.RDBMSRealmMBean Attribute=getDatabasePasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="schema-properties" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.RDBMSRealmMBean Attribute=getSchemaPropertiesAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="basic-realmType">
    <xs:annotation>
      <xs:documentation>Corresponds to BasicRealmMBean
 (Interface=weblogic.management.configuration.BasicRealmMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="realm-class-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Gets the realmClassName attribute of the BasicRealmMBean
 object</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="configuration-extensionType">
    <xs:annotation>
      <xs:documentation>Corresponds to ConfigurationExtensionMBean
 (Interface=weblogic.management.configuration.ConfigurationExtensionMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="descriptor-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the file that contains the module. By default the file resides in
 the DOMAIN_DIR/config directory.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wlec-connection-poolType">
    <xs:annotation>
      <xs:documentation>Corresponds to WLECConnectionPoolMBean
 (Interface=weblogic.management.configuration.WLECConnectionPoolMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="startup-classType">
    <xs:annotation>
      <xs:documentation>Corresponds to StartupClassMBean
 (Interface=weblogic.management.configuration.StartupClassMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:class-deploymentType">
        <xs:sequence>
          <xs:element default="false" minOccurs="0" name="failure-is-fatal" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether a failure in this startup class prevents the
 targeted server(s) from starting.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="load-before-app-deployments" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the targeted servers load and run this startup
 class before activating JMS and JDBC services and before starting
 deployment for applications and EJBs.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="load-before-app-activation" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the targeted servers load and run this startup
 class after activating JMS and JDBC services and before activating
 applications and EJBs.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="load-after-apps-running" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the targeted servers load and run this startup
 class after applications and EJBs are running.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="class-deploymentType">
    <xs:annotation>
      <xs:documentation>Corresponds to ClassDeploymentMBean
 (Interface=weblogic.management.configuration.ClassDeploymentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="class-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The fully qualified name of a class to load and run. The class
 must be on the server's classpath.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="arguments" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Arguments that a server uses to initialize a class.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-attribute-changeType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPAttributeChangeMBean
 (Interface=weblogic.management.configuration.SNMPAttributeChangeMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:snmp-trap-sourceType">
        <xs:sequence>
          <xs:element minOccurs="0" name="attribute-m-bean-type" nillable="true">
            <xs:annotation>
              <xs:documentation>The MBean type that defines the attribute you want to monitor.
 Do not include the &lt;code&gt;MBean&lt;/code&gt; suffix. For example, specify
 &lt;code&gt;Server&lt;/code&gt; to monitor a ServerMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="attribute-m-bean-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the MBean instance that you want to monitor. If you
 leave the name undefined, WebLogic Server monitors all instances of
 the MBean type that you specify in Monitored MBean Type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="attribute-name" nillable="true">
            <xs:annotation>
              <xs:documentation>The name of the attribute that you want to monitor. This
 attribute must be in the WebLogic Server MIB.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wtc-local-tux-domType">
    <xs:annotation>
      <xs:documentation>Corresponds to WTCLocalTuxDomMBean
 (Interface=weblogic.management.configuration.WTCLocalTuxDomMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="myLAP" minOccurs="0" name="access-point" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The unique name used to identify this local Tuxedo access point.
 This name should be unique for all local and remote Tuxedo access
 points defined within a WTC Service. This allows you to define
 unique configurations having the same Access Point ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myLAPId" minOccurs="0" name="access-point-id" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The connection principal name used to identify this local Tuxedo
 access point when attempting to establish a session connection with
 remote Tuxedo access points.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="security" nillable="true">
            <xs:annotation>
              <xs:documentation>The type of application security enforced.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="NONE"/>
                <xs:enumeration value="APP_PW"/>
                <xs:enumeration value="DM_PW"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="connection-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>The conditions under which this local Tuxedo access point
 establishes a session connection with a remote Tuxedo access
 point.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="ON_DEMAND"/>
                <xs:enumeration value="ON_STARTUP"/>
                <xs:enumeration value="INCOMING_ONLY"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="conn-principal-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The principal name used to verify the identity of this domain
 when establishing a connection to another domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="retry-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds that this local Tuxedo access point waits
 between automatic connection attempts to remote Tuxedo access
 points. Use this value only when Connection Policy is set to
 &lt;tt&gt;ON_STARTUP&lt;/tt&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="9223372036854775807" minOccurs="0" name="max-retries" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of times that this local Tuxedo access point
 tries to establish a session connection to remote Tuxedo access
 points. Use this value only when Connection Policy is set to
 &lt;tt&gt;ON_STARTUP&lt;/tt&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="block-time" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds this local Tuxedo access point
 allows for a blocking call.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="//localhost:8901" minOccurs="0" name="nw-addr" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The network address and port number of this local Tuxedo access
 point. Specify the TCP/IP address in the format:
 &lt;tt&gt;//hostname:port_number&lt;/tt&gt; or
 &lt;tt&gt;//#.#.#.#:port_number&lt;/tt&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="2147483647" minOccurs="0" name="cmp-limit" nillable="false">
            <xs:annotation>
              <xs:documentation>The compression threshold this local Tuxedo access point uses
 when sending data to a remote Tuxedo access point. Application
 buffers larger than this size are compressed.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="min-encrypt-bits" nillable="true">
            <xs:annotation>
              <xs:documentation>The minimum encryption key length (in bits) this local Tuxedo
 access point uses when establishing a session connection. A value
 of &lt;tt&gt;&lt;tt&gt;0&lt;/tt&gt;&lt;/tt&gt; indicates no encryption is used.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="0"/>
                <xs:enumeration value="40"/>
                <xs:enumeration value="56"/>
                <xs:enumeration value="128"/>
                <xs:enumeration value="256"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="max-encrypt-bits" nillable="true">
            <xs:annotation>
              <xs:documentation>The maximum encryption key length (in bits) this local Tuxedo
 access point uses when establishing a session connection. A value
 of &lt;tt&gt;0&lt;/tt&gt; indicates no encryption is used.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="0"/>
                <xs:enumeration value="40"/>
                <xs:enumeration value="56"/>
                <xs:enumeration value="128"/>
                <xs:enumeration value="256"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="interoperate" nillable="true">
            <xs:annotation>
              <xs:documentation>Specifies whether this local Tuxedo access point interoperates
 with remote Tuxedo access points that are based upon Tuxedo release
 6.5. If this value is set to &lt;tt&gt;Yes&lt;/tt&gt;, the local Tuxedo access
 point interoperates with a Tuxedo 6.5 domain.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Yes"/>
                <xs:enumeration value="No"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="keep-alive" nillable="false">
            <xs:annotation>
              <xs:documentation>Return value tells whether this local Tuxedo access point 
 is configured with Application Level Keep Alive, and it maximum idle
 time value before wait timer start ticking.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="keep-alive-wait" nillable="false">
            <xs:annotation>
              <xs:documentation>Return value that tells whether this local Tuxedo access point 
 requires the acknowledgement of Application Level Keep Alive,
 and how long it will wait without receiving acknowledgement before
 declare the connection is inaccessible.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="use-ssl" nillable="true">
            <xs:annotation>
              <xs:documentation>Return value that tells whether connection initiated or accepted
 by this Local Tuxedo access point uses SSL on top of its transport layer. Values are:</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Off"/>
                <xs:enumeration value="TwoWay"/>
                <xs:enumeration value="OneWay"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="key-stores-location" nillable="true">
            <xs:annotation>
              <xs:documentation>Provides the configuration rule to be used for 
 finding Local Access Point's identity key store and trust key store. 
 In plain text, it contains information on where the identity key store
 and trust key store are configured.  When KeyStoreLocation is configured 
 with &lt;code&gt;WLS Store&lt;/code&gt;, WTC uses configuration information from the WLS 
 Key Stores configuration.  Otherwise, it uses the key stores 
 information configured in the Local Access Point.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="WLS Stores"/>
                <xs:enumeration value="Custom Stores"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="identity-key-store-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path and file name of the identity keystore.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="identity-key-store-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WTCLocalTuxDomMBean Attribute=getIdentityKeyStorePassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="private-key-alias" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The string alias used to store and retrieve the Local Tuxedo access point's
 private key in the keystore. This private key is associated with the
 Local Tuxedo access point's digital certificate.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="private-key-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WTCLocalTuxDomMBean Attribute=getPrivateKeyPassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="trust-key-store-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path and file name of the trust keystore.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="trust-key-store-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WTCLocalTuxDomMBean Attribute=getTrustKeyStorePassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wtc-passwordType">
    <xs:annotation>
      <xs:documentation>Corresponds to WTCPasswordMBean
 (Interface=weblogic.management.configuration.WTCPasswordMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="myLAP" minOccurs="0" name="local-access-point" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the local access point to which this password
 applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myRAP" minOccurs="0" name="remote-access-point" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the remote access point to which this password
 applies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myLPWDIV" minOccurs="0" name="local-password-iv" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The initialization vector used to encrypt the local
 password.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myLPWD" minOccurs="0" name="local-password" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The local password used to authenticate connections between the
 local access point and the remote access point.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myRPWDIV" minOccurs="0" name="remote-password-iv" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The initialization vector used to encrypt the remote
 password.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myRPWD" minOccurs="0" name="remote-password" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The remote password used to authenticate connections between the
 local access point and remote access point.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="webservice-security-tokenType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebserviceSecurityTokenMBean
 (Interface=weblogic.management.configuration.WebserviceSecurityTokenMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:webservice-security-configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="webservice-security-configurationType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebserviceSecurityConfigurationMBean
 (Interface=weblogic.management.configuration.WebserviceSecurityConfigurationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="class-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The fully qualified name of the class that implements a particular
 credential provider or token handler.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="token-type" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Specifies the type of token used for the particular credential 
 provider or token handler.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="configuration-property" nillable="true" type="dom:configuration-propertyType">
            <xs:annotation>
              <xs:documentation>Specifies the list of properties that are associated with this
 credential provider or token handler.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="configuration-propertyType">
    <xs:annotation>
      <xs:documentation>Corresponds to ConfigurationPropertyMBean
 (Interface=weblogic.management.configuration.ConfigurationPropertyMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="false" minOccurs="0" name="encrypt-value-required" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the property should be encrypted.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="value" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Specifies the value of the property.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="encrypted-value-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ConfigurationPropertyMBean Attribute=getEncryptedValueEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-distributed-queue-memberType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSDistributedQueueMemberMBean
 (Interface=weblogic.management.configuration.JMSDistributedQueueMemberMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-distributed-destination-memberType">
        <xs:sequence>
          <xs:element minOccurs="0" name="jms-queue" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JMSDistributedQueueMemberMBean Attribute=getJMSQueueAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-distributed-destination-memberType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSDistributedDestinationMemberMBean
 (Interface=weblogic.management.configuration.JMSDistributedDestinationMemberMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="1" minOccurs="0" name="weight" nillable="false">
            <xs:annotation>
              <xs:documentation>The weight of a distributed destination member is a measure of
 its ability to handle message load, with respect to the other
 member destinations in the same distributed set.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="overload-protectionType">
    <xs:annotation>
      <xs:documentation>Corresponds to OverloadProtectionMBean
 (Interface=weblogic.management.configuration.OverloadProtectionMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="65536" minOccurs="0" name="shared-capacity-for-work-managers" nillable="false">
            <xs:annotation>
              <xs:documentation>Total number of requests that can be present in the server. This includes
 requests that are enqueued and those under execution.
 &lt;p&gt;
 The server performs a differentiated denial of service on reaching the
 shared capacity. A request with higher priority will be accepted in place 
 of a lower priority request already in the queue. The lower priority 
 request is kept waiting in the queue till all high priority requests are 
 executed. Further enqueues of the low priority requests are rejected right 
 away. 
 &lt;/p&gt;
 (Interface=weblogic.management.configuration.OverloadProtectionMBean Attribute=getSharedCapacityForWorkManagers)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="1073741824"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="panic-action" nillable="true">
            <xs:annotation>
              <xs:documentation>Exit the server process when the kernel encounters a panic condition like 
 an unhandled OOME. An unhandled OOME could lead to inconsistent state and a 
 server restart is advisable if backed by node manager or a HA agent.
 (Interface=weblogic.management.configuration.OverloadProtectionMBean Attribute=getPanicAction)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="no-action"/>
                <xs:enumeration value="system-exit"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="failure-action" nillable="true">
            <xs:annotation>
              <xs:documentation>Enable automatic forceshutdown of the server on failed state.  
 The server self-health monitoring detects fatal failures and mark the 
 server as failed. The server can be restarted using NodeManager or a 
 HA agent.
 (Interface=weblogic.management.configuration.OverloadProtectionMBean Attribute=getFailureAction)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="no-action"/>
                <xs:enumeration value="force-shutdown"/>
                <xs:enumeration value="admin-state"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="free-memory-percent-high-threshold" nillable="false">
            <xs:annotation>
              <xs:documentation>Percentage free memory after which the server overload condition is cleared.
 WorkManagers stop performing overloadActions and start regular execution
 once the overload condition is cleared.
 (Interface=weblogic.management.configuration.OverloadProtectionMBean Attribute=getFreeMemoryPercentHighThreshold)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="99"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="free-memory-percent-low-threshold" nillable="false">
            <xs:annotation>
              <xs:documentation>Percentage free memory below which the server is considered overloaded.
 WorkManagers perform overloadAction once the server is marked as overloaded.
 (Interface=weblogic.management.configuration.OverloadProtectionMBean Attribute=getFreeMemoryPercentLowThreshold)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="99"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="server-failure-trigger" nillable="true" type="dom:server-failure-triggerType">
            <xs:annotation>
              <xs:documentation>Configure a trigger that marks the server as failed when the condition 
 is met. A failed server in turn can be configured to shutdown or go into
 admin state.
 (Interface=weblogic.management.configuration.OverloadProtectionMBean Attribute=getServerFailureTrigger)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="server-failure-triggerType">
    <xs:annotation>
      <xs:documentation>Corresponds to ServerFailureTriggerMBean
 (Interface=weblogic.management.configuration.ServerFailureTriggerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="600" minOccurs="0" name="max-stuck-thread-time" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds that a thread must be continually working
 before this server diagnoses the thread as being stuck.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="stuck-thread-count" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of stuck threads after which the server is transitioned into
 FAILED state. There are options in OverloadProtectionMBean to suspend and
 shutdown a FAILED server. By default, the server continues to run in 
 FAILED state.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-serverType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServerMBean
 (Interface=weblogic.management.configuration.WebServerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="web-server-log" nillable="true" type="dom:web-server-logType">
            <xs:annotation>
              <xs:documentation>Returns the Log settings for the WebServer/VirtualHost.
 (Interface=weblogic.management.configuration.WebServerMBean Attribute=getWebServerLog)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="frontend-host" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the host to which all redirected URLs will be sent.
 If specified, WebLogic Server will use this value rather than the
 one in the HOST header.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="frontend-http-port" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The name of the HTTP port to which all redirected URLs will be
 sent. If specified, WebLogic Server will use this value rather than
 the one in the HOST header.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="frontend-https-port" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The name of the secure HTTP port to which all redirected URLs
 will be sent. If specified, WebLogic Server will use this value
 rather than the one in the HOST header.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="503" minOccurs="0" name="overload-response-code" nillable="false">
            <xs:annotation>
              <xs:documentation>Get the response code to be used when an application is overloaded. An 
 application can get overloaded when the number of pending requests has
 reached the max capacity specified in the WorkManager or when the server
 is low on memory. The low memory condition is determined using 
 {@link OverloadProtectionMBean#getFreeMemoryPercentLowThreshold()}.
 (Interface=weblogic.management.configuration.WebServerMBean Attribute=getOverloadResponseCode)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="100"/>
                <xs:maxInclusive value="599"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="keep-alive-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether there should be a persistent connection to
 this server. (This may improve the performance of your Web
 applications.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="keep-alive-secs" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time this server waits before closing an 
 inactive HTTP connection.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="5"/>
                <xs:maxInclusive value="300"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="https-keep-alive-secs" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time this server waits before closing an 
 inactive HTTPS connection.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="30"/>
                <xs:maxInclusive value="360"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="post-timeout-secs" nillable="false">
            <xs:annotation>
              <xs:documentation>Timeout (in seconds) for reading HTTP POST data in a servlet request.
 If the POST data is chunked, the amount of time the server waits between
 the end of receiving the last chunk of data and the end of receiving the
 next chunk of data in an HTTP POST before it times out.
 (This is used to prevent denial-of-service attacks that attempt to overload the server with POST data.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="120"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-post-time-secs" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Max Post Time (in seconds) for reading HTTP POST data in a
 servlet request. MaxPostTime &amp;lt; 0 means unlimited</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-post-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum post size this server allows for reading HTTP POST
 data in a servlet request. A value less than 0 indicates an
 unlimited size.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="send-server-header-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether this server name is sent with the HTTP
 response. (This is useful for wireless applications where there is
 limited space for headers.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-web-app-context-root" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Returns the original context-root for the default Web application
 for this Web server. Alternatively, you can use the context-root 
 attributes in application.xml or weblogic.xml to set a default Web 
 application. The context-root for a default Web application is /. If 
 "" (empty string) is specified, the Web server defaults to /.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="charsets" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WebServerMBean Attribute=getCharsetsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="url-resource" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WebServerMBean Attribute=getURLResourceAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="chunked-transfer-disabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the use of Chunk Transfer-Encoding in HTTP/1.1
 is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="use-highest-compatible-http-version" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Enables use of the highest compatible HTTP protocol
 version-string in the response. E.g. HTTP spec suggests that
 HTTP/1.1 version-string should be used in response to a request
 using HTTP/1.0. This does not necessarily affect the response
 format.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="use-header-encoding" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WebServerMBean Attribute=isUseHeaderEncoding)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="auth-cookie-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether authcookie feature is enabled or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="512" minOccurs="0" name="write-chunk-bytes" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The default size of the blocks to be written to the network
 layer.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="wap-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the session ID should include JVM information.
 (Checking this box may be necessary when using URL rewriting with
 WAP devices that limit the size of the URL to 128 characters, and
 may also affect the use of replicated sessions in a cluster.)
 When this box is selected,
 the default size of the URL will be set at 52 characters, and it 
 will not contain any special characters.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="accept-context-path-in-get-real-path" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether this server allows the inclusion of the
 context path in the virtual path to &lt;tt&gt;context.getRealPath()&lt;/tt&gt;.
 (If checked, you cannot use sub directories with the same name as
 &lt;tt&gt;contextPath&lt;/tt&gt;). This is a compatibility switch that will be
 deprecated 9.0.0.0 in future releases.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="single-signon-disabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the singleSignonDisabled attribute is
 enabled</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="web-deployment" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WebServerMBean Attribute=getWebDeploymentsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="work-manager-for-remote-session-fetching" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Set the WorkManager name that will be used to execute servlet requests
 that need their session retrieved from a remote server since the current
 server is neither the primary nor the secondary for the request. This can
 happen if request stickness is lost for example due to hardware LB
 configuration issues. Creating a dedicated WorkManager with a max threads
 constraint ensures that threads are available to service requests for which
 the current server is the primary.
 (Interface=weblogic.management.configuration.WebServerMBean Attribute=getWorkManagerForRemoteSessionFetching)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="client-ip-header" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Get the Client IP Header from WebSerevrMBean.
 (Interface=weblogic.management.configuration.WebServerMBean Attribute=getClientIpHeader)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-server-logType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServerLogMBean
 (Interface=weblogic.management.configuration.WebServerLogMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:log-fileType">
        <xs:sequence>
          <xs:element default="true" minOccurs="0" name="logging-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether this server logs HTTP requests. (The remaining
 fields on this page are relevant only if you select this check box.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="date time cs-method cs-uri sc-status" minOccurs="0" name="elf-fields" nillable="true">
            <xs:annotation>
              <xs:documentation>Returns the list of fields specified for the &lt;code&gt;extended&lt;/code&gt;
 logging format for access.log. </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="log-file-format" nillable="true">
            <xs:annotation>
              <xs:documentation>The format of the HTTP log file. Both formats are defined by the
 W3C. With the extended log format, you use server
 directives in the log file to customize the information that the
 server records.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="common"/>
                <xs:enumeration value="extended"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="log-time-in-gmt" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the time stamps for HTTP log messages are in
 Greenwich Mean Time (GMT) regardless of the local time zone that
 the host computer specifies.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="log-milli-seconds" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> Specifies if HTTP log messages should contain MilliSeconds.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wtc-exportType">
    <xs:annotation>
      <xs:documentation>Corresponds to WTCExportMBean
 (Interface=weblogic.management.configuration.WTCExportMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="myExport" minOccurs="0" name="resource-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name used to identify an exported service.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myLAP" minOccurs="0" name="local-access-point" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the local access point that exports this
 service.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ejb-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The complete name of the EJB home interface to use when invoking
 a service.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="target-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WTCExportMBean Attribute=getTargetClass)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="target-jar" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WTCExportMBean Attribute=getTargetJar)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="remote-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The remote name of this service. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="generic-jdbc-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to GenericJDBCStoreMBean
 (Interface=weblogic.management.configuration.GenericJDBCStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="prefix-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The prefix for the JDBC store's database table
 (&lt;code&gt;WLStore&lt;/code&gt;), in the following format:
 &lt;code&gt;[[[catalog.]schema.]prefix]&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="create-table-ddl-file" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Specifies the DDL (Data Definition Language) file to use for
 creating the JDBC store's backing table.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-system-resourceType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSSystemResourceMBean
 (Interface=weblogic.management.configuration.JMSSystemResourceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:system-resourceType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="system-resourceType">
    <xs:annotation>
      <xs:documentation>Corresponds to SystemResourceMBean
 (Interface=weblogic.management.configuration.SystemResourceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:basic-deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="descriptor-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the file that contains the module. By default the file resides in
 the DOMAIN_DIR/config directory.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="basic-deploymentType">
    <xs:annotation>
      <xs:documentation>Corresponds to BasicDeploymentMBean
 (Interface=weblogic.management.configuration.BasicDeploymentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:target-infoType">
        <xs:sequence>
          <xs:element minOccurs="0" name="source-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path to the source of the deployment unit on admin server.
 (Interface=weblogic.management.configuration.BasicDeploymentMBean Attribute=getSourcePath)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sub-deployment" nillable="true" type="dom:sub-deploymentType">
            <xs:annotation>
              <xs:documentation>Targeting for subcomponents that differs from targeting for the
 component.
 (Interface=weblogic.management.configuration.BasicDeploymentMBean Attribute=getSubDeployments)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="100" minOccurs="0" name="deployment-order" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;An integer value that indicates when this unit
 is deployed, relative to other deployable units on a server, 
 during startup.
 &lt;p&gt;
 Units with lower values are deployed before those with
 higher values.
 (Interface=weblogic.management.configuration.BasicDeploymentMBean Attribute=getDeploymentOrder)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="deployment-principal-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;A string value that indicates what principal should be used 
 when deploying the file or archive during startup and shutdown. 
 This principal will be used to set the current subject when calling out 
 into application code for interfaces such as ApplicationLifecycleListener. 
 If no principal name is specified, then the anonymous principal will be used.
 (Interface=weblogic.management.configuration.BasicDeploymentMBean Attribute=getDeploymentPrincipalName)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="target-infoType">
    <xs:annotation>
      <xs:documentation>Corresponds to TargetInfoMBean
 (Interface=weblogic.management.configuration.TargetInfoMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="target" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.TargetInfoMBean Attribute=getTargetsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="module-type" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The values match those defined by jsr88. This attribute may move to another MBean.
 (Interface=weblogic.management.configuration.TargetInfoMBean Attribute=getModuleType)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="compatibility-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>
 This is only set for beans created as a result of conversion from an
 8.1 application configured using ApplicationMBean and ComponentMBean.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="sub-deploymentType">
    <xs:annotation>
      <xs:documentation>Corresponds to SubDeploymentMBean
 (Interface=weblogic.management.configuration.SubDeploymentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:target-infoType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sub-deployment" nillable="true" type="dom:sub-deploymentType">
            <xs:annotation>
              <xs:documentation>The subdeployment groups within this JMS module. Subdeployments enable 
 you to deploy some resources in a JMS module to a JMS server and other 
 JMS resources to a server instance or cluster.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-service-bufferingType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServiceBufferingMBean
 (Interface=weblogic.management.configuration.WebServiceBufferingMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="web-service-request-buffering-queue" nillable="true" type="dom:web-service-request-buffering-queueType">
            <xs:annotation>
              <xs:documentation>Configuration for the request buffering queue
 (Interface=weblogic.management.configuration.WebServiceBufferingMBean Attribute=getWebServiceRequestBufferingQueue)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="web-service-response-buffering-queue" nillable="true" type="dom:web-service-response-buffering-queueType">
            <xs:annotation>
              <xs:documentation>Configuration for the response buffering queue
 (Interface=weblogic.management.configuration.WebServiceBufferingMBean Attribute=getWebServiceResponseBufferingQueue)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3" minOccurs="0" name="retry-count" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of times a buffered request or response can be retried before
 it is abandoned (and moved to any error queue defined for the buffer queue)
 (Interface=weblogic.management.configuration.WebServiceBufferingMBean Attribute=getRetryCount)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="P0DT30S" minOccurs="0" name="retry-delay" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The amount time between retries of a buffered request and response. Note,
 this value is only applicable when RetryCount &gt; 0. String value in
 ‘Duration’ format. Defaults to ‘P0DT30S (30 seconds).
 (Interface=weblogic.management.configuration.WebServiceBufferingMBean Attribute=getRetryDelay)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-service-request-buffering-queueType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServiceRequestBufferingQueueMBean
 (Interface=weblogic.management.configuration.WebServiceRequestBufferingQueueMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:web-service-buffering-queueType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-service-buffering-queueType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServiceBufferingQueueMBean
 (Interface=weblogic.management.configuration.WebServiceBufferingQueueMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="enabled" nillable="true" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A boolean flag indicating whether buffering is enabled (request buffering
 if this is the request queue, or response buffering if this is the
 response queue). Defaults to false.
 (Interface=weblogic.management.configuration.WebServiceBufferingQueueMBean Attribute=isEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="connection-factory-jndi-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The JNDI name of the connection factory to use when buffering messages
 onto this queue. Defaults to the 'default' JMS connection factory.
 (Interface=weblogic.management.configuration.WebServiceBufferingQueueMBean Attribute=getConnectionFactoryJndiName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transaction-enabled" nillable="true" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A boolean flag indicating whether transactions should be used when
 buffering a message onto or consuming a message off of this queue. Defaults
 to false.
 (Interface=weblogic.management.configuration.WebServiceBufferingQueueMBean Attribute=isTransactionEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-service-response-buffering-queueType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServiceResponseBufferingQueueMBean
 (Interface=weblogic.management.configuration.WebServiceResponseBufferingQueueMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:web-service-buffering-queueType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-distributed-queueType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSDistributedQueueMBean
 (Interface=weblogic.management.configuration.JMSDistributedQueueMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-distributed-destinationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-distributed-destinationType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSDistributedDestinationMBean
 (Interface=weblogic.management.configuration.JMSDistributedDestinationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-virtual-destinationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-virtual-destinationType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSVirtualDestinationMBean
 (Interface=weblogic.management.configuration.JMSVirtualDestinationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-queueType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSQueueMBean
 (Interface=weblogic.management.configuration.JMSQueueMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-destinationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-destinationType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSDestinationMBean
 (Interface=weblogic.management.configuration.JMSDestinationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-dest-commonType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-dest-commonType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSDestCommonMBean
 (Interface=weblogic.management.configuration.JMSDestCommonMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wldf-server-diagnosticType">
    <xs:annotation>
      <xs:documentation>Corresponds to WLDFServerDiagnosticMBean
 (Interface=weblogic.management.configuration.WLDFServerDiagnosticMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="image-dir" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The default directory where the server stores captured
 diagnostic images.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="image-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The default timeout period, in minutes, that the server uses to
 delay future diagnostic image-capture requests.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="1440"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60000" minOccurs="0" name="events-image-capture-interval" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>The time span, in milliseconds, for which recently
 archived events will be captured in the diagnostic image. All
 events archived on or after
 ( &lt;code&gt;System.currentTimeMillis() - interval&lt;/code&gt; )
 will be captured.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="data/store/diagnostics" minOccurs="0" name="diagnostic-store-dir" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The directory in which the current server maintains its
 diagnostic store.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="diagnostic-store-file-locking-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Determines whether OS file locking is used.Applies to both primary and cache files.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="diagnostic-data-archive-type" nillable="true">
            <xs:annotation>
              <xs:documentation>Determines whether the current server persists its harvested
 metrics and event data in a diagnostic store (file-based store)
 or a JDBC based archive. The default store is file-based. </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="FileStoreArchive"/>
                <xs:enumeration value="JDBCArchive"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="diagnostic-jdbc-resource" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WLDFServerDiagnosticMBean Attribute=getDiagnosticJDBCResourceAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="synchronous-event-persistence-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies the instrumentation events persistence policy. If
 true, events will be persisted synchronously within the same
 thread. If false, events will be queued up to be persisted in a
 separate thread.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="5000" minOccurs="0" name="event-persistence-interval" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>The interval, in milliseconds, at which queued up
 instrumentation events will be periodically dispatched to the
 archive.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="diagnostic-context-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If true, diagnostic context creation is enabled.
 If false, the diagnostic context will not be created
 when requested. However, if the diagnostics context already
 exists because it was propagated from another VM or was
 created through the DyeInjection monitor, the context will be
 made available.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="data-retirement-test-mode-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;This attribute controls whether the data retirement functionality runs in 
 in "test-mode". In test mode, the time granularity is 1 minute, rather than 1 hour
 in the normal case. This attribute is for internal testing use only. Its purpose is
 to enable certain data retirement tests to run in a reasonable time.
 (Interface=weblogic.management.configuration.WLDFServerDiagnosticMBean Attribute=isDataRetirementTestModeEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="data-retirement-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>This attribute controls if configuration based data retirement functionality 
 is enabled on the server. If disabled, all retirement policies will be disabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="100" minOccurs="0" name="preferred-store-size-limit" nillable="false">
            <xs:annotation>
              <xs:documentation>Return the preferred limit on the size of diagnostic store file in MB.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="store-size-check-period" nillable="false">
            <xs:annotation>
              <xs:documentation>Return the period in hours at which diagnostic store file size check will be performed</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wldf-data-retirement-by-age" nillable="true" type="dom:wldf-data-retirement-by-ageType">
            <xs:annotation>
              <xs:documentation>Return the WLDFDataRetirementByAgeMBeans parented by this  
 WLDFServerDiagnosticMBean.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="wldf-diagnostic-volume" nillable="true">
            <xs:annotation>
              <xs:documentation>Specifies the volume of diagnostic data that is captured in the Oracle JRockit Flight Recorder diagnostic image.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Off"/>
                <xs:enumeration value="Low"/>
                <xs:enumeration value="Medium"/>
                <xs:enumeration value="High"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wldf-data-retirement-by-ageType">
    <xs:annotation>
      <xs:documentation>Corresponds to WLDFDataRetirementByAgeMBean
 (Interface=weblogic.management.configuration.WLDFDataRetirementByAgeMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:wldf-data-retirementType">
        <xs:sequence>
          <xs:element default="72" minOccurs="0" name="retirement-age" nillable="false">
            <xs:annotation>
              <xs:documentation>Retirement age for records in hours. Older records will be eligible
 for deletion. 
 </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="network-channelType">
    <xs:annotation>
      <xs:documentation>Corresponds to NetworkChannelMBean
 (Interface=weblogic.management.configuration.NetworkChannelMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Optional short description of this channel for console display
 purposes. For long descriptions, use the "Notes" field.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="8001" minOccurs="0" name="listen-port" nillable="false">
            <xs:annotation>
              <xs:documentation>The plaintext (non-SSL) listen port for the channel. Individual
 servers may override this value, but may not enable the port if
 disabled here and may not disable the port if enabled here.
 Individual servers may override this value using a
 NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="listen-port-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not plaintext port is enabled for the channel.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="8002" minOccurs="0" name="ssl-listen-port" nillable="false">
            <xs:annotation>
              <xs:documentation>The SSL listen port for the channel. Individual server's may
 override this value, but may not enable the port if disabled here
 and may not disable the port if enabled here. SSL must be
 configured and enabled for this port to work. Individual servers
 may override this value using a NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="ssl-listen-port-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not SSL port is enabled for the channel. SSL must be
 configured and enabled in addition to this setting for the SSL port
 to work.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cluster-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>This channel's cluster address. If this is not set, the cluster
 address from the cluster configuration is used in its place.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="t3-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not plaintext (non-SSL) T3 traffic is enabled. Note
 that it is not possible to disable T3 traffic on the default
 channel(s).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="t3s-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not secure T3 traffic is enabled. Note that it is not
 possible to disable T3 traffic on the default channel(s).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="http-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not plaintext (non-SSL) HTTP traffic is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="https-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not secure (SSL) HTTP traffic is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="com-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether plaintext (non-SSL) COM traffic is
 enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="outgoing-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not new server-to-server connections may consider
 this channel when initiating.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="bound-outgoing-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Bind new outgoing server side T3 or T3S connections to the
 server channel's listen address. Other protocols ignore this field.
 This field is ignored for connections initiated via URLs, it takes
 effect if and only if the connection was initiated by accessing a
 remote reference (such as an EJB or RMI stub.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="50" minOccurs="0" name="channel-weight" nillable="false">
            <xs:annotation>
              <xs:documentation>A weight to give this channel when creating server-to-server
 connections.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="50" minOccurs="0" name="accept-backlog" nillable="false">
            <xs:annotation>
              <xs:documentation>Allowed backlog of connection requests on the listen port(s).
 Individual servers may override this value using a
 NetworkAccessPointMBean. Setting the backlog to 0 may prevent
 accepting any incoming connection on some of the OS.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5000" minOccurs="0" name="login-timeout-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>The login timeout for the server, in milliseconds. This value
 must be equal to or greater than 0. Individual servers may override
 this value using a NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="25000" minOccurs="0" name="login-timeout-millis-ssl" nillable="false">
            <xs:annotation>
              <xs:documentation>Duration allowed for an SSL login sequence. If the duration is
 exceeded, the login is timed out. 0 to disable. Individual servers
 may override this value using a NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="tunneling-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Enables tunneling via http.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="45" minOccurs="0" name="tunneling-client-ping-secs" nillable="false">
            <xs:annotation>
              <xs:documentation>Interval (in seconds) at which to ping an http-tunneled client
 to see if its still alive. Individual servers may override this
 value using a NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="40" minOccurs="0" name="tunneling-client-timeout-secs" nillable="false">
            <xs:annotation>
              <xs:documentation>Duration (in seconds) after which a missing http-tunneled client
 is considered dead. Individual servers may override this value
 using a NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="complete-t3-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete T3
 message to be received. This attribute helps guard against denial
 of service attacks in which a caller indicates that they will be
 sending a message of a certain size which they never finish
 sending. Individual servers may override this value using a
 NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="complete-http-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete HTTP
 message to be received. This attribute helps guard against denial
 of service attacks in which a caller indicates that they will be
 sending a message of a certain size which they never finish
 sending. Individual servers may override this value using a
 NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="complete-com-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete COM
 message to be received. This attribute helps guard against denial
 of service attacks in which a caller indicates that they will be
 sending a message of a certain size which they never finish
 sending. Individual servers may override this value using a
 NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10000000" minOccurs="0" name="max-t3-message-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum T3 message size allowable in a message header. This
 attribute attempts to prevent a denial of service attack whereby a
 caller attempts to force the server to allocate more memory than is
 available thereby keeping the server from responding quickly to
 other requests. Individual servers may override this value using a
 NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="4096"/>
                <xs:maxInclusive value="2000000000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10000000" minOccurs="0" name="max-http-message-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum HTTP message size allowable in a message header.
 This attribute attempts to prevent a denial of service attack
 whereby a caller attempts to force the server to allocate more
 memory than is available thereby keeping the server from responding
 quickly to other requests. Individual servers may override this
 value using a NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="4096"/>
                <xs:maxInclusive value="2000000000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10000000" minOccurs="0" name="max-com-message-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum COM message size allowable in a message header. This
 attribute attempts to prevent a denial of service attack whereby a
 caller attempts to force the server to allocate more memory than is
 available thereby keeping the server from responding quickly to
 other requests. Individual servers may override this value using a
 NetworkAccessPointMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="4096"/>
                <xs:maxInclusive value="2000000000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="iiop-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not plaintext (non-SSL) IIOP traffic is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="iiops-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not secure IIOP traffic is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="complete-iiop-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete IIOP
 message to be received. This attribute helps guard against denial
 of service attacks in which a caller indicates that they will be
 sending a message of a certain size which they never finish
 sending. A value of 0 indicates there is no timeout.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10000000" minOccurs="0" name="max-iiop-message-size" nillable="false">
            <xs:annotation>
              <xs:documentation>Specify the maximum IIOP message size allowable in a message
 header. This attribute attempts to prevent a denial of service
 attack whereby a caller attempts to force the server to allocate
 more memory than is available thereby keeping the server from
 responding quickly to other requests.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="4096"/>
                <xs:maxInclusive value="2000000000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="idle-iiop-connection-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds an IIOP connection is allowed to
 be idle before it is closed by the server. This attribute helps
 guard against server deadlock through too many open connections. A
 value of 0 indicates there is no timeout.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="default-iiop-user" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The default IIOP user.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-iiop-password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.NetworkChannelMBean Attribute=getDefaultIIOPPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-app-componentType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebAppComponentMBean
 (Interface=weblogic.management.configuration.WebAppComponentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:componentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="virtual-host" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WebAppComponentMBean Attribute=getVirtualHostsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="index-directory-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the target should automatically generate an
 HTML directory listing if no suitable index file is found.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="servlet-reload-check-secs" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The amount of time (in seconds) that WebLogic Server waits to
 check if a servlet was modified and needs to be reloaded.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="single-threaded-servlet-pool-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>This provides size of the pool used for single threaded mode
 servlets. It</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="weblogic" minOccurs="0" name="auth-realm-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the name of the Realm in the Basic Authentication HTTP
 dialog box, which pops up on the browsers. authRealmName is now set
 in weblogic.xml.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="auth-filter" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the name of the AuthFilter Servlet class, which will be
 called before and after all authentication and authorization checks
 in the Web Application.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="session-url-rewriting-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Enables URL rewriting for session tracking.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="session-monitoring-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether runtime MBeans will be created for session
 monitoring.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="prefer-web-inf-classes" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether classes loaded in the WEB-INF directory will
 be loaded in preference to classes loaded in the application or
 system calssloader.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="componentType">
    <xs:annotation>
      <xs:documentation>Corresponds to ComponentMBean
 (Interface=weblogic.management.configuration.ComponentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="uri" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>A URI that points to the application module, usually on the
 Administration Server.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="webservice-credential-providerType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebserviceCredentialProviderMBean
 (Interface=weblogic.management.configuration.WebserviceCredentialProviderMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:webservice-security-configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="min-threads-constraintType">
    <xs:annotation>
      <xs:documentation>Corresponds to MinThreadsConstraintMBean
 (Interface=weblogic.management.configuration.MinThreadsConstraintMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element default="-1" minOccurs="0" name="count" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Minimum number of concurrent threads executing requests that share this 
 constraint.
 &lt;p&gt;
 A count of 0 or -1 is treated as if the constraint is not present. This
 means that the constraint is ignored for these two values. A count &gt; 0 can
 be dynamically changed to 0 to indicate that constraint enforcement is no
 longer needed.
 &lt;/p&gt;
 (Interface=weblogic.management.configuration.MinThreadsConstraintMBean Attribute=getCount)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="xml-registryType">
    <xs:annotation>
      <xs:documentation>Corresponds to XMLRegistryMBean
 (Interface=weblogic.management.configuration.XMLRegistryMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="weblogic.apache.xerces.jaxp.DocumentBuilderFactoryImpl" minOccurs="0" name="document-builder-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The fully qualified name of the class that implements the
 &lt;/tt&gt;DocumentBuilderFactory&lt;/tt&gt; interface.

 &lt;p&gt;The &lt;tt&gt;javax.xml.parsers.DocumentBuilderFactory&lt;/tt&gt; factory API
 enables applications deployed to WebLogic Server to obtain an XML parser
 that produces DOM object trees from XML documents.

 &lt;p&gt;The built-in WebLogic Server DOM factory implementation class is
 &lt;tt&gt;com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl&lt;/tt&gt;.
 This is the factory class applications deployed to WebLogic Server get
 by default when they request a DOM parser.  You can change this default
 by updating this value.

 &lt;p&gt;Return the class name of the default DocumentBuilderFactory</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="weblogic.apache.xerces.jaxp.SAXParserFactoryImpl" minOccurs="0" name="sax-parser-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The fully qualified name of the class that implements the
 &lt;/tt&gt;SAXParserFactory&lt;/tt&gt; interface.

 &lt;p&gt;The &lt;tt&gt;javax.xml.parsers.SAXParserFactory&lt;/tt&gt; factory API
 enables applications deployed to WebLogic Server to configure and obtain
 a SAX-based XML parser to parse XML documents.

 &lt;p&gt;The built-in WebLogic Server SAX factory implementation class is
 &lt;tt&gt;com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl&lt;/tt&gt;.
 This is the factory class applications deployed to WebLogic Server get
 by default when they request a SAX parser.  You can change this default
 by updating this value.

 &lt;p&gt;Return the class name of the default SAXParserFactory</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="weblogic.xml.jaxp.WebLogicTransformerFactory" minOccurs="0" name="transformer-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The fully qualified name of the class that implements the
 &lt;/tt&gt;TransformerFactory&lt;/tt&gt; interface.

 &lt;p&gt;The &lt;tt&gt;javax.xml.transform.TransformerFactory&lt;/tt&gt; factory API
 enables applications deployed to WebLogic Server to configure and obtain
 a &lt;tt&gt;Transformer&lt;/tt&gt; object used to transform XML data into another
 format.

 &lt;p&gt;The built-in WebLogic Server Transformer factory implementation class is
 &lt;tt&gt;com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryIml&lt;/tt&gt;.
 This is the factory class applications deployed to WebLogic Server get
 by default when they request a Transformer object.  You can change this
 default by updating this value.


 &lt;p&gt;Return the class name of the default TransformerFactory</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="xml-parser-select-registry-entry" nillable="true" type="dom:xml-parser-select-registry-entryType">
            <xs:annotation>
              <xs:documentation>Provides a list of the set of ParserSelect registry entries.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="xml-entity-spec-registry-entry" nillable="true" type="dom:xml-entity-spec-registry-entryType">
            <xs:annotation>
              <xs:documentation>Provides a list of EntitySpec registry entries.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="when-to-cache" nillable="true">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies when WebLogic Server should cache external entities that it
 retrieves from the Web.

 &lt;p&gt;When WebLogic Server resolves an external entity within an XML file
 and retrieves the entity from the Web, you can specify that WebLogic
 Server cache this entity only when the entity is first referenced, when
 WebLogic Server first starts up, or not at all.
 (Interface=weblogic.management.configuration.XMLRegistryMBean Attribute=getWhenToCache)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="cache-on-reference"/>
                <xs:enumeration value="cache-at-initialization"/>
                <xs:enumeration value="cache-never"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="handle-entity-invalidation" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Whether cached DTD/schema is invalidated when parsing error is encountered.
 (Interface=weblogic.management.configuration.XMLRegistryMBean Attribute=isHandleEntityInvalidation)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="xml-parser-select-registry-entryType">
    <xs:annotation>
      <xs:documentation>Corresponds to XMLParserSelectRegistryEntryMBean
 (Interface=weblogic.management.configuration.XMLParserSelectRegistryEntryMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="public-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies the public ID of the XML document type for which this
 XML registry entry is being configured.

 &lt;p&gt;When WebLogic Server starts to parse an XML document that is 
 identified with this public ID, it uses the SAX or DOM parser factory
 implementation class specified by this registry entry, rather than the
 built-in or default, when obtaining a SAX or DOM parser.
 (Interface=weblogic.management.configuration.XMLParserSelectRegistryEntryMBean Attribute=getPublicId)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="system-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies the system ID of the XML document type for which this
 XML registry entry is being configured.

 &lt;p&gt;When WebLogic Server starts to parse an XML document that is
 identified with this system ID, it uses the SAX or DOM parser factory
 implementation class specified by this registry entry, rather than the
 built-in or default, when obtaining a SAX or DOM parser.
 (Interface=weblogic.management.configuration.XMLParserSelectRegistryEntryMBean Attribute=getSystemId)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="root-element-tag" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies the root element of the XML document type for which this
 XML registry entry is being configured.

 &lt;p&gt;When WebLogic Server starts to parse an XML document that is
 identified with this root element, it uses the SAX or DOM parser factory
 implementation class specified by this registry entry, rather than the
 built-in or default, when obtaining a SAX or DOM parser.
 (Interface=weblogic.management.configuration.XMLParserSelectRegistryEntryMBean Attribute=getRootElementTag)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="document-builder-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies the fully qualified name of the class that implements the
 &lt;tt&gt;DocumentBuilderFactory&lt;/tt&gt; API.

 &lt;p&gt;When WebLogic Server begins to parse an XML document identified by
 either the public ID, system ID, or root element specified in this entry,
 and the applications specifies it wants a DOM parser, then WebLogic
 Server uses this implementation class when using the 
 javax.xml.parsers.DocumentBuilderFactory to obtain the DOM parser.
 (Interface=weblogic.management.configuration.XMLParserSelectRegistryEntryMBean Attribute=getDocumentBuilderFactory)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sax-parser-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies the fully qualified name of the class that implements the
 &lt;tt&gt;SAXParserFactory&lt;/tt&gt; API.

 &lt;p&gt;When WebLogic Server begins to parse an XML document identified by
 either the public ID, system ID, or root element specified in this entry,
 and the applications specifies it wants a SAX parser, then WebLogic
 Server uses this implementation class when using the
 javax.xml.parsers.SAXParserFactory to obtain the SAX parser.
 (Interface=weblogic.management.configuration.XMLParserSelectRegistryEntryMBean Attribute=getSAXParserFactory)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transformer-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies the fully qualified name of the class that implements the
 &lt;tt&gt;TransformerFactory&lt;/tt&gt; API.

 &lt;p&gt;When WebLogic Server begins to transform an XML document identified by
 either the public ID, system ID, or root element specified in this entry,
 then WebLogic Server uses this implementation class when using the
 javax.xml.transform.TranformerFactory factory to obtain a Transformer
 object.
 (Interface=weblogic.management.configuration.XMLParserSelectRegistryEntryMBean Attribute=getTransformerFactory)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="parser-class-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the class name of any custom XML parser that is
 associated with this parser select entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="xml-entity-spec-registry-entryType">
    <xs:annotation>
      <xs:documentation>Corresponds to XMLEntitySpecRegistryEntryMBean
 (Interface=weblogic.management.configuration.XMLEntitySpecRegistryEntryMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="public-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;The public ID of the external entity.

 &lt;p&gt;When WebLogic Server is parsing an XML document and it encounters
 an external entity with this public ID, WebLogic Server
 resolves the entity (to either a local file or a URL resource) according
 to the values set for this Entity spec entry.
 (Interface=weblogic.management.configuration.XMLEntitySpecRegistryEntryMBean Attribute=getPublicId)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="system-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;The system ID of the external entity.

 &lt;p&gt;When WebLogic Server is parsing an XML document and it encounters
 an external entity with this system ID, WebLogic Server
 resolves the entity (to either a local file or a URL resource) according
 to the values set for this Entity spec entry.
 (Interface=weblogic.management.configuration.XMLEntitySpecRegistryEntryMBean Attribute=getSystemId)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="entity-uri" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The location of the external entity, either a pathname or URI.

 &lt;p&gt;The location of the external entity can be either a
 pathname relative to the XML Registry directories, reachable by the
 Administration Server, or a URI of the entity location in some local
 repository.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="when-to-cache" nillable="true">
            <xs:annotation>
              <xs:documentation>Specifies when WebLogic Server should cache the external entities
 it retrieves from the Web.

 &lt;p&gt;WebLogic Server can cache the entities when they are referenced, as
 soon as possible (that is, on initialization) or never. Additionally,
 WebLogic Server can defer to the XML registry's cache setting.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="cache-on-reference"/>
                <xs:enumeration value="cache-at-initialization"/>
                <xs:enumeration value="cache-never"/>
                <xs:enumeration value="defer-to-registry-setting"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="cache-timeout-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies the default timeout interval (in seconds) of the external
 entity cache.

 &lt;p&gt;A value of &lt;tt&gt;-1&lt;/tt&gt; means that the entity cache
 timeout interval defers to the one specified for the XML
 registry of which this Entity Spec entry is a part.
 (Interface=weblogic.management.configuration.XMLEntitySpecRegistryEntryMBean Attribute=getCacheTimeoutInterval)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="handle-entity-invalidation" nillable="true">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Whether cached DTD/schema is invalidated when parsing error is encountered.
 (Interface=weblogic.management.configuration.XMLEntitySpecRegistryEntryMBean Attribute=getHandleEntityInvalidation)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="true"/>
                <xs:enumeration value="false"/>
                <xs:enumeration value="defer-to-registry-setting"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSStoreMBean
 (Interface=weblogic.management.configuration.JMSStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="coherence-cluster-system-resourceType">
    <xs:annotation>
      <xs:documentation>Corresponds to CoherenceClusterSystemResourceMBean
 (Interface=weblogic.management.configuration.CoherenceClusterSystemResourceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:system-resourceType">
        <xs:sequence>
          <xs:element minOccurs="0" name="custom-cluster-configuration-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation> The external custom Coherence cluster configuration file. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="using-custom-cluster-configuration-file" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> Specifies whether you are using a custom external Coherence cluster configuration file. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="file-realmType">
    <xs:annotation>
      <xs:documentation>Corresponds to FileRealmMBean
 (Interface=weblogic.management.configuration.FileRealmMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="1000" minOccurs="0" name="max-users" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of users supported by the File realm.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="10000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1000" minOccurs="0" name="max-groups" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of groups supported by the File realm.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="10000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1000" minOccurs="0" name="max-ac-ls" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of positive access control lists (ACLs)
 supported by the File realm. A warning is issued when this number
 is reached.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="10000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="fair-share-request-classType">
    <xs:annotation>
      <xs:documentation>Corresponds to FairShareRequestClassMBean
 (Interface=weblogic.management.configuration.FairShareRequestClassMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element default="50" minOccurs="0" name="fair-share" nillable="false">
            <xs:annotation>
              <xs:documentation>Fair share value
 (Interface=weblogic.management.configuration.FairShareRequestClassMBean Attribute=getFairShare)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="1000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="work-managerType">
    <xs:annotation>
      <xs:documentation>Corresponds to WorkManagerMBean
 (Interface=weblogic.management.configuration.WorkManagerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="fair-share-request-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WorkManagerMBean Attribute=getFairShareRequestClassAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="response-time-request-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WorkManagerMBean Attribute=getResponseTimeRequestClassAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="context-request-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WorkManagerMBean Attribute=getContextRequestClassAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="min-threads-constraint" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WorkManagerMBean Attribute=getMinThreadsConstraintAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="max-threads-constraint" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WorkManagerMBean Attribute=getMaxThreadsConstraintAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="capacity" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WorkManagerMBean Attribute=getCapacityAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ignore-stuck-threads" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this Work Manager ignores "stuck"
 threads. Typically, stuck threads will cause the associated
 Work Manager to take some action: either switching the application
 to Admin mode, shutting down the server, or shutting down the Work
 Manager. If this flag is set, then no thread in this Work Manager    
 is ever considered stuck. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="work-manager-shutdown-trigger" nillable="true" type="dom:work-manager-shutdown-triggerType">
            <xs:annotation>
              <xs:documentation>Configure a shutdown trigger for this WorkManager. Specifies the
 condition to be used to shutdown the WorkManager. The Server health
 monitoring periodically checks to see if the conidtion is met and
 shuts down the work manager if needed.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="work-manager-shutdown-triggerType">
    <xs:annotation>
      <xs:documentation>Corresponds to WorkManagerShutdownTriggerMBean
 (Interface=weblogic.management.configuration.WorkManagerShutdownTriggerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="max-stuck-thread-time" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Time after which a executing thread is declared as stuck.
 (Interface=weblogic.management.configuration.WorkManagerShutdownTriggerMBean Attribute=getMaxStuckThreadTime)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="stuck-thread-count" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Number of stuck threads after which the WorkManager is shutdown
 (Interface=weblogic.management.configuration.WorkManagerShutdownTriggerMBean Attribute=getStuckThreadCount)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wtc-importType">
    <xs:annotation>
      <xs:documentation>Corresponds to WTCImportMBean
 (Interface=weblogic.management.configuration.WTCImportMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="myImport" minOccurs="0" name="resource-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name used to identify this imported service.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myLAP" minOccurs="0" name="local-access-point" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the local access point that offers this service.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myRAP" minOccurs="0" name="remote-access-point-list" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The comma-separated failover list that identifies the remote
 domain access points through which resources are imported.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="remote-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The remote name of this service.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="domainType">
    <xs:annotation>
      <xs:documentation>Corresponds to DomainMBean
 (Interface=weblogic.management.configuration.DomainMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="domain-version" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Defines the common version of all servers in a domain. 
 In a domain containing servers that are not all at the same
 release version, this attribute is used to determine the 
 feature level that servers will assume.

 The value must be less than or equal to the version of any
 managed server in the domain. 

 If this value is not equal to the version of the release
 version of the admin server, then the admin server will
 not be allowed to make modifications to the configuration.
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getDomainVersion)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="last-modification-time" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>Return the last time this domain was updated. This is guaranteed
 to be unique for a given transactional modification.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="active" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Is this domain active?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="security-configuration" nillable="true" type="dom:security-configurationType">
            <xs:annotation>
              <xs:documentation>Return the (new) security configuration for this domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="security" nillable="true" type="dom:securityType">
            <xs:annotation>
              <xs:documentation>Return the (old) security configuration for this domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jta" nillable="true" type="dom:jtaType">
            <xs:annotation>
              <xs:documentation>Return the JTA configuration for this Domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jpa" nillable="true" type="dom:jpaType">
            <xs:annotation>
              <xs:documentation>Return the JPA configuration for this Domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="deployment-configuration" nillable="true" type="dom:deployment-configurationType">
            <xs:annotation>
              <xs:documentation>Return the deployment configuration for this Domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wtc-server" nillable="true" type="dom:wtc-serverType">
            <xs:annotation>
              <xs:documentation>Return the WTCServerMBeans for this Domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="log" nillable="true" type="dom:logType">
            <xs:annotation>
              <xs:documentation>Return the domain logfile configuration for this domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="snmp-agent" nillable="true" type="dom:snmp-agentType">
            <xs:annotation>
              <xs:documentation>Return the SNMPAgentMBean for this domain. This is a singleton
 MBean describing SNMP Agent configuration details. This MBean has
 getters and setters for other SNMP related configuration
 MBeans.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="snmp-agent-deployment" nillable="true" type="dom:snmp-agent-deploymentType">
            <xs:annotation>
              <xs:documentation>The SNMPAgentDeployments defined in the domain.
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getSNMPAgentDeployments)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="root-directory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Return the root directory for the domain. In other words for a
 server process [ServerMBean.getRootDirectory] or
 [ServerMBean.getDomainDirectory]</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="console-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Administration Server automatically
 deploys the Administration Console in the current domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="console" minOccurs="0" name="console-context-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The context path that you want to use in URLs that specify the
 Administration Console. (Requires you to enable the Administration
 Console for the current domain.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="console-ext" minOccurs="0" name="console-extension-directory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Returns the directory path that console extensions
    are loaded from.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="server" nillable="true" type="dom:serverType">
            <xs:annotation>
              <xs:documentation>Returns the ServerMBeans representing the servers that have been
 configured to be part of this domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="cluster" nillable="true" type="dom:clusterType">
            <xs:annotation>
              <xs:documentation>Returns the ClusterMBeans representing the cluster that have
 been configured to be part of this domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="file-t3" nillable="true" type="dom:file-t3Type">
            <xs:annotation>
              <xs:documentation>Returns the FileT3MBeans representing the FileT3s that have been
 configured to be part of this domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="messaging-bridge" nillable="true" type="dom:messaging-bridgeType">
            <xs:annotation>
              <xs:documentation>Returns the MessagingBridgeMBean representing the messaging
 bridges that have been configured to be part of this domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="production-mode-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether all servers in this domain run in production mode.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="embedded-ldap" nillable="true" type="dom:embedded-ldapType">
            <xs:annotation>
              <xs:documentation>Returns the embedded LDAP configuration for this domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="administration-port-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the domain-wide administration port should be
 enabled for this WebLogic Server domain. Because the administration
 port uses SSL, enabling the administration port requires that SSL
 must be configured for all servers in the domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="9002" minOccurs="0" name="administration-port" nillable="false">
            <xs:annotation>
              <xs:documentation>The common secure administration port for this WebLogic Server
 domain. (Requires you to enable the administration port.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="archive-configuration-count" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The number of archival versions of &lt;tt&gt;config.xml&lt;/tt&gt; saved by
 the Administration Server each time the domain configuration is
 modified.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="config-backup-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>If true, then backups of the configuration will be made
 during server boot.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="configuration-version" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The release identifier for the configuration. This identifier
 will be used to indicate the version of the configuration. All
 server generated configurations will be established with the
 release identifier of the running server. The form of the version
 is major.minor.servicepack.rollingpatch. Not all parts of the
 version are required. i.e. "7" is acceptable.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="administration-m-bean-auditing-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Administration Server generates a log
 message when this WebLogic Server domain's configuration has been
 modified.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="configuration-audit-type" nillable="true">
            <xs:annotation>
              <xs:documentation>Returns the criteria used for auditing configuration events  (configuration changes and other operations):
 &lt;ul&gt;
 &lt;li&gt;&lt;code&gt;CONFIG_CHANGE_NONE&lt;/code&gt; Configuration events will neither be
 written to the server log or directed to the Security Audit Framework.
 &lt;li&gt;&lt;code&gt;CONFIG_CHANGE_LOG&lt;/code&gt; Configuration events will be
 written to the server log.
 &lt;li&gt;&lt;code&gt;CONFIG_CHANGE_AUDIT&lt;/code&gt;Configuration events will be
 directed to the Security Audit Framework.
 &lt;li&gt;&lt;code&gt;CONFIG_CHANGE_LOG_AND_AUDIT&lt;/code&gt; Configuration events will be
 written to the server log and directed to the Security Audit Framework.
 &lt;/ul&gt;
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getConfigurationAuditType)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="none"/>
                <xs:enumeration value="log"/>
                <xs:enumeration value="audit"/>
                <xs:enumeration value="logaudit"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="cluster-constraints-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies that deployments targeted to a cluster succeed only if
 all servers in the cluster are running.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="app-deployment" nillable="true" type="dom:app-deploymentType">
            <xs:annotation>
              <xs:documentation>The collection of deployable entities in this domain.
 This replaces the Application in previous versions. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="library" nillable="true" type="dom:libraryType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getLibraries)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="domain-library" nillable="true" type="dom:domain-libraryType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getDomainLibraries)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ws-reliable-delivery-policy" nillable="true" type="dom:ws-reliable-delivery-policyType">
            <xs:annotation>
              <xs:documentation>Define wSReliableDeliveryPolicies for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jdbc-data-source-factory" nillable="true" type="dom:jdbc-data-source-factoryType">
            <xs:annotation>
              <xs:documentation>Define JDBCDataSourceFactories for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="machine" nillable="true" type="dom:machineType">
            <xs:annotation>
              <xs:documentation>Define machines for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="xml-entity-cache" nillable="true" type="dom:xml-entity-cacheType">
            <xs:annotation>
              <xs:documentation>Returns all the XMLEntityCache objects defined 
 in this domain
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getXMLEntityCaches)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="xml-registry" nillable="true" type="dom:xml-registryType">
            <xs:annotation>
              <xs:documentation>Define xMLRegistries for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="file-realm" nillable="true" type="dom:file-realmType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getFileRealms)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="caching-realm" nillable="true" type="dom:caching-realmType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getCachingRealms)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="realm" nillable="true" type="dom:old-realmType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getRealms)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="password-policy" nillable="true" type="dom:password-policyType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getPasswordPolicies)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="custom-realm" nillable="true" type="dom:custom-realmType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getCustomRealms)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ldap-realm" nillable="true" type="dom:ldap-realmType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getLDAPRealms)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="nt-realm" nillable="true" type="dom:nt-realmType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getNTRealms)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="rdbms-realm" nillable="true" type="dom:rdbms-realmType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getRDBMSRealms)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="unix-realm" nillable="true" type="dom:unix-realmType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getUnixRealms)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jms-server" nillable="true" type="dom:jms-serverType">
            <xs:annotation>
              <xs:documentation>Define JMSServers for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="virtual-host" nillable="true" type="dom:virtual-hostType">
            <xs:annotation>
              <xs:documentation>Define VirtualHosts for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="migratable-target" nillable="true" type="dom:migratable-targetType">
            <xs:annotation>
              <xs:documentation>Returns an array of the contained MigratableTarget MBeans</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ejb-container" nillable="true" type="dom:ejb-containerType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getEJBContainer)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="web-app-container" nillable="true" type="dom:web-app-containerType">
            <xs:annotation>
              <xs:documentation>Collection of global properties to be applied on all
 webapps in this domain.
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getWebAppContainer)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jmx" nillable="true" type="dom:jmxType">
            <xs:annotation>
              <xs:documentation>The configuration of the JMX Subsystem.
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getJMX)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="self-tuning" nillable="true" type="dom:self-tuningType">
            <xs:annotation>
              <xs:documentation>Get the WorkManager configuration pieces for this domain
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getSelfTuning)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="path-service" nillable="true" type="dom:path-serviceType">
            <xs:annotation>
              <xs:documentation>Define PathService for this Domain
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getPathServices)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jms-bridge-destination" nillable="true" type="dom:jms-bridge-destinationType">
            <xs:annotation>
              <xs:documentation>Return the JMSBridgeDestinations for this Domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="bridge-destination" nillable="true" type="dom:bridge-destinationType">
            <xs:annotation>
              <xs:documentation>Return the BridgeDestinations for this Domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="shutdown-class" nillable="true" type="dom:shutdown-classType">
            <xs:annotation>
              <xs:documentation>Retrieve ShutdownClasses for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="startup-class" nillable="true" type="dom:startup-classType">
            <xs:annotation>
              <xs:documentation>Retrieve StartupClasses for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="singleton-service" nillable="true" type="dom:singleton-serviceType">
            <xs:annotation>
              <xs:documentation>Retrieve SingletonServicees for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="mail-session" nillable="true" type="dom:mail-sessionType">
            <xs:annotation>
              <xs:documentation>Retrieve MailSessions for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jolt-connection-pool" nillable="true" type="dom:jolt-connection-poolType">
            <xs:annotation>
              <xs:documentation>Return the JoltConnectionPools for this Domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="log-filter" nillable="true" type="dom:log-filterType">
            <xs:annotation>
              <xs:documentation>Gets the array of log filters defined in the domain
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getLogFilters)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="file-store" nillable="true" type="dom:file-storeType">
            <xs:annotation>
              <xs:documentation>Return file stores defined in this domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jdbc-store" nillable="true" type="dom:jdbc-storeType">
            <xs:annotation>
              <xs:documentation>Return file stores defined in this domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jms-interop-module" nillable="true" type="dom:jms-interop-moduleType">
            <xs:annotation>
              <xs:documentation>Returns the JMS Interop Module that have been defined for this domain.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jms-system-resource" nillable="true" type="dom:jms-system-resourceType">
            <xs:annotation>
              <xs:documentation>Returns the JMSSystemResourceMBeans that have been defined for this domain.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="custom-resource" nillable="true" type="dom:custom-resourceType">
            <xs:annotation>
              <xs:documentation>Returns the JMSSystemResourceMBeans that have been defined for this domain.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="foreign-jndi-provider" nillable="true" type="dom:foreign-jndi-providerType">
            <xs:annotation>
              <xs:documentation>Get all the defined Foreign JNDI Providers
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getForeignJNDIProviders)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="admin-server-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getAdminServerName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="administration-protocol" nillable="true">
            <xs:annotation>
              <xs:documentation>The default protocol for communicating through the
 administration port or administration channels. (Requires you to
 enable the administration port or to create an administration
 channel.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="t3s"/>
                <xs:enumeration value="https"/>
                <xs:enumeration value="iiops"/>
                <xs:enumeration value="t3"/>
                <xs:enumeration value="http"/>
                <xs:enumeration value="iiop"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wldf-system-resource" nillable="true" type="dom:wldf-system-resourceType">
            <xs:annotation>
              <xs:documentation>Returns the WLDFSystemResourceMBeans that have been defined for this domain.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jdbc-system-resource" nillable="true" type="dom:jdbc-system-resourceType">
            <xs:annotation>
              <xs:documentation>Returns the JDBCSystemResourceMBeans that have been defined for this domain
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="saf-agent" nillable="true" type="dom:saf-agentType">
            <xs:annotation>
              <xs:documentation>Get SAFAgentMBean for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wlec-connection-pool" nillable="true" type="dom:wlec-connection-poolType">
            <xs:annotation>
              <xs:documentation>Get WLECConnectionPools for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="error-handling" nillable="true" type="dom:error-handlingType">
            <xs:annotation>
              <xs:documentation>Get ErrorHandlingMBean for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="remote-saf-context" nillable="true" type="dom:remote-saf-contextType">
            <xs:annotation>
              <xs:documentation>Get RemoteSAFContextMBean for this Domain</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="migratable-rmi-service" nillable="true" type="dom:migratable-rmi-serviceType">
            <xs:annotation>
              <xs:documentation>Returns an array of the contained MigratableRMIService MBeans</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="webservice-security" nillable="true" type="dom:webservice-securityType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getWebserviceSecurities)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jms-connection-consumer" nillable="true" type="dom:jms-connection-consumerType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.DomainMBean Attribute=getJMSConnectionConsumers)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="auto-deploy-for-submodules-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether autodeployed applications could include JMS modules. If true then any submodules
 defined in the application's JMS modules will be deployed with default targets. The submodules
 define the different destinations in the JMS module, eg topics and queues, and if they aren't provided with
 explicit targets they may not be properly deployed.
 (Interface=weblogic.management.configuration.DomainMBean Attribute=isAutoDeployForSubmodulesEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="admin-console" nillable="true" type="dom:admin-consoleType">
            <xs:annotation>
              <xs:documentation>get AdminConsoleMBean object, a console specific MBean to configure weblogic
  administration console attributes.
 (Interface=weblogic.management.configuration.DomainMBean Attribute=getAdminConsole)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="internal-apps-deploy-on-demand-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether internal applications such as the console,
 uddi, wlstestclient, and uddiexplorer are deployed on demand (first access) instead of
 during server startup. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="guardian-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Guardian Agent is deployed when starting
 servers in the current domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="ocm-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether OCM functionality should be enabled for this domain.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="msg-id-prefix-compatibility-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Configures whether log messages will be logged with the BEA legacy message ID prefix.
 (Interface=weblogic.management.configuration.DomainMBean Attribute=isMsgIdPrefixCompatibilityEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="coherence-cluster-system-resource" nillable="true" type="dom:coherence-cluster-system-resourceType">
            <xs:annotation>
              <xs:documentation>The CoherenceClusterSystemResourceMBeans that have been defined  
 for this domain. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="security-configurationType">
    <xs:annotation>
      <xs:documentation>Corresponds to SecurityConfigurationMBean
 (Interface=weblogic.management.configuration.SecurityConfigurationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element xmlns:sec="http://xmlns.oracle.com/weblogic/security" maxOccurs="unbounded" minOccurs="0" name="realm" nillable="true" type="sec:realmType">
            <xs:annotation>
              <xs:documentation>Returns all the realms in the domain.
 (Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=getRealms)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-realm" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=getDefaultRealmAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="anonymous-admin-lookup-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Returns true if anonymous JNDI access for Admin MBean home is
 permitted. This is overridden by the Java property
 &lt;code&gt;-Dweblogic.management.anonymousAdminLookupEnabled&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="clear-text-credential-access-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Returns true if allow access to credential in clear text.
 This can be overridden by the system property
 &lt;code&gt;-Dweblogic.management.clearTextCredentialAccessEnabled&lt;/code&gt;</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="credential-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=getCredentialEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="web-app-files-case-insensitive" nillable="true">
            <xs:annotation>
              <xs:documentation>This property defines the case sensitive URL-pattern matching
 behavior for security constraints, servlets, filters, virtual-hosts,
 etc. in the WebApp container and external security policies.

 When the value is set to "os", the pattern matching will be case-
 sensitive on all platforms except the Windows file system.

 Note that on non-Windows file systems, WebLogic doesn't enforce
 case sensitivity and relies on the file system for optimization.
 Therefore, if you have a Windows Samba mount from UNIX or Mac OS
 that has been installed in case-insensitive mode, there is a chance
 of security risk. In that case, please specify
 case-insensitive lookups by setting this attribute to
 &lt;code&gt;true&lt;/code&gt;.

 Note that this property is used to preserve backward compatibility on
 Windows file systems. In prior releases, WebLogic was case-
 insensitive on Windows. Starting with 9.0 release the URL-pattern
 matching will be strictly enforced.

 During the upgrade of older domains the value of this parameter
 is explicitly set to "os" by the upgrade plug-in, in order to
 preserve backward compatibility. </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="os"/>
                <xs:enumeration value="true"/>
                <xs:enumeration value="false"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="realm-boot-strap-version" nillable="true">
            <xs:annotation>
              <xs:documentation>Indicates which version of the default security realm MBeans
 should be loaded if none exist. The value is set to current version
 on initial read if it has not already been set.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="unknown"/>
                <xs:enumeration value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="connection-filter" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the Java class that implements a connection filter
 (that is, the &lt;tt&gt;weblogic.security.net.ConnectionFilter&lt;/tt&gt;
 interface). If no class name is specified, no connection filter
 will be used.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="connection-filter-rule" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;The rules used by any connection filter that implements the
 &lt;tt&gt;ConnectionFilterRulesListener&lt;/tt&gt; interface. When using the
 default implementation and when no rules are specified, all
 connections are accepted. The default implementation rules are in
 the format: &lt;tt&gt;target localAddress localPort action
 protocols&lt;/tt&gt;.

 &lt;p&gt; This attribute replaces the deprecated ConnectionFilterRules
 attribute on the SecurityMBean.
 (Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=getConnectionFilterRules)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="connection-logger-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this WebLogic Server domain should log
 accepted connections.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="compatibility-connection-filters-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this WebLogic Server domain
 enables compatiblity with previous connection filters.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="node-manager-username" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The user name that the Administration Server uses to communicate
 with Node Manager when starting,
 stopping, or restarting Managed Servers. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="node-manager-password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=getNodeManagerPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="principal-equals-case-insensitive" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the WebLogic Server principal name is compared using a
 case insensitive match when the equals
 method for the principal object is performed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="principal-equals-compare-dn-and-guid" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the GUID and DN data in a WebLogic Server principal
 object are used when the equals method of that object is invoked. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="downgrade-untrusted-principals" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not to downgrade to anonymous principals that cannot
 be verified. This is useful for server-server communication
 between untrusted domains.
 (Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=getDowngradeUntrustedPrincipals)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="enforce-strict-url-pattern" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not the system should enforce strict URL pattern or not.
 (Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=getEnforceStrictURLPattern)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="enforce-valid-basic-auth-credentials" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not the system should allow requests with invalid Basic
 Authentication credentials to access unsecure resources.
 (Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=getEnforceValidBasicAuthCredentials)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="console-full-delegation-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the console is enabled for fully delegate authorization.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-realm-internal" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=getDefaultRealmInternalAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="excluded-domain-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>&lt;p&gt; Specifies a list of remote domains for which cross-domain check
 should not be applied.
 (Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=getExcludedDomainNames)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="cross-domain-security-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt; Indicates whether or not cross-domain security is enabled
 (Interface=weblogic.management.configuration.SecurityConfigurationMBean Attribute=isCrossDomainSecurityEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jtaType">
    <xs:annotation>
      <xs:documentation>Corresponds to JTAMBean
 (Interface=weblogic.management.configuration.JTAMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="30" minOccurs="0" name="timeout-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the maximum amount of time, in seconds, an active transaction is 
 allowed to be in the first phase of a two-phase commit transaction. If the specified 
 amount of time expires, the transaction is automatically rolled back.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="86400" minOccurs="0" name="abandon-timeout-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the maximum amount of time, in seconds, a 
 transaction manager persists in attempting to complete  
 the second phase of a two-phase commit transaction. </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="completion-timeout-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the maximum amount of time, in seconds, a transaction manager waits
 for all resource managers to respond and indicate if the transaction can be committed or rolled back  
 during the second phase of a two-phase commit transaction.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="forget-heuristics" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the transaction manager automatically
 performs an XA Resource &lt;code&gt;forget&lt;/code&gt; operation for heuristic
 transaction completions.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="before-completion-iteration-limit" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of cycles that the transaction manager 
 performs the &lt;tt&gt;beforeCompletion&lt;/tt&gt; synchronization callback for
 this WebLogic Server domain.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10000" minOccurs="0" name="max-transactions" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of simultaneous in-progress transactions
 allowed on a server in this WebLogic Server domain.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1000" minOccurs="0" name="max-unique-name-statistics" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of unique transaction names for which
 statistics are maintained.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="50" minOccurs="0" name="max-resource-requests-on-server" nillable="false">
            <xs:annotation>
              <xs:documentation>Maximum number of concurrent requests to resources allowed for
 each server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="10"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="120000" minOccurs="0" name="max-xa-call-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>Maximum allowed time duration, in milliseconds,  for XA calls to resources. If a
 particular XA call to a resource exceeds the limit, the resource is
 declared unavailable.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1800000" minOccurs="0" name="max-resource-unavailable-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>Maximum duration time, in milliseconds, that a resource is declared
 dead. After the duration, the resource is declared available
 again, even if the resource provider does not explicitly
 re-register the resource.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="300000" minOccurs="0" name="recovery-threshold-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>The interval that recovery is attempted until the resource
 becomes available.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="60000"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="migration-checkpoint-interval-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The time interval, in seconds,  that the checkpoint is done for the migrated
 transaction logs (TLOGs).</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60000" minOccurs="0" name="max-transactions-health-interval-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>The interval for which the transaction map must be full for the
 JTA subsystem to declare its health as CRITICAL.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="1000"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="86400" minOccurs="0" name="purge-resource-from-checkpoint-interval-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The interval that a particular resource must be accessed within
 for it to be included in the checkpoint record.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="300" minOccurs="0" name="checkpoint-interval-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The interval at which the transaction manager creates a new
 transaction log file and checks all old transaction log files to
 see if they are ready to be deleted.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="10"/>
                <xs:maxInclusive value="1800"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="30000" minOccurs="0" name="serialize-enlistments-gc-interval-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>The time interval, in milliseconds, at which internal objects used to serialize
 resource enlistment are cleaned up.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="parallel-xa-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Execute XA calls in parallel if there are available threads.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="parallel-xa-dispatch-policy" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The dispatch policy to use when performing XA operations in
 parallel. By default the policy of the thread coordinating the
 transaction is used. Note that the named execute queue must be
 configured on the target server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="unregister-resource-grace-period" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time, in seconds, a  transaction manager waits
 for transactions involving the resource to complete
 before unregistering a resource. This grace period helps minimize 
 the risk of abandoned transactions because of an unregistered resource, such as a 
 JDBC data source module packaged with an application.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="security-interop-mode" nillable="true">
            <xs:annotation>
              <xs:documentation>Specifies the security mode of the communication channel used 
 for XA calls between servers that participate in a global transaction.
 All server instances in a domain must have the same security mode setting.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="default"/>
                <xs:enumeration value="performance"/>
                <xs:enumeration value="compatibility"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="wsat-transport-security-mode" nillable="true">
            <xs:annotation>
              <xs:documentation> Specifies transport security mode required by WebService Transaction endpoints.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="SSLNotRequired"/>
                <xs:enumeration value="SSLRequired"/>
                <xs:enumeration value="ClientCertRequired"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="wsat-issued-token-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether to use &lt;code&gt;issuedtoken&lt;/code&gt; to enable authentication between the WS-AT
 coordinator and participant.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="deployment-configurationType">
    <xs:annotation>
      <xs:documentation>Corresponds to DeploymentConfigurationMBean
 (Interface=weblogic.management.configuration.DeploymentConfigurationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="2" minOccurs="0" name="max-app-versions" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the maximum number of application versions for each 
 application.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="remote-deployer-ejb-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Remote Deployer EJB is automatically
 deployed in the current domain. The Remote Deployer EJB is only used by
 the weblogic.Deployer tool in the WLS 9.0 and 9.1 releases when the -remote 
 option is specified.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="restage-only-on-redeploy" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether applications with staging mode of STAGE are restaged only 
 during redeploy operation. If set to true, then applications will never
 restage during server startup and will only be restaged on an explicit redeploy
 operation.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wtc-serverType">
    <xs:annotation>
      <xs:documentation>Corresponds to WTCServerMBean
 (Interface=weblogic.management.configuration.WTCServerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wtc-local-tux-dom" nillable="true" type="dom:wtc-local-tux-domType">
            <xs:annotation>
              <xs:documentation>The local Tuxedo domains defined for this WTC Server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wtc-remote-tux-dom" nillable="true" type="dom:wtc-remote-tux-domType">
            <xs:annotation>
              <xs:documentation>The remote Tuxedo domains defined for this WTC Server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wtc-export" nillable="true" type="dom:wtc-exportType">
            <xs:annotation>
              <xs:documentation>Provides information on services exported by a local Tuxedo
 access point. Defines your Exported Services when configured using
 the Administration Console.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wtc-import" nillable="true" type="dom:wtc-importType">
            <xs:annotation>
              <xs:documentation>Provides information on services imported and available on
 remote domains. Defines your Imported Services when configured
 using the Administration Console.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wtc-password" nillable="true" type="dom:wtc-passwordType">
            <xs:annotation>
              <xs:documentation>Specifies the configuration information for inter-domain
 authentication. Defines your Passwords when configured using the
 Administration Console.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="wtc-resources" nillable="true" type="dom:wtc-resourcesType">
            <xs:annotation>
              <xs:documentation>Specifies global field table classes, view table classes, and
 application passwords for domains. Defines your Resources when
 configured using the Administration Console.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="wtc-tbridge-global" nillable="true" type="dom:wtc-tbridge-globalType">
            <xs:annotation>
              <xs:documentation>Specifies global configuration information for the transfer of
 messages between WebLogic Server and Tuxedo. Defines your Tuxedo
 Queuing Bridge when configured using the Administration
 Console.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="wtc-tbridge-redirect" nillable="true" type="dom:wtc-tbridge-redirectType">
            <xs:annotation>
              <xs:documentation>gets all WTCtBridgeRedirect objects
 (Interface=weblogic.management.configuration.WTCServerMBean Attribute=getWTCtBridgeRedirects)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wtc-resourcesType">
    <xs:annotation>
      <xs:documentation>Corresponds to WTCResourcesMBean
 (Interface=weblogic.management.configuration.WTCResourcesMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="fld-tbl16-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The names of &lt;tt&gt;FldTbl16Classes&lt;/tt&gt; that are loaded via a
 class loader and added to a &lt;tt&gt;FldTbl&lt;/tt&gt; array.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="fld-tbl32-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The names of &lt;tt&gt;FldTbl32Classes&lt;/tt&gt; that are loaded via a
 class loader and added to a &lt;tt&gt;FldTbl&lt;/tt&gt; array.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="view-tbl16-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The names of &lt;tt&gt;ViewTbl16Classes&lt;/tt&gt; that are loaded via a
 class loader and added to a &lt;tt&gt;ViewTbl&lt;/tt&gt; array.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="view-tbl32-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The names of &lt;tt&gt;ViewTbl32Classes&lt;/tt&gt; that are loaded via a
 class loader and added to a &lt;tt&gt;ViewTbl&lt;/tt&gt; array.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="app-password" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The application password as returned from the
 &lt;code&gt;genpasswd&lt;/code&gt; utility.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="app-password-iv" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The initialization vector used to encrypt the
 &lt;tt&gt;AppPassword&lt;/tt&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="tp-usr-file" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The full path to the &lt;tt&gt;TPUSR&lt;/tt&gt; file, which contains Tuxedo
 UID/GID information.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="remote-mb-encoding" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The default encoding name of sending MBSTRING data.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="mb-encoding-map-file" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The encoding name map file between Java and Tuxedo MBSTRING.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wtc-tbridge-redirectType">
    <xs:annotation>
      <xs:documentation>Corresponds to WTCtBridgeRedirectMBean
 (Interface=weblogic.management.configuration.WTCtBridgeRedirectMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="direction" nillable="false">
            <xs:annotation>
              <xs:documentation>The direction of data flow. At least one redirection must be
 specified or the Tuxedo queuing bridge will fail to start and an
 error will be logged.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="JmsQ2TuxQ"/>
                <xs:enumeration value="TuxQ2JmsQ"/>
                <xs:enumeration value="JmsQ2TuxS"/>
                <xs:enumeration value="JmsQ2JmsQ"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="translate-fml" nillable="true">
            <xs:annotation>
              <xs:documentation>The type of XML/FML translation.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="NO"/>
                <xs:enumeration value="FLAT"/>
                <xs:enumeration value="WLXT"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="meta-data-file" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the metadata file URL used to pass the call to the
 XML-to-non-XML WebLogic XML Translator (WLXT).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="replyq" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the JMS queue used specifically for synchronous
 calls to a Tuxedo service. The response is returned to the JMS
 ReplyQ.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="source-access-point" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the local or remote access point where the source is
 located.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="source-qspace" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the Qspace for a source location.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="mySource" minOccurs="0" name="source-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of a source queue or service. Specifies a JMS queue
 name, a Tuxedo queue name, or the name of a Tuxedo service.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="target-access-point" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the local or remote access point where the target is
 located.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="target-qspace" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the Qspace for a target location.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="myTarget" minOccurs="0" name="target-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the target queue or service. Specifies a JMS queue
 name, a Tuxedo queue name, or the name of a Tuxedo service.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-agentType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPAgentMBean
 (Interface=weblogic.management.configuration.SNMPAgentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="false" minOccurs="0" name="enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this SNMP agent is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="send-automatic-traps-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this SNMP agent sends automatically
 generated notifications to SNMP managers.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="161" minOccurs="0" name="snmp-port" nillable="false">
            <xs:annotation>
              <xs:documentation>The port on which you want this SNMP agent to
 listen for incoming requests from SNMP managers that use
 the UDP protocol.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="snmp-trap-version" nillable="false">
            <xs:annotation>
              <xs:documentation>The SNMP notification version that this SNMP agent generates.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:enumeration value="1"/>
                <xs:enumeration value="2"/>
                <xs:enumeration value="3"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="120" minOccurs="0" name="mib-data-refresh-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The minimum number of seconds that this SNMP agent
 caches OIDs before checking if new ones have been added to the
 Management Information Base (MIB).</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="30"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="server-status-check-interval-factor" nillable="false">
            <xs:annotation>
              <xs:documentation>The multiplier used to calculate the interval at which this
 SNMP agent checks for newly started or shut down server instances.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="public" minOccurs="0" name="community-prefix" nillable="true">
            <xs:annotation>
              <xs:documentation>The password (community name) that you want this SNMP
 agent to use to secure SNMPv1 or v2 communication with SNMP managers.
 Requires you to enable community based access for this agent.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="na" minOccurs="0" name="user-defined-mib" nillable="true">
            <xs:annotation>
              <xs:documentation>The absolute path of a user-defined intelligent MIB file. The
 MIB file will be loaded by interpreted SNMP Agent, and response to
 the SNMP request according to the AGENT-CLAUSE. This attribute will
 not be supported in this SS release due to licensing issues.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="debug-level" nillable="false">
            <xs:annotation>
              <xs:documentation>The minimum severity of debug messages that this SNMP agent
 generates.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:enumeration value="0"/>
                <xs:enumeration value="1"/>
                <xs:enumeration value="2"/>
                <xs:enumeration value="3"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="snmp-trap-destination" nillable="true" type="dom:snmp-trap-destinationType">
            <xs:annotation>
              <xs:documentation>WebLogic Server uses a trap destination to specify the SNMP
 management station and the community name used by the SNMP agent to
 send notifications. Select which trap destination(s) should be
 used in this WebLogic Server domain from the list of available trap
 destinations.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="snmp-proxy" nillable="true" type="dom:snmp-proxyType">
            <xs:annotation>
              <xs:documentation>The SNMP agents for which this SNMP agent is a proxy.
 &lt;code&gt;SNMPProxyMBeans&lt;/code&gt; describe settings for SNMP agents to
 be proxied by this SNMP agent.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="snmp-gauge-monitor" nillable="true" type="dom:snmp-gauge-monitorType">
            <xs:annotation>
              <xs:documentation>The &lt;code&gt;SNMPGaugeMonitorMBeans&lt;/code&gt; which describe the
 criteria for generating notifications based on JMX GaugeMonitor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="snmp-string-monitor" nillable="true" type="dom:snmp-string-monitorType">
            <xs:annotation>
              <xs:documentation>The &lt;code&gt;SNMPStringMonitorMBeans&lt;/code&gt; which describe the
 criteria for generating notifications based on JMX StringMonitor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="snmp-counter-monitor" nillable="true" type="dom:snmp-counter-monitorType">
            <xs:annotation>
              <xs:documentation>The &lt;code&gt;SNMPCounterMonitorMBeans&lt;/code&gt; which describe the
 criteria for generating notifications based on JMX CounterMonitor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="snmp-log-filter" nillable="true" type="dom:snmp-log-filterType">
            <xs:annotation>
              <xs:documentation>The &lt;code&gt;SNMPLogFilterMBeans&lt;/code&gt; which describe filters for
 generating notifications based on server log messages.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="snmp-attribute-change" nillable="true" type="dom:snmp-attribute-changeType">
            <xs:annotation>
              <xs:documentation>The &lt;code&gt;SNMPAttributeChangeMBeans&lt;/code&gt; which describe the
 MBean type and Attribute name for which attribute change notification
 should be sent when an attribute change is observed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="community-based-access-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this SNMP agent supports SNMPv1 and v2.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="snmp-engine-id" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>An identifier for this SNMP agent that is unique amongst all
 other SNMP agents in the current WebLogic Server domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="authentication-protocol" nillable="false">
            <xs:annotation>
              <xs:documentation>The protocol that this SNMP agent uses to ensure that only authorized
 users can request or receive information about your WebLogic Server domain. 
 Applicable only with SNMPv3.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="noAuth"/>
                <xs:enumeration value="MD5"/>
                <xs:enumeration value="SHA"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="privacy-protocol" nillable="false">
            <xs:annotation>
              <xs:documentation>The protocol that this SNMP agent uses to encrypt and unencrypt messages.
 Applicable only with SNMPv3. Requires you to also use an authentication
 protocol.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="noPriv"/>
                <xs:enumeration value="DES"/>
                <xs:enumeration value="AES_128"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10000" minOccurs="0" name="inform-retry-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of milliseconds that this SNMP agent will wait
 for a response to an INFORM notification.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="3000"/>
                <xs:maxInclusive value="30000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="max-inform-retry-count" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of times that this SNMP agent will
 resend INFORM notifications for which it has not received a response.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="3"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="localized-key-cache-invalidation-interval" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>The number of milliseconds after which WebLogic Server invalidates
 its cache of SNMP security keys. Setting a high value creates a risk
 that users whose credentials have been removed can still access
 SNMP data.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="snmp-access-for-user-m-beans-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Configures this SNMP agent to provide read-only access to 
 MBean types that you have created and registered (custom MBeans).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="inform-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Configures this SNMP agent to send notifications as an 
 INFORM instead of a TRAP. Requires you to specify
 the agent's SNMPTrapVersion as SNMPv2 or SNMPv3.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="705" minOccurs="0" name="master-agent-x-port" nillable="false">
            <xs:annotation>
              <xs:documentation>The port that this SNMP agent uses to communicate with 
 its subagents.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-proxyType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPProxyMBean
 (Interface=weblogic.management.configuration.SNMPProxyMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="port" nillable="false">
            <xs:annotation>
              <xs:documentation>The port number on which this proxied SNMP agent is
 listening.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="oid-root" nillable="true">
            <xs:annotation>
              <xs:documentation>The root of the object identifier (OID) tree that this proxied
 SNMP agent controls.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="public" minOccurs="0" name="community" nillable="true">
            <xs:annotation>
              <xs:documentation>The community name to be passed on for all SNMPv1 requests to this
 proxied SNMP agent.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5000" minOccurs="0" name="timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of milliseconds that the WebLogic Server SNMP agent
 waits for a response to requests that it forwards to this 
 proxy agent.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="security-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The user name on whose behalf the WebLogic SNMP agent forwards v3 
 requests.  If not specified, the request is forwarded as a v1 request.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="security-level" nillable="false">
            <xs:annotation>
              <xs:documentation>The security level that the proxied SNMP agent expects
 for the specified security name.
 (Interface=weblogic.management.configuration.SNMPProxyMBean Attribute=getSecurityLevel)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="noAuthNoPriv"/>
                <xs:enumeration value="authNoPriv"/>
                <xs:enumeration value="authPriv"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-gauge-monitorType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPGaugeMonitorMBean
 (Interface=weblogic.management.configuration.SNMPGaugeMonitorMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:snmp-jmx-monitorType">
        <xs:sequence>
          <xs:element minOccurs="0" name="threshold-high" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The high threshold at which a notification should be generated. A notification
 is generated the first time the monitored value is equal to or greater than
 this value.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="threshold-low" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The low threshold at which a notification should be generated. A notification is
 generated the first time the monitored value is less than or equal to this
 value.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-jmx-monitorType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPJMXMonitorMBean
 (Interface=weblogic.management.configuration.SNMPJMXMonitorMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:snmp-trap-sourceType">
        <xs:sequence>
          <xs:element minOccurs="0" name="monitored-m-bean-type" nillable="true">
            <xs:annotation>
              <xs:documentation>The MBean type that defines the attribute you want to monitor.
 Do not include the &lt;code&gt;MBean&lt;/code&gt; suffix. For example,
 &lt;code&gt;ServerRuntime&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="monitored-m-bean-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the MBean instance that you want to monitor. If you
 leave the name undefined, WebLogic Server monitors all instances of
 the MBean type that you specify in Monitored MBean Type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="monitored-attribute-name" nillable="true">
            <xs:annotation>
              <xs:documentation>The name of an MBean attribute to monitor. This attribute must
 be in the WebLogic Server MIB.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="polling-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The frequency (in seconds) that WebLogic Server checks the
 attribute value.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-string-monitorType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPStringMonitorMBean
 (Interface=weblogic.management.configuration.SNMPStringMonitorMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:snmp-jmx-monitorType">
        <xs:sequence>
          <xs:element minOccurs="0" name="string-to-compare" nillable="true">
            <xs:annotation>
              <xs:documentation>The string against which the value of the monitored attribute
 will be compared.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="notify-differ" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Generates a notification if the value of the monitored attribute and the
 value of String to Compare are different.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="notify-match" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Generates a notification if the value of the monitored attribute and the
 value of String to Compare are the same.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-counter-monitorType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPCounterMonitorMBean
 (Interface=weblogic.management.configuration.SNMPCounterMonitorMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:snmp-jmx-monitorType">
        <xs:sequence>
          <xs:element minOccurs="0" name="threshold" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies a value that triggers the Counter Monitor to generate
 a notification.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="offset" nillable="false">
            <xs:annotation>
              <xs:documentation>An integer value to be added to the threshold value each time the
 observed value equals or exceeds the threshold.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="modulus" nillable="false">
            <xs:annotation>
              <xs:documentation>An integer value to be subtracted from the threshold value when
 the threshold value is crossed.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="snmp-agent-deploymentType">
    <xs:annotation>
      <xs:documentation>Corresponds to SNMPAgentDeploymentMBean
 (Interface=weblogic.management.configuration.SNMPAgentDeploymentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:snmp-agentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="target" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SNMPAgentDeploymentMBean Attribute=getTargetsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="1000" minOccurs="0" name="deployment-order" nillable="false">
            <xs:annotation>
              <xs:documentation>A priority that the server uses to determine when it deploys an
 item. The priority is relative to other deployable items of the
 same type.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="serverType">
    <xs:annotation>
      <xs:documentation>Corresponds to ServerMBean
 (Interface=weblogic.management.configuration.ServerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:kernelType">
        <xs:sequence>
          <xs:element minOccurs="0" name="machine" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getMachineAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="7001" minOccurs="0" name="listen-port" nillable="false">
            <xs:annotation>
              <xs:documentation>The default TCP port that this server uses to listen for regular
 (non-SSL) incoming connections.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="listen-port-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this server can be reached through the default
 plain-text (non-SSL) listen port.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cluster" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getClusterAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="100" minOccurs="0" name="cluster-weight" nillable="false">
            <xs:annotation>
              <xs:documentation>The proportion of the load that this server will bear, relative
 to other servers in a cluster.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="replication-group" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Defines preferred clustered instances considered for hosting
 replicas of the primary HTTP session states created on the
 server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="preferred-secondary-group" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Defines secondary clustered instances considered for hosting
 replicas of the primary HTTP session states created on the
 server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="consensus-process-identifier" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the identifier to be used for consensus-based algorithms.
 Each server should have a unique identifier indexed from 0.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="auto-migration-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether Node Manager can automatically restart this
 server and its services on another machine if the server fails.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="web-server" nillable="true" type="dom:web-serverType">
            <xs:annotation>
              <xs:documentation>Returns the web server for this server. A server has exactly one
 WebServer. A server may also have one or more VirtualHosts. A
 VirtualHost is a subclass of WebServer.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jdbc-logging-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this server maintains a JDBC log file.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="j2ee12-only-mode-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Perpetuated for compatibility with 6.1 GA only. Indicates a
 version 6.1 server that cannot deploy modules based on EJB 2.0 or
 Servlet 2.3.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="j2ee13-warning-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Perpetuated for compatibility with 6.1 GA only.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="iiop-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this server has IIOP support enabled for both
 the regular (non-SSL) and SSL ports.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-iiop-user" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The user name of the default IIOP user. (Requires you to enable
 IIOP.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-iiop-password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getDefaultIIOPPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="tgiop-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this server supports Tuxedo GIOP (TGIOP)
 requests. (Requires you to configure WebLogic Tuxedo Connector
 (WTC) for this server.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="guest" minOccurs="0" name="default-tgiop-user" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The default user associated with the Tuxedo GIOP (TGIOP)
 protocol. (Requires you to configure WebLogic Tuxedo Connector
 (WTC) for this server.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-tgiop-password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getDefaultTGIOPPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="com-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether COM support is enabled on the regular
 (non-SSL) port. COM is not supported on the SSL port. (The
 remaining fields on this page are relevant only if you check this
 box.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="jrmp-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether JRMP support is enabled on the regular
 (non-SS) port. JRMP is not supported on the SSL port.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="com" nillable="true" type="dom:comType">
            <xs:annotation>
              <xs:documentation>Returns the server's COM configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="server-debug" nillable="true" type="dom:server-debugType">
            <xs:annotation>
              <xs:documentation>The debug setting for this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="httpd-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not HTTP support is enabled on the regular port or
 SSL port.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="system-password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getSystemPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="console-input-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>True if commands can be typed at console. REMOVE?</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="listen-thread-start-delay-secs" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Returns the maximum time that the server will wait for server
 sockets to bind before starting a listen thread.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="listeners-bind-early" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Determines whether the server should bind server sockets
 early.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="listen-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The IP address or DNS name this server uses to listen for
 incoming connections.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="external-dns-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The external IP address or DNS name for this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="interface-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The IP address of the NIC that this server should use for
 multicast traffic.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="network-access-point" nillable="true" type="dom:network-access-pointType">
            <xs:annotation>
              <xs:documentation>Network access points, or "NAPs", define additional ports and
 addresses that this server listens on. Additionally, if two servers
 both support the same channel for a given protocol, then new
 connections between them will use that channel.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="300" minOccurs="0" name="accept-backlog" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of backlogged, new TCP connection requests that
 should be allowed for this server's regular and SSL ports.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10000" minOccurs="0" name="max-backoff-between-failures" nillable="false">
            <xs:annotation>
              <xs:documentation>Get max backoff time between failures while accepting client
 connections.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5000" minOccurs="0" name="login-timeout-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>The login timeout for this server's default regular (non-SSL)
 listen port. This is the maximum amount of time allowed for a new
 connection to establish.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="administration-port-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether or not administration port is enabled for the
 server. This field is derived from the DomainMBean and has no
 setter here All the server (7.0 and later) in s single domain
 should either have an administration port or not The administration
 port uses SSL, so SSL must be configured and enabled properly for
 it to be active.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="administration-port" nillable="false">
            <xs:annotation>
              <xs:documentation>The secure administration port for the server. This port
 requires that you enable the domain's administration port and that
 SSL is configured and enabled.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jndi-transportable-object-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>List of factories that create transportable objects.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="iiop-connection-pools" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getIIOPConnectionPoolsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="xml-registry" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getXMLRegistryAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="xml-entity-cache" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getXMLEntityCacheAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="javac" minOccurs="0" name="java-compiler" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The Java compiler to use for all applications hosted on this
 server that need to compile Java code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="java-compiler-pre-class-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The options to prepend to the Java compiler classpath when
 compiling Java code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="java-compiler-post-class-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The options to append to the Java compiler classpath when
 compiling Java code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="extra-rmic-options" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The options passed to the RMIC compiler during server-side
 generation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="extra-ejbc-options" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The options passed to the EJB compiler during server-side
 generation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="verbose-ejb-deployment-enabled" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Whether or not verbose deployment of EJBs is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="./" minOccurs="0" name="transaction-log-file-prefix" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path prefix for the server's JTA transaction log files. If
 the pathname is not absolute, the path is assumed to be relative to
 the server's root directory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transaction-log-file-write-policy" nillable="false">
            <xs:annotation>
              <xs:documentation>The policy that determines how transaction log file entries are
 written to disk. This policy can affect transaction performance.
 (Note: To be transactionally safe, the Direct-Write policy may
 require additional OS or environment changes on some Windows
 systems.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Cache-Flush"/>
                <xs:enumeration value="Direct-Write"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="network-class-loading-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether or not the server will attempt to load classes from the
 network.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="tunneling-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether tunneling for the T3, T3S, HTTP, HTTPS, IIOP,
 and IIOPS protocols should be enabled for this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="45" minOccurs="0" name="tunneling-client-ping-secs" nillable="false">
            <xs:annotation>
              <xs:documentation>The interval (in seconds) at which to ping a tunneled client to
 see if it is still alive.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="40" minOccurs="0" name="tunneling-client-timeout-secs" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time (in seconds) after which a missing tunneled
 client is considered dead.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="admin-reconnect-interval-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds between reconnection attempts to the
 admin server. When the admin server fails the managed server
 will periodically try to connect back to it.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="jms-default-connection-factories-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this server uses JMS default connection
 factories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="server-start" nillable="true" type="dom:server-startType">
            <xs:annotation>
              <xs:documentation>Returns the ServerStartMBean that can be used to start up this
 server remotely.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="listen-delay-secs" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Perpetuated for compatibility with 6.1 only.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jta-migratable-target" nillable="true" type="dom:jta-migratable-targetType">
            <xs:annotation>
              <xs:documentation>Returns the JTAMigratableTargetMBean that is used to deploy the
 JTA Recovery Service to (is the server's cluster is not null).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3600" minOccurs="0" name="low-memory-time-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time (in seconds) that defines the interval over
 which this server determines average free memory values.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="300"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="low-memory-sample-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of times this server samples free memory during the
 time period specified by LowMemoryTimeInterval.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="low-memory-granularity-level" nillable="false">
            <xs:annotation>
              <xs:documentation>The granularity level (in percent) that this server uses for
 logging low memory conditions and changing the server health state
 to &lt;tt&gt;Warning&lt;/tt&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="low-memory-gc-threshold" nillable="false">
            <xs:annotation>
              <xs:documentation>The threshold level (in percent) that this server uses for
 logging low memory conditions and changing the server health state
 to &lt;tt&gt;Warning&lt;/tt&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="99"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="staging-directory-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The directory path on the Managed Server where all staged
 (prepared) applications are placed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="upload-directory-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The directory path on the Administration Server where all
 uploaded applications are placed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="staging-mode" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mode that specifies whether an application's files are
 copied from a source on the Administration Server to the Managed
 Server's staging area during application preparation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="auto-restart" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Node Manager can automatically restart
 this server if it crashes or otherwise goes down
 unexpectedly.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="auto-kill-if-failed" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Node Manager should automatically kill
 this server if its health state is &lt;code&gt;failed&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3600" minOccurs="0" name="restart-interval-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds during which this server can be restarted,
 up to the number of times specified in RestartMax.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="300"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="2" minOccurs="0" name="restart-max" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of times that the Node Manager can restart this
 server within the interval specified in RestartIntervalSeconds.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="180" minOccurs="0" name="health-check-interval-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds that defines the frequency of this
 server's self-health monitoring. The server monitors the health of
 it's subsystems every HealthCheckIntervalSeconds and changes the
 Server's overall state if required.
 </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="health-check-timeout-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds the Node Manager should wait before timing
 out its health query to this server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="120" minOccurs="0" name="health-check-start-delay-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds the Node Manager should wait before
 starting to monitor the server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="restart-delay-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds the Node Manager should wait before
 restarting this server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="classpath-servlet-disabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>The ClasspathServlet will serve any class file in the classpath
 and is registered by default in every Web application (including
 management). It does not need to be turned on for many applications
 though, and represents a security hole if unchecked.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="default-internal-servlets-disabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether all default servlets in the servlet engine are
 disabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="unknown" minOccurs="0" name="server-version" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The release identifier for the server. Since this is a
 configured attribute it is only as accurate as the configuration.
 The form of the version is major.minor.servicepack.rollingpatch.
 Not all parts of the version are required. i.e. "7" is
 acceptable.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="RUNNING" minOccurs="0" name="startup-mode" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The state in which this server should be started. If you specify
 &lt;tt&gt;STANDBY&lt;/tt&gt;, you must also enable the domain-wide
 administration port.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="server-life-cycle-timeout-val" nillable="false">
            <xs:annotation>
              <xs:documentation>Number of seconds a force shutdown operation waits before timing
 out and killing itself. If the operation does not complete within
 the configured timeout seconds, the server will shutdown
 automatically if the state of the server at that time was
 &lt;code&gt;SHUTTING_DOWN&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="startup-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>Timeout value for server start and resume operations.
 If the server fails to start in the timeout period, it will force
 shutdown.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="graceful-shutdown-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>Number of seconds a graceful shutdown operation waits before
 forcing a shut down. A graceful shutdown gives WebLogic Server
 subsystems time to complete certain application processing
 currently in progress. If subsystems are unable to complete
 processing within the number of seconds that you specify here, then
 the server will force shutdown automatically.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="ignore-sessions-during-shutdown" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether a graceful shutdown operation drops all HTTP
 sessions immediately.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="managed-server-independence-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this Managed Server can be started when the
 Administration Server is unavailable.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="msi-file-replication-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Administration Server replicates its
 configuration files to this Managed Server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="client-cert-proxy-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the &lt;tt&gt;HttpClusterServlet&lt;/tt&gt; proxies the
 client certificate in a special header.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="weblogic-plugin-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this server uses the proprietary
 &lt;tt&gt;WL-Proxy-Client-IP&lt;/tt&gt; header, which is recommended if the
 server instance will receive requests from a proxy plug-in.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="hosts-migratable-services" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Gets the hostsMigratableServices attribute of the ServerMBean
 object</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="http-trace-support-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Returns the HttpTraceSupportEnabled value
 (Interface=weblogic.management.configuration.ServerMBean Attribute=isHttpTraceSupportEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="key-stores" nillable="true">
            <xs:annotation>
              <xs:documentation>Which configuration rules should be used for finding the
 server's identity and trust keystores?</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="DemoIdentityAndDemoTrust"/>
                <xs:enumeration value="CustomIdentityAndJavaStandardTrust"/>
                <xs:enumeration value="CustomIdentityAndCustomTrust"/>
                <xs:enumeration value="CustomIdentityAndCommandLineTrust"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="custom-identity-key-store-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path and file name of the identity keystore.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="custom-identity-key-store-type" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of the keystore. Generally, this is
 &lt;code&gt;JKS&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="custom-identity-key-store-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getCustomIdentityKeyStorePassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="custom-trust-key-store-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path and file name of the custom trust keystore.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="custom-trust-key-store-type" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The type of the keystore. Generally, this is
 &lt;code&gt;JKS&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="custom-trust-key-store-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getCustomTrustKeyStorePassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="java-standard-trust-key-store-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getJavaStandardTrustKeyStorePassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="reliable-delivery-policy" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getReliableDeliveryPolicyAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="message-id-prefix-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether message IDs in logged messages will include a
 prefix. Message ids are 6 digit numeric strings that can be
 optionally presented in a log entry with a prefix. The prefix used
 by server messages is "BEA-".</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-file-store" nillable="true" type="dom:default-file-storeType">
            <xs:annotation>
              <xs:documentation>Controls the configuration of the default persistent store on
 this server. Each server has a default store, which is a file-based
 object repository used by various subsystems.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="candidate-machine" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getCandidateMachinesAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="overload-protection" nillable="true" type="dom:overload-protectionType">
            <xs:annotation>
              <xs:documentation>get attributes related to server overload protection
 (Interface=weblogic.management.configuration.ServerMBean Attribute=getOverloadProtection)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jdbcllr-table-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The table name for this server's Logging Last Resource (LLR)
 database table(s). WebLogic Server creates the table(s) and then uses
 them during transaction processing for the LLR transaction optimization.
 This setting must be unique for each server. The default table name is
 &lt;code&gt;WL_LLR_&lt;i&gt;SERVERNAME&lt;/i&gt;&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="40" minOccurs="0" name="jdbcllr-table-xid-column-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Get the size of the XID column of the JDBC LLR table,
 This setting takes effect only when the table is first created.
 (Interface=weblogic.management.configuration.ServerMBean Attribute=getJDBCLLRTableXIDColumnSize)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="64" minOccurs="0" name="jdbcllr-table-pool-column-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Get the size of the pool name column of the JDBC LLR table,
 This setting takes effect only when the table is first created.
 (Interface=weblogic.management.configuration.ServerMBean Attribute=getJDBCLLRTablePoolColumnSize)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="1000" minOccurs="0" name="jdbcllr-table-record-column-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Get the size of the record data column of the JDBC LLR table,
 This setting takes effect only when the table is first created.
 (Interface=weblogic.management.configuration.ServerMBean Attribute=getJDBCLLRTableRecordColumnSize)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="jdbc-login-timeout-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>Get the JDBC Login Timeout value. Specified value is passed
 into java.sql.DriverManager.setLoginTimeout(). Note that this
 JDBC drivers loaded
 into this JVM. Feature is disabled by default.
 (Interface=weblogic.management.configuration.ServerMBean Attribute=getJDBCLoginTimeoutSeconds)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="300"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="server-diagnostic-config" nillable="true" type="dom:wldf-server-diagnosticType">
            <xs:annotation>
              <xs:documentation>The diagnostic configuration for the servers
 (Interface=weblogic.management.configuration.ServerMBean Attribute=getServerDiagnosticConfig)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="auto-jdbc-connection-close" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Get the performance flag for disabling Finalize Method
 in JDBC Wrapper Code
 (Interface=weblogic.management.configuration.ServerMBean Attribute=getAutoJDBCConnectionClose)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="supported-protocol" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Protocols supported by this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="federation-services" nillable="true" type="dom:federation-servicesType">
            <xs:annotation>
              <xs:documentation>Gets the Federation Services MBean</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="single-sign-on-services" nillable="true" type="dom:single-sign-on-servicesType">
            <xs:annotation>
              <xs:documentation>Gets the Single Sign-On Services MBean</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="web-service" nillable="true" type="dom:web-serviceType">
            <xs:annotation>
              <xs:documentation>Gets Web service configuration for this server</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="180000" minOccurs="0" name="nm-socket-create-timeout-in-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>Returns the timeout value to be used by NodeManagerRuntime when creating a
 a socket connection to the agent. Default set high as SSH agent may require 
 a high connection establishment time.
 (Interface=weblogic.management.configuration.ServerMBean Attribute=getNMSocketCreateTimeoutInMillis)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="coherence-cluster-system-resource" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerMBean Attribute=getCoherenceClusterSystemResourceAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="kernelType">
    <xs:annotation>
      <xs:documentation>Corresponds to KernelMBean
 (Interface=weblogic.management.configuration.KernelMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="valid-protocols" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.KernelMBean Attribute=getValidProtocolsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="reverse-dns-allowed" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the kernel is allowed to perform reverse DNS
 lookups.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-protocol" nillable="true">
            <xs:annotation>
              <xs:documentation>The protocol to use for connections when none is specified.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="t3"/>
                <xs:enumeration value="t3s"/>
                <xs:enumeration value="http"/>
                <xs:enumeration value="https"/>
                <xs:enumeration value="iiop"/>
                <xs:enumeration value="iiops"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="default-secure-protocol" nillable="true">
            <xs:annotation>
              <xs:documentation>The protocol to use for secure connections when none is
 specified.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="t3s"/>
                <xs:enumeration value="https"/>
                <xs:enumeration value="iiops"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="administration-protocol" nillable="true">
            <xs:annotation>
              <xs:documentation>Returns the protocol to be used for administrative connections
 when none is specified.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="t3s"/>
                <xs:enumeration value="https"/>
                <xs:enumeration value="iiops"/>
                <xs:enumeration value="t3"/>
                <xs:enumeration value="http"/>
                <xs:enumeration value="iiop"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="15" minOccurs="0" name="thread-pool-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The size of the execute thread pool.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="system-thread-pool-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The size of the system execute thread pool.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="5"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="self-tuning-thread-pool-size-min" nillable="false">
            <xs:annotation>
              <xs:documentation>Get the minimum thread pool size of the self-tuning thread pool.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="400" minOccurs="0" name="self-tuning-thread-pool-size-max" nillable="false">
            <xs:annotation>
              <xs:documentation>Sets the maximum thread pool size of the self-tuning thread pool.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="15" minOccurs="0" name="jms-thread-pool-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The size of the JMS execute thread pool.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="native-io-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether native I/O is enabled for the server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="dev-poll-disabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the /dev/poll device should be used for
 Muxing.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="muxer-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The muxer class name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="socket-readers" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of socket reader threads</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="33" minOccurs="0" name="thread-pool-percent-socket-readers" nillable="false">
            <xs:annotation>
              <xs:documentation>The percentage of execute threads from the default queue that
 can be used as socket readers.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="99"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="socket-reader-timeout-min-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>The minimum number of milliseconds a muxer thread should attempt
 to read from a given socket. This value is ignored if native IO is
 enabled.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="100" minOccurs="0" name="socket-reader-timeout-max-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of milliseconds a muxer thread should attempt
 to read from a given socket. This value is ignored if native IO is
 enabled.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="outbound-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether new server-to-server connections may consider
 the default server channel when initiating a connection. This is
 only relevant if the connection needs to be bound to the default
 listen address. This will only work for binary protocols that
 support both outbound and inbound traffic.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="outbound-private-key-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies whether the SSL identity specified by
 {@link SSLMBean#ServerPrivateKeyAlias SSLMBean#ServerPrivateKeyAlias} for this server
 should be used for outbound SSL connections on the default
 server channel. In normal circumstances the outbound identity is
 determined by the caller's environment.
 (Interface=weblogic.management.configuration.KernelMBean Attribute=isOutboundPrivateKeyEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="10000000" minOccurs="0" name="max-message-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of bytes allowed in messages that are
 received over all supported protocols, unless overridden by a
 protocol-specific setting or a custom channel setting.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="4096"/>
                <xs:maxInclusive value="2000000000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-t3-message-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum number of bytes allowed in messages
 that are received over the T3 protocol. If you configure custom network
 channels for this server, each channel can override this maximum message
 size.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="socket-buffer-size-as-chunk-size" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the server's buffer size for sending or receiving data
 through a raw socket should be set to 4KB. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-http-message-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum number of bytes allowed in messages
 that are received over the HTTP protocol. If you configure custom network
 channels for this server, each channel can override this maximum message
 size.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-com-message-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum number of bytes allowed in messages
 that are received over the COM protocol. If you configure custom network
 channels for this server, each channel can override this maximum message
 size.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-iiop-message-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum number of bytes allowed in messages
 that are received over the IIOP protocol. If you configure custom network
 channels for this server, each channel can override this maximum message
 size.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="2" minOccurs="0" name="default-giop-minor-version" nillable="false">
            <xs:annotation>
              <xs:documentation>The default minor GIOP version for IIOP messages. This attribute
 is useful for client orbs with broken GIOP 1.2 implementations.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="use-iiop-locate-request" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specify whether outbound calls should use an initial
 LocateRequest.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="iiop-tx-mechanism" nillable="true">
            <xs:annotation>
              <xs:documentation>Configures IIOP propagate transactions using either
 WebLogic-specific JTA or the OMG-specified OTS.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="ots"/>
                <xs:enumeration value="jta"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="iiop-location-forward-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>Specify how IIOP location forward host selection should be
 applied.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="off"/>
                <xs:enumeration value="failover"/>
                <xs:enumeration value="round-robin"/>
                <xs:enumeration value="random"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="connect-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;The amount of time that this server should wait to
 establish an outbound socket connection before timing out. A
 value of &lt;code&gt;0&lt;/code&gt; disables server connect timeout.
 (Interface=weblogic.management.configuration.KernelMBean Attribute=getConnectTimeout)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="240"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="complete-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds that this server waits for a
 complete message to be received. If you configure network channels
 for this server, each channel can override this message
 timeout.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="complete-t3-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete T3
 message to be received. If you configure network channels for this
 server, each channel can override this T3 message timeout.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="complete-http-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete HTTP
 message to be received. If you configure network channels for this
 server, each channel can override this HTTP message timeout.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="complete-com-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete COM
 message to be received. This setting does not apply to any network
 channels that you have configured for this server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="65" minOccurs="0" name="idle-connection-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds that a connection is allowed to be
 idle before it is closed by the server. The T3 and T3S protocols
 ignore this attribute. If you configure network channels for this
 server, each channel can override this idle connection message
 timeout.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="idle-iiop-connection-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds an IIOP connection is allowed to
 be idle before it is closed by the server. This timeout helps guard
 against server deadlock through too many open connections.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="complete-iiop-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete IIOP
 message to be received. This timeout helps guard against denial of
 service attacks in which a caller indicates that they will be
 sending a message of a certain size which they never finish
 sending.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60000" minOccurs="0" name="period-length" nillable="false">
            <xs:annotation>
              <xs:documentation>The time interval in milliseconds of the heartbeat period. A
 value of 0 indicates that heartbeats are turned off.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="4" minOccurs="0" name="idle-periods-until-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of idle periods until peer is considered
 unreachable</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="4"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="rjvm-idle-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The period of inactivity in milliseconds after which a RJVM is
 cleaned up. A value of 0 indicates that the RJVM never times
 out.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="900000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="response-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The time in milliseconds for which we are willing to wait for a
 response. A value of 0 indicates that we will wait till the
 response arrives.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="dgc-idle-periods-until-timeout" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The number of idle periods allowed before object is collected.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ssl" nillable="true" type="dom:sslType">
            <xs:annotation>
              <xs:documentation>Returns the kernel's SSL configuration. An SSL MBean is always
 linked to a particular Kernel and cannot be changed. Individual
 attributes on the SSL MBean may be changed, as documented, but the
 MBean itself may not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="iiop" nillable="true" type="dom:iiopType">
            <xs:annotation>
              <xs:documentation>Returns the kernel's IIOP configuration. An IIOP MBean is always
 linked to a particular Kernel and cannot be changed. Individual
 attributes on the IIOP MBean may be changed, as documented, but the
 MBean itself may not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="log" nillable="true" type="dom:logType">
            <xs:annotation>
              <xs:documentation>Returns the Log settings for this Kernel. An Log MBean is always
 linked to a particular Kernel and cannot be changed. Individual
 attributes on the Log MBean may be changed, as documented, but the
 MBean itself may not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="log-remote-exceptions-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the server message log includes exceptions
 that are raised in remote systems.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="instrument-stack-trace-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the server returns stack traces for RMI calls
 that generate exceptions.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="execute-queue" nillable="true" type="dom:execute-queueType">
            <xs:annotation>
              <xs:documentation>Returns the execute queues configured for this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-open-sock-count" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of open sockets allowed in server at a given
 point of time.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="600" minOccurs="0" name="stuck-thread-max-time" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds that a thread must be continually working
 before this server considers the thread stuck.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="stuck-thread-timer-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds after which WebLogic Server periodically
 scans threads to see if they have been continually working for the
 configured maximum length of time.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="tracing-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Returns true if tracing is enabled</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="messaging-bridge-thread-pool-size" nillable="false">
            <xs:annotation>
              <xs:documentation>Returns the size of the messaging bridge execute thread
 pool.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1500" minOccurs="0" name="mtu-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Returns the size of the MTU of the NIC.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="load-stub-using-context-class-loader" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Sets the value of the LoadStubUsingContextClassLoader
 attribute.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="refresh-client-runtime-descriptor" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Sets the value of the RefreshClientRuntimeDescriptor
 attribute.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="timed-out-ref-isolation-time" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>The amount of time in milli seconds a reference should not be
 used after a request timed out. The clusterable ref avoids using
 this remote ref for the period specified.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="use81-style-execute-queues" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Backward compatibility mode to switch to 8.1 execute queues
 instead of WorkManagers. Each of the WorkManagers is converted to
 an individual execute queue. Setting this attribute requires a
 server restart.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="255" minOccurs="0" name="t3-client-abbrev-table-size" nillable="false">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.KernelMBean Attribute=getT3ClientAbbrevTableSize)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="255"/>
                <xs:maxInclusive value="1024"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="2048" minOccurs="0" name="t3-server-abbrev-table-size" nillable="false">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.KernelMBean Attribute=getT3ServerAbbrevTableSize)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="255"/>
                <xs:maxInclusive value="10240"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="sslType">
    <xs:annotation>
      <xs:documentation>Corresponds to SSLMBean
 (Interface=weblogic.management.configuration.SSLMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="true" minOccurs="0" name="use-java" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Enables the use of native Java libraries.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the server can be reached through the default
 SSL listen port.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ciphersuite" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Indicates the cipher suites being used on a particular WebLogic
 Server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cert-authenticator" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the Java class that implements the
 &lt;tt&gt;weblogic.security.acl.CertAuthenticator&lt;/tt&gt; class, which is
 deprecated in this release of WebLogic Server. This field is for
 Compatibility security only, and is only used when the Realm
 Adapter Authentication provider is configured.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="hostname-verifier" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the class that implements the
 &lt;tt&gt;weblogic.security.SSL.HostnameVerifier&lt;/tt&gt; interface.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="hostname-verification-ignored" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether to ignore the installed implementation of the
 &lt;tt&gt;weblogic.security.SSL.HostnameVerifier&lt;/tt&gt; interface (when
 this server is acting as a client to another application
 server).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="trusted-ca.pem" minOccurs="0" name="trusted-ca-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The full directory location of the file that specifies the
 certificate authorities trusted by the server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="key-encrypted" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether or not the private key for the WebLogic Server
 has been encrypted with a password. This attribute is no longer
 used as of WebLogic Server version 7.0.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="500" minOccurs="0" name="export-key-lifespan" nillable="false">
            <xs:annotation>
              <xs:documentation>Indicates the number of times WebLogic Server can use an
 exportable key between a domestic server and an exportable client
 before generating a new key. The more secure you want WebLogic
 Server to be, the fewer times the key should be used before
 generating a new key.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="client-certificate-enforced" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether or not clients must present digital
 certificates from a trusted certificate authority to WebLogic
 Server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="server-cert.der" minOccurs="0" name="server-certificate-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The full directory location of the digital certificate file
 (&lt;tt&gt;.der&lt;/tt&gt; or &lt;tt&gt;.pem&lt;/tt&gt;) for the server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="7002" minOccurs="0" name="listen-port" nillable="false">
            <xs:annotation>
              <xs:documentation>The TCP/IP port at which this server listens for SSL connection
 requests.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="server-certchain.pem" minOccurs="0" name="server-certificate-chain-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The full directory location and name of the file containing an
 ordered list of certificate authorities trusted by WebLogic
 Server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3" minOccurs="0" name="certificate-cache-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of certificates held that have not been redeemed by
 tokens.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="handler-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Not used.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="25000" minOccurs="0" name="login-timeout-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the number of milliseconds that WebLogic Server waits
 for an SSL connection before timing out. SSL connections take
 longer to negotiate than regular connections.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="server-key.der" minOccurs="0" name="server-key-file-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The full directory location of the private key file
 (&lt;tt&gt;.der&lt;/tt&gt; or &lt;tt&gt;.pem&lt;/tt&gt;) for the server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="two-way-ssl-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>The form of SSL that should be used.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="server-private-key-alias" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The string alias used to store and retrieve the server's private
 key in the keystore. This private key is associated with the
 server's digital certificate.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="server-private-key-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SSLMBean Attribute=getServerPrivateKeyPassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="ssl-rejection-logging-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether warning messages are logged in the server log
 when SSL connections are rejected.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="identity-and-trust-locations" nillable="true">
            <xs:annotation>
              <xs:documentation>Indicates where SSL should find the server's identity
 (certificate and private key) as well as the server's trust
 (trusted CAs).</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="KeyStores"/>
                <xs:enumeration value="FilesOrKeyStoreProviders"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="inbound-certificate-validation" nillable="true">
            <xs:annotation>
              <xs:documentation>Indicates the client certificate validation rules for inbound
 SSL.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="BuiltinSSLValidationOnly"/>
                <xs:enumeration value="BuiltinSSLValidationAndCertPathValidators"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="outbound-certificate-validation" nillable="true">
            <xs:annotation>
              <xs:documentation>Indicates the server certificate validation rules for outbound
 SSL.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="BuiltinSSLValidationOnly"/>
                <xs:enumeration value="BuiltinSSLValidationAndCertPathValidators"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="allow-unencrypted-null-cipher" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Test if the AllowUnEncryptedNullCipher is enabled</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="use-server-certs" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Sets whether the client should use the server certificates/key as the client
  identity when initiating a connection over https.
 (Interface=weblogic.management.configuration.SSLMBean Attribute=isUseServerCerts)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jsse-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SSLMBean Attribute=isJSSEEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="iiopType">
    <xs:annotation>
      <xs:documentation>Corresponds to IIOPMBean
 (Interface=weblogic.management.configuration.IIOPMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="-1" minOccurs="0" name="idle-connection-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds an IIOP connection is allowed to
 be idle before it is closed by the server. This timeout helps guard
 against server deadlock through too many open connections.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="complete-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete IIOP
 message to be received. This timeout helps guard against denial of
 service attacks in which a caller indicates that they will be
 sending a message of a certain size which they never finish
 sending.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-message-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum IIOP message size allowable in a message header.
 This attribute attempts to prevent a denial of service attack
 whereby a caller attempts to force the server to allocate more
 memory than is available thereby keeping the server from responding
 quickly to other requests.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="2" minOccurs="0" name="default-minor-version" nillable="false">
            <xs:annotation>
              <xs:documentation>The default GIOP (General Inter-ORB Protocol) version that this
 server will negotiate for incoming connections. (You may have to
 modify the default to work with other vendor's ORBs.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="use-locate-request" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specify whether outbound calls should use an initial
 LocateRequest.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="tx-mechanism" nillable="true">
            <xs:annotation>
              <xs:documentation>The transaction mechanism used by IIOP invocations. The default
 is the Object Transaction Service (OTS) required by J2EE 1.3.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="OTS"/>
                <xs:enumeration value="JTA"/>
                <xs:enumeration value="OTSv11"/>
                <xs:enumeration value="none"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="location-forward-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>Specify how IIOP location forward host selection should be
 applied.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="off"/>
                <xs:enumeration value="failover"/>
                <xs:enumeration value="round-robin"/>
                <xs:enumeration value="random"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="default-wide-char-codeset" nillable="true">
            <xs:annotation>
              <xs:documentation>The wide character code set that this server will publish as its
 native code set. (Older ORBs may have trouble interoperating with
 anything other than the default.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="UCS-2"/>
                <xs:enumeration value="UTF-16"/>
                <xs:enumeration value="UTF-8"/>
                <xs:enumeration value="UTF-16BE"/>
                <xs:enumeration value="UTF-16LE"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="default-char-codeset" nillable="true">
            <xs:annotation>
              <xs:documentation>The standard character code set that this server will publish as
 its native code set. (Older ORBs may have trouble interoperating
 with anything other than the default.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="US-ASCII"/>
                <xs:enumeration value="UTF-8"/>
                <xs:enumeration value="ISO-8859-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="use-full-repository-id-list" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specify whether to use full Repository ID lists when sending
 value type information for custom-marshaled types. Full Repository
 ID lists allow C++ ORBS to truncate values to base types. For
 RMI-IIOP and Java ORBs doing this merely increases transmission
 overhead. JDK ORBs are known to have problems with these so setting
 this will prevent JDK ORB access from working.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="use-stateful-authentication" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specify whether to advertise RMI objects and EJBs as
 supporting stateful CSIv2. Stateful CSIv2 is more efficient
 than stateless, requiring only a single authentication step for
 each remote principal. Stateless CSIv2 requires per-request
 authentication. Stateful CSIv2 is not required by J2EE 1.3 and
 so some ORBs do not support it. Stateful CSIv2 is enabled by
 default. This property can be changed at the object-level by
 changing the object's &amp;lt;stateful-authentication&amp;gt; runtime
 descriptor property.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="use-serial-format-version2" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specify whether to advertise RMI objects and EJBs as
 supporting RMI-IIOP serial format version 2 for custom
 marshaled objects.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="enable-ior-servlet" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Enable getior servlet used to publish COS Naming Service IORs
 (Interface=weblogic.management.configuration.IIOPMBean Attribute=getEnableIORServlet)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="use-java-serialization" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specity whether to use java serialization for marshalling objects.
 Setting this property improves performance when marshalling objects 
 with very large object graphs.
 (Interface=weblogic.management.configuration.IIOPMBean Attribute=getUseJavaSerialization)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="system-security" nillable="true">
            <xs:annotation>
              <xs:documentation>Specify the value System Security. The following variables are affected.
 clientCertAuthentication, clientAuthentication, identityAssertion
 confidentiality, integrity. The value set in this MBean would only be picked up
 if the value set in RTD.xml is "config".
 (Interface=weblogic.management.configuration.IIOPMBean Attribute=getSystemSecurity)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="none"/>
                <xs:enumeration value="supported"/>
                <xs:enumeration value="required"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="execute-queueType">
    <xs:annotation>
      <xs:documentation>Corresponds to ExecuteQueueMBean
 (Interface=weblogic.management.configuration.ExecuteQueueMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="65536" minOccurs="0" name="queue-length" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of simultaneous requests that this server can
 hold in the queue.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="256"/>
                <xs:maxInclusive value="1073741824"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="thread-priority" nillable="false">
            <xs:annotation>
              <xs:documentation>The priority of the threads associated with this queue.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="15" minOccurs="0" name="thread-count" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of threads assigned to this queue.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65536"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="90" minOccurs="0" name="queue-length-threshold-percent" nillable="false">
            <xs:annotation>
              <xs:documentation>The percentage of the Queue Length size that can be reached
 before this server indicates an overflow condition for the
 queue. If the overflow condition is reached and the current thread
 count has not reached the ThreadsMaximum value, then ThreadsIncrease
 number of threads are added.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="99"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="threads-increase" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the number of threads to increase the queue length when the
 queue length theshold is reached. This threshold is determined
 by the QueueLengthThresholdPercent value.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65536"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="400" minOccurs="0" name="threads-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of threads that this queue is allowed to
 have; this value prevents WebLogic Server from creating an overly
 high thread count in the queue in response to continual overflow
 conditions.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65536"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="threads-minimum" nillable="false">
            <xs:annotation>
              <xs:documentation>The minimum number of threads that WebLogic Server will maintain
 in the queue.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65536"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="comType">
    <xs:annotation>
      <xs:documentation>Corresponds to COMMBean
 (Interface=weblogic.management.configuration.COMMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="nt-auth-host" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The address of the primary domain controller this server uses
 for authenticating clients. (If not specified, COM clients will not
 be authenticated.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="native-mode-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this server should use native DLLs to allow
 Java objects to interact with COM objects. (Supported on Windows
 only.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="verbose-logging-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether verbose logging is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="memory-logging-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this server should log memory usage.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="prefetch-enums" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this server should prefetch the next element
 in a &lt;tt&gt;java.lang.Enumeration&lt;/tt&gt; (that had been improperly
 converted from a COM &lt;tt&gt;VariantEnumeration&lt;/tt&gt; type) so the
 correct value is returned when the &lt;tt&gt;hasMoreElements()&lt;/tt&gt;
 method is called.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="apartment-threaded" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Controls the flag that is used to initialize COM in native
 mode.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="server-debugType">
    <xs:annotation>
      <xs:documentation>Corresponds to ServerDebugMBean
 (Interface=weblogic.management.configuration.ServerDebugMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:kernel-debugType">
        <xs:sequence>
          <xs:element minOccurs="0" name="diagnostic-context-debug-mode" nillable="true">
            <xs:annotation>
              <xs:documentation>Indicates whether or not context based debugging is enabled.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Off"/>
                <xs:enumeration value="And"/>
                <xs:enumeration value="Or"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="debug-mask-criteria" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Indicates the dye mask for criteria used to determine whether the debug will be emitted.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="server" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerDebugMBean Attribute=getServerAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="listen-thread-debug" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug listenThread processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="magic-thread-dump-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerDebugMBean Attribute=isMagicThreadDumpEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="localhost" minOccurs="0" name="magic-thread-dump-host" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerDebugMBean Attribute=getMagicThreadDumpHost)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="debugMagicThreadDumpFile" minOccurs="0" name="magic-thread-dump-file" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerDebugMBean Attribute=getMagicThreadDumpFile)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="magic-thread-dump-back-to-socket" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerDebugMBean Attribute=getMagicThreadDumpBackToSocket)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="bug-report-service-wsdl-url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerDebugMBean Attribute=getBugReportServiceWsdlUrl)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-app-container" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Application Container processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-libraries" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug application library processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-class-redef" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Gets the DebugClassRedef attribute of ServerDebugMBean</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="redefining-class-loader" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Gets the fastswap RedefiningClassLoader debug attribute of ServerDebugMBean</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-class-size" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Gets the fastswap DebugClassSize debug attribute of ServerDebugMBean</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-store" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Gets the fastswap DefaultStore debug attribute of ServerDebugMBean</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="class-change-notifier" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Gets the fastswap ClassChangeNotifier debug attribute of ServerDebugMBean</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-http" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WebApp Container HTTP processing.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-url-resolution" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug URL resolution for incoming http requests</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-http-sessions" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Http Session management in the webapp container.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-http-logging" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug log manager in the webapp container.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-web-app-identity-assertion" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug identity assertion flow when identity assertion occurs in the
 webapp container.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-web-app-security" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug webapp security</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-web-app-module" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WebApp Module deployment callbacks</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-compilation" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB compilation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-deployment" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB deployment</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-mdb-connection" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB MDB Connection processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-caching" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB Caching</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-swapping" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB Swapping</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-locking" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB locking</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-pooling" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB pooling</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-timers" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB Timer processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-invoke" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB invocation processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-security" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB Security</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-cmp-deployment" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB CMP deployment processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-ejb-cmp-runtime" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug EJB CMP runtime processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-event-manager" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Event Manager processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-cluster-fragments" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug for each fragment that is sent or received by multicast.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-cluster" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug each GroupMessage that is sent or received by
 multicast.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-cluster-heartbeats" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug each cluster Heartbeat that is sent or received by multicast.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-cluster-announcements" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug each Announcement, StateDump, and Attributes message that
 is sent or received by multicast.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-replication" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug cluster replication information.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-replication-details" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug low-level cluster replication information.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-async-queue" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug async replication/persistence information.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-leader-election" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug the cluster leader election messages.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-drs-calls" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Data replication service (DRS) API calls.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-drs-heartbeats" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug DRS Heartbeats.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-drs-messages" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug DRS Message traffic.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-drs-update-status" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug DRS Update status processing.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-drs-state-transitions" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug DRS State transitions.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-drs-queues" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug DRS Queueing traffic.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jndi" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug basic naming service machinery.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jndi-resolution" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug naming service name resolution.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-jndi-factories" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JNDI state and object factories.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-tunneling-connection-timeout" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug HTTP tunneling connection timed out processing.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-tunneling-connection" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug HTTP tunneling connection open/close processing.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-back-end" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMSBackEnd processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-front-end" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMSFrontEnd processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-common" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMSCommon processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-config" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMSConfig processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-dist-topic" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS Distributed Topic processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-locking" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS Lock processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jmsxa" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS XA processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-dispatcher" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS Dispatcher processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-store" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS Store operations</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-boot" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS boot operations</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-durable-subscribers" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS durable subscriber operations</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jmsjdbc-scavenge-on-flush" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS JDBC store scavenge mode processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jmsame" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS AME processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-pause-resume" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS Pause/Resume processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-module" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMSModule deployment processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-message-path" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS MessagePath processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jmssaf" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS SAF processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jms-wrappers" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug the pooling and wrapping of JMS connections, sessions, and other
 objects. This feature is enabled when a JMS connection factory, from
 any vendor, is used inside an EJB or a servlet using the 
 "resource-reference" element in the deployment descriptor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jmscds" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMS CDS processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jtaxa" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA XA resources</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-non-xa" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA non-XA resources</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jtaxa-stack-trace" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed Debug of JTA XA processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jtarmi" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA RMI processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta2pc" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA 2PC processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta2pc-stack-trace" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed Debug of JTA 2PC processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jtatlog" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA transaction log processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jtajdbc" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA JDBC processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-recovery" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA Recovery processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-recovery-stack-trace" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug of JTA Recovery processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jtaapi" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA external API</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-propagate" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA transaction propagation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-gateway" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA imported transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-gateway-stack-trace" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug of JTA imported transactions</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-naming" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA naming</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-naming-stack-trace" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug of JTA naming</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-resource-health" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA resource health</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-migration" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA TLOG Migration</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-lifecycle" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA ServerLifecycle</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jtallr" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA Logging Last Resource </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jta-health" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JTA Health Monitoring</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-jta-transaction-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Debug JTA Transaction name filter processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-jta-resource-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Debug JTA Resource name filter</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-messaging-kernel" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debugging for the messaging kernel. The messaging kernel is low-
 level messaging code that is used by the JMS and store and forward
 subsystems.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-messaging-kernel-boot" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debugging for the messaging kernel as the server is being rebooted.
 This provides detailed information on every persistent message
 that is recovered.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-saf-life-cycle" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Messaging SAF Lifecycle.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-saf-admin" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Messaging SAF Admin.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-saf-manager" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Messaging SAF Manager.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-saf-sending-agent" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Messaging SAF SendingAgent.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-saf-receiving-agent" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Messaging SAF ReceivingAgent.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-saf-transport" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Messaging SAF Transport.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-saf-message-path" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Messaging SAF MessagePath.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-saf-store" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Messaging SAF Store.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-saf-verbose" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug of Messaging SAF.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-path-svc" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug the Path Service</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-path-svc-verbose" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug for the Path Service</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-sca-container" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Weblogic SCA Container </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-realm" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Realm processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security service manager</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-password-policy" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Password Guessing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-user-lockout" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security User Lockout processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-service" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Service</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-predicate" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework predicate processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-ssl" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security SSL and TLS processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-ssl-eaten" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security SSL and TLS exception processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-embedded-ldap" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Embedded LDAP processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-embedded-ldap-log-to-console" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Embedded LDAP processing (output to console)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="debug-embedded-ldap-log-level" nillable="false">
            <xs:annotation>
              <xs:documentation>Debug Embedded LDAP processing (log level)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="11"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-embedded-ldap-write-override-props" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Embedded LDAP Write All Overrides to Property Files</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-adjudicator" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework Adjudication processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-atn" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework Atn processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-atz" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework Atz processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-auditor" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework Auditor processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-cred-map" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework Credential Mapper processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-encryption-service" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework Encryption Service processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-key-store" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework KeyStore processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-cert-path" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework CertPath processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-role-map" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework Role Mapping</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-e-engine" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework Entitlements Engine processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-jacc" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework JACC processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-jacc-non-policy" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework JACC nonPolicy processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-jacc-policy" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework JACC Policy processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-saml-lib" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework SAML library processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-saml-atn" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework SAML Provider atn processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-saml-cred-map" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework SAML Provider credential mapper processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-saml-service" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework SAML SSO profile services</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-saml2-lib" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework SAML2 library processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-saml2-atn" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework SAML2 Provider atn processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-saml2-cred-map" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework SAML2 Provider credential mapper processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-security-saml2-service" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Security Framework SAML2 SSO profile services</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jdbc-conn" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JDBC Connection setup/teardown processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jdbcsql" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JDBC SQL processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jdbcrmi" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JDBC RMI processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jdbc-driver-logging" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JDBC DriverLogging processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jdbc-internal" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JDBC Internal processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-messaging-bridge-startup" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Messaging Bridge start up processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-messaging-bridge-runtime" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Messaging Bridge runtime processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-messaging-bridge-runtime-verbose" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug of Messaging Bridge runtime processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-messaging-bridge-dump-to-log" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Not Used</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-messaging-bridge-dump-to-console" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Not Used</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-store-io-logical" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug persistent store high-level logical
 operations, such as read, write, delete, and update.
 Multiple logical operations may occur in a single physical
 operation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-store-io-logical-boot" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug persistent store logical boot
 operations (lists all recovered records).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-store-io-physical" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debugging for persistent store low-level physical
 operations which typically directly correspond to file or
 JDBC operations.
 Multiple logical operations may occur in a single physical
 operation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-store-io-physical-verbose" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug for persistent store low-level physical
 operations which typically directly correspond to file or
 JDBC operations.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-store-xa" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug persistent store resource
 manager transaction activity, includes tracing
 for the related operations of layered subsystems (such as JMS).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-store-xa-verbose" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug of persistent store resource
 manager transaction activity, includes tracing
 for the related operations of layered subsystems (such as JMS).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-store-admin" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug the persistent store's administration code. This
 will produce debug events when instances of the store are created and
 deleted, and when the server is booted.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="debug-xml-registry-debug-level" nillable="false">
            <xs:annotation>
              <xs:documentation>XML Registry debugging option: Debug levels</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="3"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="debug-xml-registry-debug-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>XML Registry debugging option: Debug name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-xml-registry-include-time" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>XML Registry debugging option: Debug IncludeTime</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-xml-registry-include-name" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>XML Registry debugging option: Debug IncludeName</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-xml-registry-include-class" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>XML Registry debugging option: Debug IncludeClass</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-xml-registry-include-location" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>XML Registry debugging option: Debug IncludeLocation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-xml-registry-use-short-class" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>XML Registry debugging option: Debug UseShortClass</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="debug-jaxp-debug-level" nillable="false">
            <xs:annotation>
              <xs:documentation>JAXP debugging option: Debug level</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="3"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="debug-jaxp-debug-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>JAXP debugging option: Debug name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jaxp-include-time" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>JAXP debugging option: Debug IncludeTime</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jaxp-include-name" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>JAXP debugging option: Debug IncludeName</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jaxp-include-class" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>JAXP debugging option: Debug IncludeClass</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jaxp-include-location" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>JAXP debugging option: Debug IncludeLocation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jaxp-use-short-class" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>JAXP debugging option: Debug UseShortClass</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="debug-xml-entity-cache-debug-level" nillable="false">
            <xs:annotation>
              <xs:documentation>XMLEntityCache debugging option: Debug level</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="3"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="debug-xml-entity-cache-debug-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>XMLEntityCache debugging option: Debug name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-xml-entity-cache-include-time" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>XMLEntityCache debugging option: Debug IncludeTime</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-xml-entity-cache-include-name" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>XMLEntityCache debugging option: Debug IncludeName</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-xml-entity-cache-include-class" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>XMLEntityCache debugging option: Debug IncludeClass</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-xml-entity-cache-include-location" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>XMLEntityCache debugging option: Debug IncludeLocation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-xml-entity-cache-use-short-class" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>XMLEntityCache debugging option: Debug UseShortClass</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-deploy" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug deploy command processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-deployment" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug deployment processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-deployment-service" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug deployment service processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-deployment-service-status-updates" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug deployment service status update processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-deployment-service-internal" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug internal deployment service processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-deployment-service-transport" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug deployment service transport processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-deployment-service-transport-http" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug deployment service HTTP transport processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="master-deployer" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Master Deployer processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="slave-deployer" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Slave Deployer processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="application-container" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Application Container deployment processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="class-finder" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug ClassFinder processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="classpath-servlet" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug ClassPathServlet processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="web-module" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WebModule processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="class-loader" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug ClassLoader processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="class-loader-verbose" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug of ClassLoader processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="classloader-web-app" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WebApp ClassLoader processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-bootstrap-servlet" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug the bootstrap servlet that runs
 on the Admin Server and is invoked over HTTP by a booting managed
 server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-file-distribution-servlet" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug the file distribution servlet that runs
 on the Admin Server and is invoked over HTTP by a booting managed
 server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-lifecycle-handlers" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic lifecycle handler processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-data-gathering" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug data gathering processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-instrumentation" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic instrumentation processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-instrumentation-weaving" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug instrumentation weaving</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-instrumentation-weaving-matches" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug instrumentation weaving for matches only</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-instrumentation-actions" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug instrumentation actions/monitors</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-instrumentation-events" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug instrumentation event records</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-instrumentation-config" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug instrumentation configuration processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-archive" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic archive processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-file-archive" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic file archive processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-wlstore-archive" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic wlstore archive processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-jdbc-archive" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic jdbc archive processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-archive-retirement" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic archive retirement processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostics-module" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic module processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostics-harvester" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic harvester processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostics-harvester-data" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug of diagnostic harvester processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostics-harvester-m-bean-plugin" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug MBean harvester processing.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostics-harvester-tree-bean-plugin" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug tree bean harvester processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-image" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic image processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-query" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic query processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-accessor" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic accessor processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-collections" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic collection processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-context" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic context processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-snmp-toolkit" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug the SNMP vendor toolkit implementation.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-snmp-agent" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug the SNMP agent framework.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-snmp-protocol-tcp" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug the SNMP TCP protocol handler.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-snmp-extension-provider" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> The debug attribute to enable or disable the SNMP Agent Extension
 Provider discovery and initialization. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-domain-log-handler" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Domain Log Handler processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-logging-configuration" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug log configuration processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-diagnostic-watch" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug diagnostic watch processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-pool-verbose" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug J2EE Resource Adapter pool management (size management) processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter XA general/top-level processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-rax-ain" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter XA incoming message processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-rax-aout" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter XA outgoing message processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-rax-awork" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter XA Work request processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-local-out" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter local tx outgoing message processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-lifecycle" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug ResourceAdapter Lifecycle processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-connector-service" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug connector service action processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-deployment" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter (un)deploy, security id settings</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-parsing" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter descriptor parsing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-security-ctx" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug setup of resource ref processing (container and application managed
 security set by calling application components)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-pooling" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter operations on a connection pool (proxy testing)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-connections" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter outbound connection operations (get, close, associate,
 disassociate, ping)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-conn-events" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter connection event processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-work" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter Work submission and cancel processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-work-events" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter work event processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ra-classloader" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Resource Adapter class loading</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-wan-replication-details" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug low-level wan replication processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-server-migration" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug low-level Server Migration processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-jmx" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMX processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-jmx-core" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug core JMX processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-jmx-runtime" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMX runtime service processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-jmx-domain" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMX domain service processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-jmx-edit" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMX edit service processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-jmx-compatibility" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JMX CompatibilityMBeanServer service processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-configuration-edit" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug management configuration edit processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-configuration-runtime" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug management configuration runtime processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-j2ee-management" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug J2EE management processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-iiop-naming" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug IIOP CosNaming processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-iiop-tunneling" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug IIOP tunnelling</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-consensus-leasing" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug cluster consensus lease processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-server-life-cycle" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Server ServerLifeCycle processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-wtc-config" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WTC configuration processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-wtct-dom-pdu" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WTC XATMI Message processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-wtcu-data" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WTC user data processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-wtc-gwt-ex" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WTC gwt execution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-wtc-jatmi-ex" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WTC jatmi execution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-wtc-corba-ex" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WTC corba execution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-wt-ct-bridge-ex" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WTC tBridge execution</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-meta-data" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA MetaData processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-enhance" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA post-compilation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-runtime" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA runtime diagnostics</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-query" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA Query processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-data-cache" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA data cache</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-tool" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA tools</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-manage" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA management and monitoring</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-profile" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA profiling</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-jdbc-sql" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA RDBMS SQL interaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-jdbc-jdbc" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA RDBMS JDBC interaction</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jpa-jdbc-schema" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JPA RDBMS schema manipulation</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-jmst3-server" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug DebugJMST3Server processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-descriptor" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug descriptor framework processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-server-start-statistics" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> If statistics about server start will be logged after the running message.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="kernel-debugType">
    <xs:annotation>
      <xs:documentation>Corresponds to KernelDebugMBean
 (Interface=weblogic.management.configuration.KernelDebugMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:debugType">
        <xs:sequence>
          <xs:element minOccurs="0" name="debug-abbreviation" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug abbreviations over JVM to JVM connections</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-connection" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug JVM to JVM connections</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-messaging" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug messages sent over JVM to JVM connections</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-routing" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug routing of messages over JVM to JVM connections</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-load-balancing" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug stub-level load-balancing processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-work-context" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Work context (out of band data propagation)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-fail-over" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug stub-level fail-over processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="force-gc-each-dgc-period" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Force VM garbage collection on each DGC interval</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="debug-dgc-enrollment" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug each DGC enrollment.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="log-dgc-statistics" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug DGC with Statistics</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-ssl" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug SSL processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-rc4" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug RC4 cipher processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-rsa" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug RSA security processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-muxer" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Muxer processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-muxer-detail" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Detailed debug for Muxer processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-muxer-timeout" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Muxer timeout processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-muxer-connection" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Muxer connection processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-muxer-exception" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug Muxer exception processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-iiop" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug IIOP processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-iiop-transport" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug IIOP message processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-iiop-marshal" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug buffer-level IIOP processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-iiop-security" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug IIOP security processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-iiopots" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug IIOP Object Transaction Service (OTS) processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-iiop-replacer" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug IIOP object replacement processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-iiop-connection" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug IIOP connection management processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-iiop-startup" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug IIOP startup processing</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="debug-self-tuning" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Debug WorkManager self-tuning processing</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="debugType">
    <xs:annotation>
      <xs:documentation>Corresponds to DebugMBean
 (Interface=weblogic.management.configuration.DebugMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="debug-scope" nillable="true" type="dom:debug-scopeType">
            <xs:annotation>
              <xs:documentation>Gets the configured DebugScopes for this debug bean.
 The debug scopes contain the enabled state for a scope
 (Interface=weblogic.management.configuration.DebugMBean Attribute=getDebugScopes)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="network-access-pointType">
    <xs:annotation>
      <xs:documentation>Corresponds to NetworkAccessPointMBean
 (Interface=weblogic.management.configuration.NetworkAccessPointMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="t3" minOccurs="0" name="protocol" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The protocol this network channel should use for
 connections.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="listen-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The IP address or DNS name this network channel uses to listen
 for incoming connections. A value of &lt;tt&gt;null&lt;/tt&gt; indicates that
 the network channel should obtain this value from the server's
 configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="public-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The IP address or DNS name representing the external identity of
 this network channel. A value of &lt;tt&gt;null&lt;/tt&gt; indicates that the
 network channel's Listen Address is also its external address. If
 the Listen Address is &lt;tt&gt;null,&lt;/tt&gt;the network channel obtains its
 external identity from the server's configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="listen-port" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The default TCP port this network channel uses to listen for
 regular (non-SSL) incoming connections. A value of &lt;tt&gt;-1&lt;/tt&gt;
 indicates that the network channel should obtain this value from
 the server's configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="public-port" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The externally published listen port for this network channel. A
 value of &lt;tt&gt;-1&lt;/tt&gt; indicates that the network channel's Listen
 Port is also its public listen port. If the Listen Port is
 &lt;tt&gt;-1,&lt;/tt&gt;the network channel obtains its public listen port from
 the server's configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="proxy-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The IP address or DNS name of the HTTP proxy to use for
 outbound connections on this channel. The HTTP proxy must
 support the CONNECT tunneling command.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="80" minOccurs="0" name="proxy-port" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The port of the HTTP proxy to use for outbound connections
 on this channel. The HTTP proxy must support the CONNECT
 tunneling command.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="http-enabled-for-this-protocol" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether HTTP traffic should be allowed over this
 network channel.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="accept-backlog" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of backlogged, new TCP connection requests that this
 network channel allows. A value of &lt;tt&gt;-1&lt;/tt&gt; indicates that the
 network channel obtains its backlog configuration from the server's
 configuration.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="max-backoff-between-failures" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum back off time between failures while accepting
 client connections. -1 implies that this value is inherited from
 the server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="login-timeout-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time that this network channel should wait for a
 connection before timing out. A value of &lt;code&gt;0&lt;/code&gt; disables
 network channel login timeout. A value of &lt;tt&gt;-1&lt;/tt&gt; indicates
 that the network channel obtains this timeout value from the
 server's configuration.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="100000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="tunneling-client-ping-secs" nillable="false">
            <xs:annotation>
              <xs:documentation>The interval (in seconds) at which this network channel should
 ping an HTTP-tunneled client to see if its still alive. A value of
 &lt;tt&gt;-1&lt;/tt&gt; indicates that the network channel obtains this
 interval from the ServerMBean. (Requires you to enable
 tunneling for the network channel.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="tunneling-client-timeout-secs" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time (in seconds) after which this network channel
 considers a missing HTTP-tunneled client to be dead. A value of
 &lt;tt&gt;-1&lt;/tt&gt; indicates that the network channel obtains this timeout
 value from the ServerMBean. (Requires you to enable
 tunneling for the network channel.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="tunneling-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether tunneling via HTTP should be enabled for this
 network channel. This value is not inherited from the server's
 configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="complete-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum amount of time this network channel waits for a
 complete message to be received. A value of &lt;code&gt;0&lt;/code&gt; disables
 network channel complete message timeout. A value of &lt;tt&gt;-1&lt;/tt&gt;
 indicates that the network channel obtains this timeout value from
 the ServerMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="timeout-connection-with-pending-responses" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Determines if connections with pending responses are allowed
 to timeout. It defaults to false. If set to true, the
 connection will be timed out for this channel if it exceeds the
 idleConnectionTimeout value.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="idle-connection-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum amount of time (in seconds) that a connection is
 allowed to be idle before it is closed by this network channel. A
 value of &lt;tt&gt;-1&lt;/tt&gt; indicates that the network channel obtains
 this timeout value from the ServerMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="connect-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time that this network channel should wait to
 establish an outbound socket connection before timing out. A
 value of &lt;code&gt;0&lt;/code&gt; disables network channel connect
 timeout.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="240"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="max-message-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum message size allowable in a message header.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="4096"/>
                <xs:maxInclusive value="100000000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="outbound-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether new server-to-server connections may
 consider this network channel when initiating a
 connection. This is only relevant if the connection needs to be
 bound to the network channel's listen address. This will only
 work for binary protocols that support both outbound and
 inbound traffic.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="50" minOccurs="0" name="channel-weight" nillable="false">
            <xs:annotation>
              <xs:documentation>A weight to give this channel when creating server-to-server
 connections.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="cluster-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The address this network channel uses to generate EJB handles
 and failover addresses for use in a cluster. This value is determined
 according to the following order of precedence:
 &lt;ol&gt;
 &lt;li&gt;If the cluster address is specified via the NAPMBean, then that value is used&lt;/li&gt;
 &lt;li&gt;If this value is not specified, the value of PublicAddress is used.
 &lt;li&gt;If PublicAddress is not set, this value is derive from the ClusterAddress attribute
 of the ClusterMbean.&lt;/li&gt;
 &lt;li&gt;If ClusterMbean.clusterAddress is not set, this value is derive from the listen address
 of the NAPMbean.&lt;/li&gt;
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this channel should be started.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="2147483647" minOccurs="0" name="max-connected-clients" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum number of clients that can be connected on this
 network channel.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="two-way-ssl-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this network channel uses two way SSL.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="channel-identity-customized" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Whether or not the channel's custom identity should be used.
 This setting only has an effect if the server is using a customized
 keystore. By default the channel's identity is inherited from the server's
 identity.
 (Interface=weblogic.management.configuration.NetworkAccessPointMBean Attribute=isChannelIdentityCustomized)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="custom-private-key-alias" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The string alias used to store and retrieve the channel's
 private key in the keystore. This private key is associated with
 the server's digital certificate. A value of &lt;tt&gt;null&lt;/tt&gt;
 indicates that the network channel uses the alias specified in the
 server's SSL configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="private-key-alias" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The string alias used to store and retrieve the channel's
 private key in the keystore. This private key is associated with
 the server's digital certificate. This value is derived from
 other settings on the channel and cannot be physically set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="private-key-pass-phrase" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The passphrase used to retrieve the server's private key from
 the keystore. This passphrase is assigned to the private key when
 it is generated. This value is derived from
 other settings on the channel and cannot be physically set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="custom-private-key-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.NetworkAccessPointMBean Attribute=getCustomPrivateKeyPassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="client-certificate-enforced" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether clients must present digital certificates from
 a trusted certificate authority to WebLogic Server on this
 channel.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="outbound-private-key-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies whether the identity specifed by {@link #getCustomPrivateKeyAlias}
 should be used for outbound SSL connections on this channel. In
 normal circumstances the outbound identity is determined by the
 caller's environment.
 (Interface=weblogic.management.configuration.NetworkAccessPointMBean Attribute=isOutboundPrivateKeyEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="use-fast-serialization" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies whether to use non-standard object serialization for
 performance. This option works in different ways for different
 protocols. In particular under IIOP this option uses Java
 serialization rather than RMI-IIOP serialization. In general
 using non-standard serialization is not suitable for interop
 scenarios and may imply some feature loss.
 (Interface=weblogic.management.configuration.NetworkAccessPointMBean Attribute=getUseFastSerialization)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="idle-iiop-connection-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds an IIOP connection is allowed to
 be idle before it is closed by the server. A value of &lt;tt&gt;-1&lt;/tt&gt;
 indicates that the network channel obtains this timeout value from
 the IIOPMBean or ServerMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="ssl-listen-port" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The SSL listen port for the channel. -1 implies that this value
 is inherited from the channel.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="external-dns-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The external DNSName for the current server, which will be sent
 with the session cookies and also with the dynamic server lists to
 the proxies. This will be required for the configurations in which
 you have firewall doing Network Address Translations A value of
 null indicates that this value is inherited from the server</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="login-timeout-millis-ssl" nillable="false">
            <xs:annotation>
              <xs:documentation>Duration allowed for an SSL login sequence. If the duration is
 exceeded, the login is timed out. A value of 0 disables the channel login timeout.
 Setting this to -1 implies that this value is inherited from the SSLMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="complete-t3-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete T3
 message to be received. This attribute helps guard against denial
 of service attacks in which a caller indicates that they will be
 sending a message of a certain size which they never finish
 sending. -1 implies that this value is inherited from the
 KernelMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="complete-http-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete HTTP
 message to be received. This attribute helps guard against denial
 of service attacks in which a caller indicates that they will be
 sending a message of a certain size which they never finish
 sending. -1 implies that this value is inherited from the
 KernelMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="complete-com-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete COM
 message to be received. This attribute helps guard against denial
 of service attacks in which a caller indicates that they will be
 sending a message of a certain size which they never finish
 sending. -1 implies that this value is inherited from the
 KernelMBean.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="complete-iiop-message-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of seconds spent waiting for a complete IIOP
 message to be received. This attribute helps guard against denial
 of service attacks in which a caller indicates that they will be
 sending a message of a certain size which they never finish
 sending. -1 implies that this value is inherited from the
 channel.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="480"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="custom-properties" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.NetworkAccessPointMBean Attribute=getCustomPropertiesAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="server-startType">
    <xs:annotation>
      <xs:documentation>Corresponds to ServerStartMBean
 (Interface=weblogic.management.configuration.ServerStartMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="java-vendor" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The Java Vendor value to use when starting this server
 For example, &lt;code&gt;BEA, Sun, HP etc &lt;/code&gt; </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="java-home" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The Java home directory (path on the machine running Node
 Manager) to use when starting this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="class-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The classpath (path on the machine running Node Manager) to use
 when starting this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="bea-home" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The BEA home directory (path on the machine running Node
 Manager) to use when starting this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="root-directory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The directory that this server uses as its root directory. This
 directory must be on the computer that hosts the Node Manager. If
 you do not specify a Root Directory value, the domain directory
 is used by default.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="security-policy-file" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The security policy file (directory and filename on the machine
 running Node Manager) to use when starting this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="arguments" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The arguments to use when starting this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="max-restart-count" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>This value is not used by any process.  The attributes on this mbean
 should be used for properties of the server itself, and this refers to
 a nodemanager property.  ServerMBean.restartMax should be used instead
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The user name to use when booting this server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ServerStartMBean Attribute=getPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jta-migratable-targetType">
    <xs:annotation>
      <xs:documentation>Corresponds to JTAMigratableTargetMBean
 (Interface=weblogic.management.configuration.JTAMigratableTargetMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:migratable-targetType">
        <xs:sequence>
          <xs:element default="false" minOccurs="0" name="strict-ownership-check" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether continue to boot if cannot find the current owner of TRS to do 
 failback. This attribute is only meaningful for servers in cluster. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="migratable-targetType">
    <xs:annotation>
      <xs:documentation>Corresponds to MigratableTargetMBean
 (Interface=weblogic.management.configuration.MigratableTargetMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:singleton-service-baseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="constrained-candidate-server" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.MigratableTargetMBean Attribute=getConstrainedCandidateServersAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cluster" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.MigratableTargetMBean Attribute=getClusterAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="destination-server" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.MigratableTargetMBean Attribute=getDestinationServerAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="migration-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>Defines the type of migration policy to use for the services hosted by this migratable target. 
 Valid options are:</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="manual"/>
                <xs:enumeration value="exactly-once"/>
                <xs:enumeration value="failure-recovery"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="pre-script" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Specifies the path to the pre-migration script to run before 
 a migratable target is actually activated. The script &lt;i&gt;must&lt;/i&gt; be in the 
 &lt;code&gt;&lt;i&gt;MIDDLEWARE_HOME&lt;/i&gt;/user_projects/domains/&lt;i&gt;mydomain&lt;/i&gt;/bin/service_migration&lt;/code&gt; directory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="post-script" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Specifies the path to the post-migration script to run after a migratable target is fully
 deactivated. The script &lt;i&gt;must&lt;/i&gt; be in the 
 &lt;code&gt;&lt;i&gt;MIDDLEWARE_HOME&lt;/i&gt;/user_projects/domains/&lt;i&gt;mydomain&lt;/i&gt;/bin/service_migration&lt;/code&gt; directory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="post-script-failure-fatal" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether or not a failure during execution of the post-deactivation script is fatal to the migration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="non-local-post-allowed" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether or not the post-deactivation script is allowed to run on a different machine.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="restart-on-failure" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether or not a failed service will first be deactivated and reactivated in place,
 instead of being migrated.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="seconds-between-restarts" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Specifies how many seconds to wait in between attempts to restart the failed service.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="6" minOccurs="0" name="number-of-restart-attempts" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Specifies how many restart attempts to make before migrating the failed service.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="singleton-service-baseType">
    <xs:annotation>
      <xs:documentation>Corresponds to SingletonServiceBaseMBean
 (Interface=weblogic.management.configuration.SingletonServiceBaseMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="hosting-server" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SingletonServiceBaseMBean Attribute=getHostingServerAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="user-preferred-server" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SingletonServiceBaseMBean Attribute=getUserPreferredServerAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="2" minOccurs="0" name="additional-migration-attempts" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>A migratable service could fail to come up on every possible
 configured server. This attribute controls how many further
 attempts, after the service has failed on every server at least
 once, should be tried. Note that each attempt specified here
 indicates another full circut of migrations amongst all the
 configured servers. So for a 3-server cluster, and a value of 2, a
 total of 4 additional migrations will be attempted. (the original
 server is never a valid destination)
 (Interface=weblogic.management.configuration.SingletonServiceBaseMBean Attribute=getAdditionalMigrationAttempts)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="300000" minOccurs="0" name="millis-to-sleep-between-attempts" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Controls how long of a pause there should be between the
 migration attempts described in
 getAdditionalMigrationAttempts(). Note that this delay only
 happens when the service has failed to come up on every
 server. It does not cause any sort of delay between attempts to
 migrate otherwise.
 (Interface=weblogic.management.configuration.SingletonServiceBaseMBean Attribute=getMillisToSleepBetweenAttempts)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="default-file-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to DefaultFileStoreMBean
 (Interface=weblogic.management.configuration.DefaultFileStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:generic-file-storeType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="single-sign-on-servicesType">
    <xs:annotation>
      <xs:documentation>Corresponds to SingleSignOnServicesMBean
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="contact-person-given-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The contact person given (first) name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="contact-person-sur-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The contact person surname (last name).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="contact-person-type" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The contact person type.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="contact-person-company" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The contact person's company name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="contact-person-telephone-number" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The contact person's telephone number.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="contact-person-email-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The contact person's e-mail address.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="organization-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The organization name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="organization-url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The organization URL.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="published-site-url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The published site URL.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="entity-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The string that uniquely identifies the local site.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="error-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Gets the Error Path URL.  Partner sites may redirect users
 to this URL for more information if SSO fails.
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=getErrorPath)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="service-provider-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the local site is enabled for the Service Provider 
 role.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The Service Provider's default URL.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="service-provider-artifact-binding-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Artifact binding is enabled for the Service Provider.
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=isServiceProviderArtifactBindingEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="service-provider-post-binding-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the POST binding is enabled for the Service Provider.
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=isServiceProviderPOSTBindingEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="service-provider-preferred-binding" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the preferred binding type for endpoints of Service Provider services.
 Must be set to "None", "POST", or "Artifact".
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=getServiceProviderPreferredBinding)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="None"/>
                <xs:enumeration value="HTTP/POST"/>
                <xs:enumeration value="HTTP/Artifact"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="sign-authn-requests" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether authentication requests must be signed.  If set, all outgoing
 authentication requests are signed.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="want-assertions-signed" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies whether incoming SAML 2.0 assertions must be signed.
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=isWantAssertionsSigned)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sso-signing-key-alias" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The keystore alias for the key to be used when signing documents.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sso-signing-key-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=getSSOSigningKeyPassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="force-authn" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Identity Provider must authenticate users directly 
 and not use a previous security context. The default is &lt;code&gt;false&lt;/code&gt;. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="passive" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Determines whether the Identity Provider and the user must not
 take control of the user interface from the requester and interact with the user in a 
 noticeable fashion. The default setting is &lt;code&gt;false&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="identity-provider-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the local site is enabled for the Identity Provider 
 role.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="identity-provider-artifact-binding-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies whether the Artifact binding is enabled for the Identity Provider.
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=isIdentityProviderArtifactBindingEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="identity-provider-post-binding-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies whether the POST binding is enabled for the Identity Provider.
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=isIdentityProviderPOSTBindingEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="identity-provider-redirect-binding-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies whether the Redirect binding is enabled for the Identity Provider.
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=isIdentityProviderRedirectBindingEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="identity-provider-preferred-binding" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the preferred binding type for endpoints of the Identity Provider services.
 Must be set to &lt;code&gt;None&lt;/code&gt;, &lt;code&gt;HTTP/POST&lt;/code&gt;, &lt;code&gt;HTTP/Artifact&lt;/code&gt;, or &lt;code&gt;HTTP/Redirect&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="None"/>
                <xs:enumeration value="HTTP/POST"/>
                <xs:enumeration value="HTTP/Artifact"/>
                <xs:enumeration value="HTTP/Redirect"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="/saml2/idp/login" minOccurs="0" name="login-url" nillable="false">
            <xs:annotation>
              <xs:documentation>The URL of the login form web application to which unauthenticated requests are directed.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:minLength value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="login-return-query-parameter" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the query parameter to be used for conveying the login-return URL to the login form web application.
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=getLoginReturnQueryParameter)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="want-authn-requests-signed" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether incoming authentication requests must be signed. If set, authentication requests that
 are not signed are not accepted.
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=isWantAuthnRequestsSigned)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="recipient-check-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the recipient/destination check is enabled. When true, the recipient of
  the SAML Request/Response must match the URL in the HTTP Request.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="post-one-use-check-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the POST one-use check is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transport-layer-security-key-alias" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The string alias used to store and retrieve the server's private key, which is used to
 establish outgoing TLS/SSL connections.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transport-layer-security-key-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=getTransportLayerSecurityKeyPassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="basic-auth-username" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The username that is used to assign Basic authentication credentials to outgoing HTTPS connections.
 (Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=getBasicAuthUsername)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="basic-auth-password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SingleSignOnServicesMBean Attribute=getBasicAuthPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="want-artifact-requests-signed" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether incoming artifact requests must be signed. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="want-transport-layer-security-client-authentication" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether TLS/SSL client authentication is required.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="want-basic-auth-client-authentication" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether Basic Authentication client authentication is required.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="10000" minOccurs="0" name="authn-request-max-cache-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum size of the authentication request cache.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="300" minOccurs="0" name="authn-request-timeout" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum timeout (in seconds) of &amp;lt;AuthnRequest&amp;gt; documents stored in the local cache.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="10000" minOccurs="0" name="artifact-max-cache-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum size of the artifact cache.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="300" minOccurs="0" name="artifact-timeout" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum timeout (in seconds) of artifacts stored in the local cache.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="replicated-cache-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the persistent cache (LDAP or RDBMS) is used for
 storing SAML 2.0 artifacts and authentication requests.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-serviceType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServiceMBean
 (Interface=weblogic.management.configuration.WebServiceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="weblogic.jms.XAConnectionFactory" minOccurs="0" name="jms-connection-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>For use only with the JAX-RPC stack. For JAX-WS, use
 WebServiceBufferingMBean instead.
 &lt;p&gt;
 (Interface=weblogic.management.configuration.WebServiceMBean Attribute=getJmsConnectionFactory)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="weblogic.wsee.DefaultQueue" minOccurs="0" name="messaging-queue" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>For use only with the JAX-RPC stack. For JAX-WS, use
 WebServiceBufferingMBean instead.
 &lt;p&gt;
 (Interface=weblogic.management.configuration.WebServiceMBean Attribute=getMessagingQueue)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="messaging-queue-mdb-run-as-principal-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>For use only with the JAX-RPC stack. For JAX-WS, use
 WebServiceBufferingMBean instead.
 &lt;p&gt;
 (Interface=weblogic.management.configuration.WebServiceMBean Attribute=getMessagingQueueMDBRunAsPrincipalName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="weblogic.wsee.DefaultCallbackQueue" minOccurs="0" name="callback-queue" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>For use only with the JAX-RPC stack. For JAX-WS, use
 WebServiceBufferingMBean instead.
 &lt;p&gt;
 (Interface=weblogic.management.configuration.WebServiceMBean Attribute=getCallbackQueue)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="callback-queue-mdb-run-as-principal-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>For use only with the JAX-RPC stack. For JAX-WS, use
 WebServiceBufferingMBean instead.
 &lt;p&gt;
 (Interface=weblogic.management.configuration.WebServiceMBean Attribute=getCallbackQueueMDBRunAsPrincipalName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="web-service-persistence" nillable="true" type="dom:web-service-persistenceType">
            <xs:annotation>
              <xs:documentation>Get persistence config for this server.
 &lt;p&gt;
 NOTE: Not used by the JAX-RPC stack.
 &lt;/p&gt;
 (Interface=weblogic.management.configuration.WebServiceMBean Attribute=getWebServicePersistence)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="web-service-buffering" nillable="true" type="dom:web-service-bufferingType">
            <xs:annotation>
              <xs:documentation>Get buffering config for this server.
 &lt;p&gt;
 NOTE: Not used by the JAX-RPC stack.
 &lt;/p&gt;
 (Interface=weblogic.management.configuration.WebServiceMBean Attribute=getWebServiceBuffering)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="web-service-reliability" nillable="true" type="dom:web-service-reliabilityType">
            <xs:annotation>
              <xs:documentation>Get reliability config for this server.
 &lt;p&gt;
 NOTE: Not used by the JAX-RPC stack.
 &lt;/p&gt;
 (Interface=weblogic.management.configuration.WebServiceMBean Attribute=getWebServiceReliability)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-service-persistenceType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServicePersistenceMBean
 (Interface=weblogic.management.configuration.WebServicePersistenceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="WseeStore" minOccurs="0" name="default-logical-store-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Get the name of the logical store to use, by default, for all
 web services persistent state in this server.
 (Interface=weblogic.management.configuration.WebServicePersistenceMBean Attribute=getDefaultLogicalStoreName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="web-service-logical-store" nillable="true" type="dom:web-service-logical-storeType">
            <xs:annotation>
              <xs:documentation>Get an array of all defined logical stores for this VM (non-WLS).
 (Interface=weblogic.management.configuration.WebServicePersistenceMBean Attribute=getWebServiceLogicalStores)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="web-service-physical-store" nillable="true" type="dom:web-service-physical-storeType">
            <xs:annotation>
              <xs:documentation>Get an array of all defined physical stores for this VM (non-WLS).
 (Interface=weblogic.management.configuration.WebServicePersistenceMBean Attribute=getWebServicePhysicalStores)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-service-logical-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServiceLogicalStoreMBean
 (Interface=weblogic.management.configuration.WebServiceLogicalStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="persistence-strategy" nillable="true">
            <xs:annotation>
              <xs:documentation>Get the persistence strategy in use by this logical store. Any physical
 store configured for use with this logical store should support this
 strategy.
 (Interface=weblogic.management.configuration.WebServiceLogicalStoreMBean Attribute=getPersistenceStrategy)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="LOCAL_ACCESS_ONLY"/>
                <xs:enumeration value="IN_MEMORY"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="PT10M" minOccurs="0" name="cleaner-interval" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Get the interval at which the persistent store will be cleaned
 (Interface=weblogic.management.configuration.WebServiceLogicalStoreMBean Attribute=getCleanerInterval)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="P1D" minOccurs="0" name="default-maximum-object-lifetime" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Get the default max time an object can remain in the store. This can be
 overridden on individual objects placed in the store (internally, but not via
 this API).
 (Interface=weblogic.management.configuration.WebServiceLogicalStoreMBean Attribute=getDefaultMaximumObjectLifetime)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="request-buffering-queue-jndi-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Get the JNDI name of the buffering queue that web services should use.
 (Both for buffering and to
 find the physical store for this logical store). Defaults to "" to indicate
 the PhysicalStoreName property should be used.
 &lt;p&gt;
 This property is ignored if persistence strategy is IN_MEMORY.
 (Interface=weblogic.management.configuration.WebServiceLogicalStoreMBean Attribute=getRequestBufferingQueueJndiName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="response-buffering-queue-jndi-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Get the JNDI name of the response buffering queue that web services should
 use. If this is null, the request buffering queue is used.
 (Interface=weblogic.management.configuration.WebServiceLogicalStoreMBean Attribute=getResponseBufferingQueueJndiName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="physical-store-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Get the name of the physical store to be used by this logical store. This
 property is recommended for use only when running off server or in other
 cases where a buffering queue JNDI name cannot be set via
 setBufferingQueueJndiName. If a buffering queue JNDI name is set to a
 non-null/non-empty value, this property is ignored. Defaults to "" to
 indicate the default WLS file store should be used.
 &lt;p&gt;
 This property is ignored if persistence strategy is IN_MEMORY.
 (Interface=weblogic.management.configuration.WebServiceLogicalStoreMBean Attribute=getPhysicalStoreName)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-service-physical-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServicePhysicalStoreMBean
 (Interface=weblogic.management.configuration.WebServicePhysicalStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="store-type" nillable="true">
            <xs:annotation>
              <xs:documentation>Get the type of this physical store.
 (Interface=weblogic.management.configuration.WebServicePhysicalStoreMBean Attribute=getStoreType)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="FILE"/>
                <xs:enumeration value="JDBC"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="location" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>For file stores, specifies the directory that will hold all files
 related to the store. The actual file names are controlled internally by
 the file store implementation. For other types of stores, this location may
 be a URL or URI, or other description string.
 (Interface=weblogic.management.configuration.WebServicePhysicalStoreMBean Attribute=getLocation)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="synchronous-write-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>Specifies the algorithm used when performing synchronous writes to the
 physical store.
 (Interface=weblogic.management.configuration.WebServicePhysicalStoreMBean Attribute=getSynchronousWritePolicy)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="DISABLED"/>
                <xs:enumeration value="CACHE_FLUSH"/>
                <xs:enumeration value="DIRECT_WRITE"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-service-reliabilityType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServiceReliabilityMBean
 (Interface=weblogic.management.configuration.WebServiceReliabilityMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="P0DT3S" minOccurs="0" name="base-retransmission-interval" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The interval of time that must pass before a message will be retransmitted to the
 RM destination (in the event a prior transmission failed). String value in
 ‘Duration’ format. Defaults to ‘P0DT3S’ (3 seconds). Set at sequence creation
 time, and cannot be reset.
 (Interface=weblogic.management.configuration.WebServiceReliabilityMBean Attribute=getBaseRetransmissionInterval)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="retransmission-exponential-backoff" nillable="true" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A boolean flag indicating that the retransmission interval will be adjusted using
 the exponential backoff algorithm ([Tanenbaum]). Defaults to false. Set at
 sequence creation time, and cannot be reset.
 (Interface=weblogic.management.configuration.WebServiceReliabilityMBean Attribute=isRetransmissionExponentialBackoff)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="non-buffered-source" nillable="true" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A boolean flag indicating that RM sources, by default, will send
 non-buffered. Defaults to false. Note, changes to this default will
 only be picked up by new reliable sequences. Existing reliable sequences
 have their persistence handling set at creation time and these values will
 not change.
 (Interface=weblogic.management.configuration.WebServiceReliabilityMBean Attribute=isNonBufferedSource)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="P0DT0.2S" minOccurs="0" name="acknowledgement-interval" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The maximum time a pending acknowledgement (set after the destination accepts a message) can
 wait before being delivered back to the RM source. String value in ‘Duration’
 format. Defaults to ‘P0DT0.2S (200 milliseconds). Set at sequence creation time,
 and cannot be reset.
 (Interface=weblogic.management.configuration.WebServiceReliabilityMBean Attribute=getAcknowledgementInterval)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="P0DT600S" minOccurs="0" name="inactivity-timeout" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>If during this duration, an endpoint (RM source or RM destination) has received
 no application or control messages, the endpoint MAY consider the RM Sequence to
 have been terminated due to inactivity. String value in ‘Duration’ format.
 Defaults to ‘P0DT600S’ (600 seconds). Implementations of RM source and RM
 destination are free to manage resources associated with the sequence as they
 please, but in general, there are no guarantees that the sequence will be useable
 by either party after the inactivity timeout expires. Set at sequence creation
 time, and cannot be reset.
 (Interface=weblogic.management.configuration.WebServiceReliabilityMBean Attribute=getInactivityTimeout)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="P1D" minOccurs="0" name="sequence-expiration" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>This is the maximum lifetime of a sequence. If this limit is reached before the
 sequence naturally completes, it will be forcibly terminated.
 String value in ‘Duration’ format. Defaults to ‘P1D’ (1 day). Set at sequence
 creation time, and cannot be reset.
 (Interface=weblogic.management.configuration.WebServiceReliabilityMBean Attribute=getSequenceExpiration)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="non-buffered-destination" nillable="true" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>A boolean flag indicating that RM destinations, by default, will receive
 non-buffered. Defaults to false. Note, changes to this default will
 only be picked up by new reliable sequences. Existing reliable sequences
 have their persistence handling set at creation time and these values will
 not change.
 (Interface=weblogic.management.configuration.WebServiceReliabilityMBean Attribute=isNonBufferedDestination)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="clusterType">
    <xs:annotation>
      <xs:documentation>Corresponds to ClusterMBean
 (Interface=weblogic.management.configuration.ClusterMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:targetType">
        <xs:sequence>
          <xs:element minOccurs="0" name="cluster-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The address that forms a portion of the URL a client uses to
 connect to this cluster, and that is used for generating EJB
 handles and entity EJB failover addresses. (This address may be
 either a DNS host name that maps to multiple IP addresses or a
 comma-separated list of single address host names or IP
 addresses.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="239.192.0.0" minOccurs="0" name="multicast-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The multicast address used by cluster members to communicate
 with each other.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="64" minOccurs="0" name="multicast-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The multicast socket send/receive buffer size (at least 64
 kilobytes).</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="64"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="7001" minOccurs="0" name="multicast-port" nillable="false">
            <xs:annotation>
              <xs:documentation>The multicast port (between 1 and 65535) used by cluster members
 to communicate with each other.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="multicast-ttl" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of network hops (between 1 and 255) that a cluster
 multicast message is allowed to travel.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="255"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="3" minOccurs="0" name="multicast-send-delay" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time (between 0 and 250 milliseconds) to delay
 sending message fragments over multicast in order to avoid OS-level
 buffer overflow.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="250"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="default-load-algorithm" nillable="true">
            <xs:annotation>
              <xs:documentation>The algorithm to be used for load-balancing between replicated
 services if none is specified for a particular service. The
 &lt;tt&gt;round-robin&lt;/tt&gt; algorithm cycles through a list of WebLogic
 Server instances in order. &lt;tt&gt;Weight-based&lt;/tt&gt; load balancing
 improves on the round-robin algorithm by taking into account a
 pre-assigned weight for each server. In &lt;tt&gt;random&lt;/tt&gt; load
 balancing, requests are routed to servers at random.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="round-robin"/>
                <xs:enumeration value="weight-based"/>
                <xs:enumeration value="random"/>
                <xs:enumeration value="round-robin-affinity"/>
                <xs:enumeration value="weight-based-affinity"/>
                <xs:enumeration value="random-affinity"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="cluster-messaging-mode" nillable="true">
            <xs:annotation>
              <xs:documentation>Specifies the messaging type used in the cluster.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="multicast"/>
                <xs:enumeration value="unicast"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="cluster-broadcast-channel" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Specifies the channel used to handle communications within a cluster. If no channel is specified
 the default channel is used.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="180" minOccurs="0" name="service-age-threshold-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds (between 0 and 65534) by which the age of
 two conflicting services must differ before one is considered older
 than the other.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="client-cert-proxy-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether to honor the WL-Proxy-Client-Cert header coming
 with the request or not. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="weblogic-plugin-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the proprietary &lt;tt&gt;WL-Proxy-Client-IP&lt;/tt&gt;
 header should be used. (This needed only when WebLogic plugins are
 configured.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="member-warmup-timeout-seconds" nillable="false">
            <xs:annotation>
              <xs:documentation>Maximum number of seconds that a cluster member will wait to
 discover and synchronize with other servers in the cluster.
 Normally, the member will be able to sync in 30 seconds. If the
 value of this attribute is higher, that does not necessarily mean
 that it will take longer for the member to warmup. Instead it
 defines an upper bound on the time that a server will wait to sync
 with the servers that it has discoverred. If the value is set 0,
 servers will not attempt to discover other running server in the cluster
 during server initialization</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="http-trace-support-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> Returns the value of HttpTraceSupportEnabled. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="frontend-host" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the host to which all redirected URLs will be
 sent.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="frontend-http-port" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The name of the HTTP port to which all redirected URLs will be
 sent.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="frontend-https-port" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The name of the secure HTTP port to which all redirected URLs
 will be sent.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3" minOccurs="0" name="idle-periods-until-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>Maximum number of periods that a cluster member will wait before
 timing out a member of a cluster.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="3"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="remote-cluster-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Set the foreign cluster. Cluster infrastructure uses this
 address to connect to foreign cluster for HTTP Session WAN/MAN
 failover.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="WLS_WAN_PERSISTENCE_TABLE" minOccurs="0" name="wan-session-persistence-table-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Return the name of the table to be used for WAN session persistence.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getWANSessionPersistenceTableName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="ReplicationChannel" minOccurs="0" name="replication-channel" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The channel name to be used for replication traffic. Cluster
 infrastructure uses this channel to send updates for HTTP
 sessions and stateful session beans. If none is set then the
 default channel will be used.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="30000" minOccurs="0" name="inter-cluster-comm-link-health-check-interval" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>If the cluster link between two clusters goes down, a trigger
 will run to periodically to see if the link is restored. The
 duration is specified in milliseconds.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="data-source-for-session-persistence" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ClusterMBean Attribute=getDataSourceForSessionPersistenceAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="data-source-for-job-scheduler" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ClusterMBean Attribute=getDataSourceForJobSchedulerAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="weblogic_timers" minOccurs="0" name="job-scheduler-table-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The table name to use for storing timers active with the
 job scheduler</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="persist-sessions-on-shutdown" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>When shutting down servers, sessions are not updated. If the
 primary and secondary servers of a session are shut down with no
 session updates, the session will be lost. Turning on
 PersistSessionsOnShutdown will save any active sessions to the
 database specified in {@link
 ClusterMBean#getDataSourceForSessionPersistence()} when a server
 is shutdown. The sessions will not be written at any other
 time. (For example, they are not saved via this mechanism if
 there is a server crash.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="async-session-queue-timeout" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Interval in seconds until the producer thread will wait for the
 AsyncSessionQueue to become unblocked.  Should be similar to the
 RequestTimeOut as that will determine the longest that the queue should
 remain full.&lt;p&gt;
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getAsyncSessionQueueTimeout)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="greedy-session-flush-interval" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Interval in seconds until HTTP Sessions are periodically flushed to
 secondary server.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getGreedySessionFlushInterval)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="180" minOccurs="0" name="session-flush-interval" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Interval in seconds until HTTP Sessions are periodically
 flushed to the backup cluster to dump session state on disk.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="100" minOccurs="0" name="session-flush-threshold" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>When number of sessions to be flushed reaches this threshold
 limit, sessions will be flushed to the backup cluster before the
 flush interval. This helps the server to flush sessions
 faster under load.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="candidate-machines-for-migratable-server" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ClusterMBean Attribute=getCandidateMachinesForMigratableServersAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="data-source-for-automatic-migration" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ClusterMBean Attribute=getDataSourceForAutomaticMigrationAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="10000" minOccurs="0" name="health-check-interval-millis" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Interval in milliseconds at which Migratable Servers and
 Cluster Masters prove their liveness via the database.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3" minOccurs="0" name="health-check-periods-until-fencing" nillable="false">
            <xs:annotation>
              <xs:documentation>Maximum number of periods that a cluster member will wait before
 timing out a Cluster Master and also the maximum number of periods
 the Cluster Master will wait before timing out a Migratable Server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="2"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="30000" minOccurs="0" name="fencing-grace-period-millis" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>During automatic migration, if the Cluster Master determines a
 server to be dead, it waits for this period of time (in milliseconds)
 before the Cluster Master migrates the service to another server in the
 cluster.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="singleton-sql-query-helper" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Singleton Services uses certain SQL commands to talk to the
 database. By default, the commands are obtained from a
 WebLogic-supplied implementation of
 weblogic.cluster.singleton.QueryHelper. If the database is not
 suported, or the SQL needs to be more optimized or altered for a
 particular use case, one can change the class used by setting
 this variable. The classname provided will be loaded at boot
 time, and used to execute the various SQL queries.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3" minOccurs="0" name="number-of-servers-in-cluster-address" nillable="false">
            <xs:annotation>
              <xs:documentation>Number of servers to be listed from this cluster when generating
 a cluster address automatically. This setting has no effect if
 Cluster Address is explicitly set.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getNumberOfServersInClusterAddress)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="cluster-type" nillable="true">
            <xs:annotation>
              <xs:documentation>Optimizes cross-cluster replication for the type of network
 that servers in the clusters use for administrative communication.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="none"/>
                <xs:enumeration value="wan"/>
                <xs:enumeration value="man"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="multicast-data-encryption" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Enables multicast data to be incrypted. Only the multicast data is encrypted.
 Multicast header information is not encrypted.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getMulticastDataEncryption)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="ACTIVE" minOccurs="0" name="auto-migration-table-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Return the name of the table to be used for server migration.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getAutoMigrationTableName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3" minOccurs="0" name="additional-auto-migration-attempts" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>A migratable server could fail to come up on every possible
 configured machine. This attribute controls how many further
 attempts, after the first one, should be tried.

 Note that each attempt specified here indicates another full
 circuit of migrations amongst all the configured machines. So for
 a 3-server cluster, and the default value of 3, a total of 9
 migrations will be attempted.

 If it is set to -1, migrations will go on forever until the
 server starts.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getAdditionalAutoMigrationAttempts)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="180000" minOccurs="0" name="millis-to-sleep-between-auto-migration-attempts" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>Controls how long of a pause there should be between the
 migration attempts described in
 getAdditionalAutoMigrationAttempts(). Note that this delay only
 happens when the server has failed to come up on every machine.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getMillisToSleepBetweenAutoMigrationAttempts)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="migration-basis" nillable="true">
            <xs:annotation>
              <xs:documentation>Controls the mechanism used for server and service migration.
 &lt;ul&gt;
 &lt;li&gt;&lt;b&gt;Database&lt;/b&gt; -- Requires the availability of a high-availability database, such as Oracle RAC, 
 to store leasing information.
 &lt;li&gt;&lt;b&gt;Consensus&lt;/b&gt; -- Stores the leasing information in-memory within a cluster member. This option 
 requires Node Manager to be configured and running.
 &lt;/ul&gt;   
 &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; Within a WebLogic Server installation, you can only use one type of leasing. 
 Although it is possible to implement multiple features that use leasing within your environment, 
 each must use the same kind of leasing.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getMigrationBasis)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="database"/>
                <xs:enumeration value="consensus"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="consensus-participants" nillable="false">
            <xs:annotation>
              <xs:documentation>Controls the number of cluster participants in determining consensus.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getConsensusParticipants)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65536"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="replication-timeout-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates if timeout should be applied to session replication calls.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=isReplicationTimeoutEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="overload-protection" nillable="true" type="dom:overload-protectionType">
            <xs:annotation>
              <xs:documentation>Get attributes related to server overload protection. The default values
 for all cluster members are set here. Individual servers can override them
 as needed.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getOverloadProtection)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="database-less-leasing-basis" nillable="true" type="dom:database-less-leasing-basisType">
            <xs:annotation>
              <xs:documentation>Get attributes associated with database less leasing basis used for
 server migration and singleton services.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getDatabaseLessLeasingBasis)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3" minOccurs="0" name="http-ping-retry-count" nillable="false">
            <xs:annotation>
              <xs:documentation>Get the number of HTTP pings to execute before declaring a server
 unreachable. This comes into effect only when MaxServerCountForHTTPPing
 is &gt; 0.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getHTTPPingRetryCount)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="max-server-count-for-http-ping" nillable="false">
            <xs:annotation>
              <xs:documentation>Get the maximum number of servers that can be pinged via HTTP when
 the local server has lost multicast heartbeats from remote members. By
 default the server is taken out of the cluster when 3 consecutive
 heartbeats are lost. With this value &gt; 0, the server attempts to ping the
 remote server point-to-point before declaring it unreachable. The ping is
 considered successful only when the cluster is in a stable state which
 means that the servers have already exchanged annoucements and the data
 on multicast is primarily liveliness heartbeat.
 &lt;p&gt;
 NOTE: This mechanism is useful only as a substitute for multicast heartbeats.
 If subsystems rely on sending data over multicast then they will continue to
 fail. If an application relies on WebLogic features that use multicast for
 sending and receiving data over multicast, this option is not useful. It is
 useful for HTTP session replication based applications where replication
 updates are sent point-to-point and multicast is only used to determine
 liveliness.
 &lt;/p&gt;
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=getMaxServerCountForHttpPing)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="secure-replication-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Servers in a cluster replicate session data. If a replication
 channel is defined then the session data will be sent using the replication
 channel protocol and secured replication settings will be ignored.
 If no replication channel is defined and secured replication is
 enabled then session data for in-memory replication will be sent over SSL
 using the default secured channel. However, this added security for replication
 traffic comes with a significant cluster performance degradation. It should
 only be enabled if security is of greater concern than performance
 degradation.
 (Interface=weblogic.management.configuration.ClusterMBean Attribute=isSecureReplicationEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3000" minOccurs="0" name="unicast-discovery-period-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>The timer period that determines how  often other members in the
 cluster are discovered in unicast messaging scheme. This is not applicable
 to multicast mode. It applies only to unicast mode.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1000"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="targetType">
    <xs:annotation>
      <xs:documentation>Corresponds to TargetMBean
 (Interface=weblogic.management.configuration.TargetMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="database-less-leasing-basisType">
    <xs:annotation>
      <xs:documentation>Corresponds to DatabaseLessLeasingBasisMBean
 (Interface=weblogic.management.configuration.DatabaseLessLeasingBasisMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="30" minOccurs="0" name="member-discovery-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>Gets the MemberDiscoveryTimeout value. This value defines the amount of
 time a server waits during or after startup to discover members that
 belong to the same cluster. This information is used to join or form a
 new cluster.
 (Interface=weblogic.management.configuration.DatabaseLessLeasingBasisMBean Attribute=getMemberDiscoveryTimeout)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="10"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="leader-heartbeat-period" nillable="false">
            <xs:annotation>
              <xs:documentation>Gets the LeaderHeartbeatPeriod value. The cluster leader heartbeats a
 special leader heartbeat every period seconds to publish group view
 version and other cluster information. Members look at this heartbeat
 and perform any sync up operations if required.
 (Interface=weblogic.management.configuration.DatabaseLessLeasingBasisMBean Attribute=getLeaderHeartbeatPeriod)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5000" minOccurs="0" name="message-delivery-timeout" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Gets the message delivery timeout value. This is the amount of time a 
 server waits to get a response from the remote peer before taking recovery
 actions.
 (Interface=weblogic.management.configuration.DatabaseLessLeasingBasisMBean Attribute=getMessageDeliveryTimeout)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="fence-timeout" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The timeout to wait and retry getting the server state when the NodeManager
 is unreachable. We try once more after waiting for the fence timeout
 period to make sure that the machine is really unavailable as opposed to
 heavy disk swapping.
 (Interface=weblogic.management.configuration.DatabaseLessLeasingBasisMBean Attribute=getFenceTimeout)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="periodic-srm-check-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the cluster leader needs to periodically check if
 it is still in the right network partition using NodeManager state query.
 By default the cluster leader or the seniormost member ensures that it
 is in the right partition by periodically checking with all NodeManagers.
 This is used to cover a case where the cluster leader was elected with most
 of the servers shutdown but subsequently there is a network partition
 with the leader in the minority partition. This is just done on the
 cluster leader instance and not on other instances.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="180000" minOccurs="0" name="node-manager-timeout-millis" nillable="false">
            <xs:annotation>
              <xs:documentation>
 NodeManager timeout. Amount of time to wait for a response from
 NodeManager. NodeManager is used to get server state and decide if a server
 is really dead. Note that the server automatically calculates a timeout
 value and this mbean attribute is used as a upper bound.
 </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="file-t3Type">
    <xs:annotation>
      <xs:documentation>Corresponds to FileT3MBean
 (Interface=weblogic.management.configuration.FileT3MBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path used to locate a WebLogic file (T3) service on a server
 host.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="embedded-ldapType">
    <xs:annotation>
      <xs:documentation>Corresponds to EmbeddedLDAPMBean
 (Interface=weblogic.management.configuration.EmbeddedLDAPMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="credential-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.EmbeddedLDAPMBean Attribute=getCredentialEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="23" minOccurs="0" name="backup-hour" nillable="false">
            <xs:annotation>
              <xs:documentation>The hour at which the embedded LDAP server should be backed
 up.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="23"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="backup-minute" nillable="false">
            <xs:annotation>
              <xs:documentation>The minute at which the embedded LDAP server should be backed
 up.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="59"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="7" minOccurs="0" name="backup-copies" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of backup copies that should be made for the
 embedded LDAP server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65534"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="cache-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether a cache is used with the embedded LDAP
 server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="32" minOccurs="0" name="cache-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The size of the cache (in kilobytes) that is used with the
 embedded LDAP server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="cache-ttl" nillable="false">
            <xs:annotation>
              <xs:documentation>The time-to-live of the cache (in seconds) that is used with the
 embedded LDAP server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="refresh-replica-at-startup" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether a Managed Server should refresh all replicated
 data at boot time. (This is useful if you have made a large amount
 of changes when the Managed Server was not active, and you want to
 download the entire replica instead of having the Administration
 Server push each change to the Managed Server.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="master-first" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether a Managed Server should always connect to the
 master LDAP server (contained in the Administration Server),
 instead of connecting to the local replicated LDAP server
 (contained in the Managed Server).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies the maximum number of seconds to wait for results from
 the embedded LDAP server before timing out. If this option is set
 to 0, there is no maximum time limit.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="anonymous-bind-allowed" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the embedded LDAP server should allow anonymous
 connections.
 (Interface=weblogic.management.configuration.EmbeddedLDAPMBean Attribute=isAnonymousBindAllowed)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="app-deploymentType">
    <xs:annotation>
      <xs:documentation>Corresponds to AppDeploymentMBean
 (Interface=weblogic.management.configuration.AppDeploymentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:basic-deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="install-dir" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path to application's install-root directory, relative to the 
 domain/config/deployments directory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="plan-dir" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The location of this application's configuration area. This directory can 
 contain external descriptor files as specified within the deployment plan 
 document.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="plan-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path to the deployment plan document on Administration Server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="version-identifier" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Uniquely identifies the application version across all versions 
 of the same application.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="validate-dd-security-data" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>This attribute is not used in the current release.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="security-dd-model" nillable="true">
            <xs:annotation>
              <xs:documentation>The security model that is used to secure a deployed module. </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="DDOnly"/>
                <xs:enumeration value="CustomRoles"/>
                <xs:enumeration value="CustomRolesAndPolicies"/>
                <xs:enumeration value="Advanced"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="staging-mode" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The mode that specifies whether a deployment's files are
 copied from a source on the Administration Server to the Managed
 Server's staging area during application preparation. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alt-descriptor-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>A path on the file system for the application descriptor for
 this application. If null, the usual location within the ear is
 used (META-INF/application.xml);</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="alt-wls-descriptor-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>A path on the file system for the WLS-specific application
 descriptor for this application. If null, the usual location within
 the EAR file is used</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="application-identifier" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The Application Identifier of the application version uniquely identifies 
 the application version across all versions of all applications. 
 If the application is not versioned, 
 the Application Identifier is the same as the application name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="application-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the application.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="libraryType">
    <xs:annotation>
      <xs:documentation>Corresponds to LibraryMBean
 (Interface=weblogic.management.configuration.LibraryMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:app-deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="domain-libraryType">
    <xs:annotation>
      <xs:documentation>Corresponds to DomainLibraryMBean
 (Interface=weblogic.management.configuration.DomainLibraryMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:libraryType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ws-reliable-delivery-policyType">
    <xs:annotation>
      <xs:documentation>Corresponds to WSReliableDeliveryPolicyMBean
 (Interface=weblogic.management.configuration.WSReliableDeliveryPolicyMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="jms-server" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WSReliableDeliveryPolicyMBean Attribute=getJMSServerAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="default-retry-count" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The default maximum number of times that the sender runtime
 should attempt to redeliver a message that the receiver WebLogic
 Server has not yet acknowledged.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="6" minOccurs="0" name="default-retry-interval" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The default minimum number of seconds that the sender runtime
 should wait between retries if the receiver does not send an
 acknowledgement of receiving the message, or if the sender runtime
 detects a communications error while attempting to send a
 message.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="360" minOccurs="0" name="default-time-to-live" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The default number of seconds that the receiver of the reliable
 message should persist the history of the reliable message in its
 store.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jdbc-data-source-factoryType">
    <xs:annotation>
      <xs:documentation>Corresponds to JDBCDataSourceFactoryMBean
 (Interface=weblogic.management.configuration.JDBCDataSourceFactoryMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="user-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The database account user name used in physical database
 connections. This may be overridden by &lt;code&gt;user-name&lt;/code&gt; in
 the descriptor.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JDBCDataSourceFactoryMBean Attribute=getPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The URL of the database to connect to. The format of the URL
 varies by JDBC driver.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="driver-class-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The full package name of JDBC driver class used to create the
 physical database connections in the connection pool.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="properties" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JDBCDataSourceFactoryMBean Attribute=getPropertiesAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="factory-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name used in deployment descriptor files to reference this
 JDBC data source factory.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="xml-entity-cacheType">
    <xs:annotation>
      <xs:documentation>Corresponds to XMLEntityCacheMBean
 (Interface=weblogic.management.configuration.XMLEntityCacheMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="xmlcache" minOccurs="0" name="cache-location" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the path name for the persistent cache files.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="500" minOccurs="0" name="cache-memory-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The memory size, in KB, of the cache. The default value is 500
 KB.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="cache-disk-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The disk size, in MB, of the persistent disk cache. The default
 value is 5 MB.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="120" minOccurs="0" name="cache-timeout-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The default timeout interval, in seconds, for the cache. The
 default value is 120 seconds.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="max-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Provides the maximum number of entries that can be stored in the
 cache at any given time.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="caching-realmType">
    <xs:annotation>
      <xs:documentation>Corresponds to CachingRealmMBean
 (Interface=weblogic.management.configuration.CachingRealmMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="basic-realm" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.CachingRealmMBean Attribute=getBasicRealmAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="cache-case-sensitive" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the specified security realm is
 case-sensitive. To use a realm that is not case-sensitive (such as
 the Windows NT and LDAP security realms), disable this
 attribute.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="acl-cache-enable" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the ACL cache should be enabled. By default,
 the ACL cache is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="authentication-cache-enable" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Authentication cache should be enabled. By
 default, the Authentication cache is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="group-cache-enable" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Group cache should be enabled. By default,
 the Group cache is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="permission-cache-enable" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Permission cache should be enabled. By
 default, the Permission cache is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="user-cache-enable" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the User cache should be enabled. By default,
 the User cache is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="211" minOccurs="0" name="acl-cache-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of ACL lookups to cache. This value should be
 a prime number for best lookup performance.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="17"/>
                <xs:maxInclusive value="65537"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="211" minOccurs="0" name="authentication-cache-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of Authentication requests to cache. This
 value should be a prime number for best lookup performance.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="17"/>
                <xs:maxInclusive value="65537"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="211" minOccurs="0" name="group-cache-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of group lookups to cache. This value should
 be a prime number for best performance.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="17"/>
                <xs:maxInclusive value="65537"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="211" minOccurs="0" name="permission-cache-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of permission lookups to cache. This value
 should be a prime number for best performance.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="17"/>
                <xs:maxInclusive value="65537"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="211" minOccurs="0" name="user-cache-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of user lookups to cache. This value should
 be a prime number for best performance.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="17"/>
                <xs:maxInclusive value="65537"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="acl-cache-ttl-positive" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to retain the results of a successful ACL
 lookup.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="group-cache-ttl-positive" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to retain the results of a successful
 group lookup.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="authentication-cache-ttl-positive" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to retain the results of a successful
 Authentication lookup.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="permission-cache-ttl-positive" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to retain the results of a successful
 permission lookup.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="user-cache-ttl-positive" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to retain the results of a successful user
 lookup.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="acl-cache-ttl-negative" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to retain the results of an unsuccessful
 ACL lookup.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="group-cache-ttl-negative" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to retain the results of an unsuccessful
 group lookup.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="authentication-cache-ttl-negative" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to retain the results of an unsuccessful
 Authentication lookup.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="permission-cache-ttl-negative" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to retain the results of an unsuccessful
 permission lookup.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="user-cache-ttl-negative" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to retain the results of an unsuccessful
 user lookup.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="300" minOccurs="0" name="group-membership-cache-ttl" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds to store the members of a group before
 updating it.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="old-realmType">
    <xs:annotation>
      <xs:documentation>Corresponds to RealmMBean
 (Interface=weblogic.management.configuration.RealmMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="caching-realm" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.RealmMBean Attribute=getCachingRealmAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="file-realm" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.RealmMBean Attribute=getFileRealmAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="200" minOccurs="0" name="results-batch-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of users, groups, and ACLs to return per Remote
 Procedure Call (RPC).</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="enumeration-allowed" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies ability to enumerate users, groups, and memberships to
 prevent possible Denial Of Service attacks (if there are many users
 or groups).</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="password-policyType">
    <xs:annotation>
      <xs:documentation>Corresponds to PasswordPolicyMBean
 (Interface=weblogic.management.configuration.PasswordPolicyMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="8" minOccurs="0" name="minimum-password-length" nillable="false">
            <xs:annotation>
              <xs:documentation>The minimum number of characters required for any password in
 this WebLogic Server domain.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="lockout-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this WebLogic Server domain tracks invalid
 login attempts and takes appropriate action. (The remaining fields
 on this page are relevant only if you check this box.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="lockout-threshold" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of failed logins (between 1 and 99999) that can be
 tried for a user before their account is locked.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="99999"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="lockout-duration" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of minutes (between 0 and 999999) that a user's
 account remains inaccessible after being locked.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="999999"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="lockout-reset-duration" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of minutes (between 0 and 999999) within which
 invalid login attempts must happen in order for the user's account
 to be locked.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="99999"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="lockout-cache-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The size of the cache (between 1 and 99999 kilobytes) used for
 invalid login attempts.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="99999"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="400" minOccurs="0" name="lockout-gc-threshold" nillable="false">
            <xs:annotation>
              <xs:documentation>If the number of current invalid login attempts is equal to or
 great than this attribute, WebLogic Server deletes any expired
 records from the cache. The lower the value of this attribute, the
 more often WebLogic Server clears the cache. This may impact the
 performance of WebLogic Server. Set the attribute accordingly.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="999999"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="custom-realmType">
    <xs:annotation>
      <xs:documentation>Corresponds to CustomRealmMBean
 (Interface=weblogic.management.configuration.CustomRealmMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:basic-realmType">
        <xs:sequence>
          <xs:element minOccurs="0" name="configuration-data" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.CustomRealmMBean Attribute=getConfigurationDataAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.CustomRealmMBean Attribute=getPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ldap-realmType">
    <xs:annotation>
      <xs:documentation>Corresponds to LDAPRealmMBean
 (Interface=weblogic.management.configuration.LDAPRealmMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:basic-realmType">
        <xs:sequence>
          <xs:element default="ldap://ldapserver:389" minOccurs="0" name="ldapurl" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The location of the LDAP server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="principal" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The distinguished name (DN) of the LDAP user that WebLogic
 Server uses to connect to the LDAP server. This user must be able
 to list LDAP users and groups.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="credential-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.LDAPRealmMBean Attribute=getCredentialEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="ssl-enable" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the SSL protocol is used to protect
 communications between the LDAP server and WebLogic Server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="com.sun.jndi.ldap.LdapCtxFactory" minOccurs="0" name="ldap-provider" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the class that implements an LDAP directory server.
 This attribute allows you to use an LDAP directory server other
 than the one supplied by Sun Microsystems. WebLogic Server supports
 the following LDAP directory servers: Open LDAP, Netscape iPlanet,
 Microsoft Site Server, and Novell NDs.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="auth-protocol" nillable="true">
            <xs:annotation>
              <xs:documentation>The type of authentication used to authenticate the LDAP
 server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="none"/>
                <xs:enumeration value="simple"/>
                <xs:enumeration value="CRAM-MD5"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="user-authentication" nillable="true">
            <xs:annotation>
              <xs:documentation>The method for allowing or denying a user the right to
 communicate with WebLogic Server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="bind"/>
                <xs:enumeration value="external"/>
                <xs:enumeration value="local"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="userpassword" minOccurs="0" name="user-password-attribute" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>If the User Authentication field is set to &lt;tt&gt;local&lt;/tt&gt;, this
 attribute finds the attribute in the LDAP user objects that
 contains the passwords of the LDAP users.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="user-dn" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The list of attributes that, when combined with the attribute
 named in the User Name Attribute field, uniquely identifies a user
 in the LDAP directory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="user-name-attribute" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The login name of a user for the LDAP directory. The value can
 be the common name of a user in the LDAP directory. However, it is
 generally an abbreviated string, such as a User ID.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="group-dn" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The list of attributes that, when combined with the value of the
 Group Name Attribute field, uniquely identifies a group in the LDAP
 directory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="cn" minOccurs="0" name="group-name-attribute" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of a group in the LDAP directory. The value is usually
 the common name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="group-is-context" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies how group membership is recorded in the LDAP
 directory.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="member" minOccurs="0" name="group-username-attribute" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the attribute that contains a group member in a
 group entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="nt-realmType">
    <xs:annotation>
      <xs:documentation>Corresponds to NTRealmMBean
 (Interface=weblogic.management.configuration.NTRealmMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:basic-realmType">
        <xs:sequence>
          <xs:element minOccurs="0" name="primary-domain" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The host name of the Windows NT Primary Domain Controller where
 users and groups are defined for the domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="10240" minOccurs="0" name="preferred-max-bytes" nillable="false">
            <xs:annotation>
              <xs:documentation>Specifies how many bytes worth of user/group data to get per NT
 call.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="ignore-bad-domain-name" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>During initialization of the NT Realm, some Domains may not be
 present on the network. The default configuration for this
 situation is to throw a SecurityException and halt server startup.
 This property will allow NTRealm to ignore uncontactable Primary
 Domain Controllers during startup with the hope that they will be
 reachable later on.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="unix-realmType">
    <xs:annotation>
      <xs:documentation>Corresponds to UnixRealmMBean
 (Interface=weblogic.management.configuration.UnixRealmMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:basic-realmType">
        <xs:sequence>
          <xs:element default="wlauth" minOccurs="0" name="auth-program" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the program used to authenticate users in the UNIX
 security realm. In most cases, the name of the program is &lt;tt&gt;wlauth&lt;/tt&gt;.
 The authentication program must run &lt;tt&gt;setuid root&lt;/tt&gt;.
 &lt;ul&gt;
 &lt;li&gt;
 If the program name is &lt;tt&gt;wlauth&lt;/tt&gt; and is in the &lt;tt&gt;CLASSPATH&lt;/tt&gt;,
 you need not explicitly set this attribute; leave the attribute blank.
 &lt;li&gt;
 If the program name is different than &lt;tt&gt;wlauth&lt;/tt&gt;, or if it is not in the
 &lt;tt&gt;CLASSPATH&lt;/tt&gt; of WebLogic Server, specify this attribute.
 &lt;/ul&gt;
 (Interface=weblogic.management.configuration.UnixRealmMBean Attribute=getAuthProgram)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-serverType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSServerMBean
 (Interface=weblogic.management.configuration.JMSServerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jms-session-pool" nillable="true" type="dom:jms-session-poolType">
            <xs:annotation>
              <xs:documentation>The session pools defined for the JMS server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="persistent-store" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JMSServerMBean Attribute=getPersistentStoreAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="store-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>
 Specifies whether message persistence is supported for this JMS server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="allows-persistent-downgrade" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether JMS clients will get an exception when
 sending persistent messages to a destination targeted to a JMS server
 that does not have a persistent store configured.
 This parameter only has effect when the Store Enabled parameter
 is disabled (false).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="hosting-temporary-destinations" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether this JMS server can be used to host temporary destinations.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="temporary-template-resource" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of a JMS module that contains a template that this JMS
 server can use to create temporary destinations.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="temporary-template-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of a configured JMS template that this JMS server uses to create
 temporary destinations.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="bytes-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of bytes that can be stored in this JMS server. A value of
 &lt;code&gt;-1&lt;/code&gt; removes any WebLogic Server limits.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="bytes-threshold-high" nillable="false">
            <xs:annotation>
              <xs:documentation>The upper threshold (number of bytes stored in this JMS server)
 that triggers flow control and logging events. A value of
 &lt;code&gt;-1&lt;/code&gt; disables the events for this JMS server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="bytes-threshold-low" nillable="false">
            <xs:annotation>
              <xs:documentation>The lower threshold (number of bytes stored in this JMS server)
 that triggers flow control and logging events. A value of
 &lt;code&gt;-1&lt;/code&gt; disables the events for this JMS server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="messages-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of messages that can be stored in this JMS server. A value of
 &lt;code&gt;-1&lt;/code&gt; removes any WebLogic Server limits.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="messages-threshold-high" nillable="false">
            <xs:annotation>
              <xs:documentation>The upper threshold (number of messages stored in this JMS
 server) that triggers flow control and logging events. A value of
 &lt;code&gt;-1&lt;/code&gt; disables the events for this JMS server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="messages-threshold-low" nillable="false">
            <xs:annotation>
              <xs:documentation>The lower threshold (number of messages stored in this JMS
 server) that triggers flow control and logging events. A value of
 &lt;code&gt;-1&lt;/code&gt; disables the events for this JMS server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="jdbc-store-upgrade-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the JDBCStoreUpgradeEnabled is set.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="messages-paging-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>This parameter has been deprecated. Paging is always enabled. The
 "MessageBufferSize" parameter controls how much memory is used before
 paging kicks in.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="bytes-paging-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>This parameter has been deprecated. Paging is always enabled. The
 "MessageBufferSize" parameter controls how much memory is used before
 paging kicks in.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="message-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of memory (in bytes) that this JMS server can use
 to store message bodies before it writes them to disk.
 When the JMS server writes the message bodies to disk, it clears
 them from memory.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="9223372036854775807"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="paging-directory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>
 Specifies where message bodies are written when the size 
 of the message bodies in the JMS server exceeds the message
 buffer size.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="paging-file-locking-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Determines whether OS file locking is used for paging store files. Applies to both primary and cache files.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="expiration-scan-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds 
 between this JMS server's cycles of scanning local destinations for
 expired messages. A value of &lt;code&gt;0&lt;/code&gt; disables active scanning. A
 very large scan interval effectively disables active scanning.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="2147483647" minOccurs="0" name="maximum-message-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of bytes allowed in individual messages on this JMS server.
 The size of a message includes the message body, any user-defined
 properties, and the user-defined JMS header fields
 &lt;code&gt;JMSCorrelationID&lt;/code&gt; and &lt;code&gt;JMSType&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="blocking-send-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>Determines whether the JMS server delivers smaller messages
 before larger ones when a destination has exceeded its maximum
 number of messages. &lt;code&gt;FIFO&lt;/code&gt; prevents the JMS server from
 delivering smaller messages when larger ones are already waiting
 for space. &lt;code&gt;Preemptive&lt;/code&gt; allows smaller send requests to
 preempt previous larger ones when there is sufficient space for
 smaller messages on the destination.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="FIFO"/>
                <xs:enumeration value="Preemptive"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="default" minOccurs="0" name="production-paused-at-startup" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Specifies whether production is paused at server startup on destinations  
 targeted to this JMS server. A destination cannot receive any new 
 messages while it is paused.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="default" minOccurs="0" name="insertion-paused-at-startup" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Indicates whether insertion is paused at startup on destinations 
 targeted to this JMS server. A destination cannot receive any new 
 messages while it is paused.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="default" minOccurs="0" name="consumption-paused-at-startup" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Indicates whether consumption is paused at startup on destinations
 targeted to this JMS server at startup. A destination cannot receive any new 
 messages while it is paused.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jms-message-log-file" nillable="true" type="dom:jms-message-log-fileType">
            <xs:annotation>
              <xs:documentation>The message log file configuration for this JMS Server.
 (Interface=weblogic.management.configuration.JMSServerMBean Attribute=getJMSMessageLogFile)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-session-poolType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSSessionPoolMBean
 (Interface=weblogic.management.configuration.JMSSessionPoolMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="jms-connection-consumer" nillable="true" type="dom:jms-connection-consumerType">
            <xs:annotation>
              <xs:documentation>The connection consumers for this JMS session pool. JMS
 connection consumers are queues (Point-To-Point) or topics
 (Pub/Sub) that retrieve server sessions and process messages. Once
 you have defined a session pool, you can configure one or more
 connection consumers for each session pool.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="connection-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The JNDI name of the connection factory for this JMS session
 pool. Connection factories are used to create connections with
 predefined attributes.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="listener-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the server-side listener class for this JMS session
 pool, which is used to receive and process messages
 concurrently.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="acknowledge-mode" nillable="true">
            <xs:annotation>
              <xs:documentation>The acknowledge mode used by non-transacted sessions within this
 JMS session pool.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Auto"/>
                <xs:enumeration value="Client"/>
                <xs:enumeration value="Dups-Ok"/>
                <xs:enumeration value="None"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="sessions-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of sessions allowed for this JMS session
 pool. A value of &lt;code&gt;-1&lt;/code&gt; indicates that there is no
 maximum.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="transacted" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether this JMS session pool creates transacted
 sessions.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-connection-consumerType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSConnectionConsumerMBean
 (Interface=weblogic.management.configuration.JMSConnectionConsumerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="10" minOccurs="0" name="messages-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The defined maximum number of messages that the connection
 consumer can load at one time into a ServerSession's session.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="selector" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The defined JMS message selector of the connection consumer.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="destination" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The JNDI name of the destination for this connection
 consumer.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="virtual-hostType">
    <xs:annotation>
      <xs:documentation>Corresponds to VirtualHostMBean
 (Interface=weblogic.management.configuration.VirtualHostMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:web-serverType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="virtual-host-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The list of host names, separated by line breaks, for which this 
 virtual host will serve requests.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="network-access-point" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The dedicated server channel name (NetworkAccessPoint) for which this
 virtual host will serve http request. If the NetworkAccessPoint for a
 given http request doesn't match any virtual host's NetworkAccessPoint,
 incoming HOST header will be matched with the VirtualHostNames in order
 to resolve the right virtual host. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ejb-containerType">
    <xs:annotation>
      <xs:documentation>Corresponds to EJBContainerMBean
 (Interface=weblogic.management.configuration.EJBContainerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="java-compiler" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path to the Java compiler to use to compile EJBs (e.g. "sj"
 or "javac"). Note: the default must be null. If no JavaCompiler is
 specified on this specific EJBComponent, the default will be pulled
 in the following order from - EJBContainerMBean -
 Server.JavaCompiler.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="java-compiler-pre-class-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides a list of the options to prepend to the Java compiler
 classpath when you compile Java code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="java-compiler-post-class-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides a list of the options to append to the Java compiler
 classpath when you compile Java code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="extra-rmic-options" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The extra options passed to rmic during server-side generation
 are noted here. The default for this attribute must be null. If no
 ExtraRmicOptions are specified on the EJBComponent, the default
 will be pulled from Server.ExtraRmicOptions.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="keep-generated" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>indicates whether KeepGenerated is enabled and the ejbc source
 files will be kept.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="force-generation" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the ForceGeneration is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="tmp_ejb" minOccurs="0" name="tmp-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Return the temporary directory where generated files are stored
 by ejbc. Deprecated: All EJB compiler output is now stored in the
 EJBCompilerCache subdirectory of the server staging directory. This
 directory should not be described as "temporary" since removing it
 would cause the EJB compiler to be rerun as necessary the next time
 the server is restarted.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="verbose-ejb-deployment-enabled" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Indicates whether the VerboseEJBDeployment is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="extra-ejbc-options" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Returns the extra options passed to ejbc during the dynamic ejbc
 of a jar file. For example: -J-mx128m By default this value is
 null. If no ExtraEJBCOptions are specified on the EJBComponent, the
 default will be pulled from the Server.ExtraEJBCOptions.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-app-containerType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebAppContainerMBean
 (Interface=weblogic.management.configuration.WebAppContainerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="false" minOccurs="0" name="relogin-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Beginning with the 9.0 release the FORM/BASIC authentication behavior
 has been modified to conform strictly to the J2EE Specification. If a user 
 has logged-in but does not have privileges to access a resource, the 
 403 (FORBIDDEN) page will be returned. Turn this flag on to enable the old 
 behavior, which was to return the user to the login form.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="allow-all-roles" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> In the security-constraints elements defined in a Web application's 
 web.xml deployment descriptor, the auth-constraint element indicates 
 the user roles that should be permitted access to this resource collection. 
" is a compact syntax for indicating all roles in the
" was treated as
 all users/roles defined in the realm.

 This parameter is a backward-compatibility switch to restore old behavior.
 Default behavior is one required by the spec, meaning all roles
 defined in the web application.

 If set, the value defined in weblogic.xml (container-descriptor -&gt; allow-all-roles)
 takes precedence (if set) over this value. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="filter-dispatched-requests-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> Indicates whether or not to apply filters to dispatched requests. This
 is a backward compatibility flag. Until version 8.1, WebLogic Server
 applied ServletFilters (if configured for the Web application) on
 request dispatches (and includes/forwards). Servlet 2.4 has introduced the
 "Dispatcher" element to make this behavior explicit. The default value is
 Dispatcher=REQUEST. In order to be complaint with the J2EE specification,
 the default value for FilterDispatchedRequestsEnabled is false beginning with WebLogic
 Server 9.0. Note that if you are using old descriptors (meaning web.xml does
 not have version=2.4), then WebLogic Server automatically uses
 FilterDispatchedRequestsEnabled = true for the Web applications, unless
 filter-dispatched-requests-enabled is explicitly set to false in
 weblogic.xml. This means that old applications will work fine without any
 modification. Additionally, during migration of old domains to the 9.0 domain,
 the migration plugin automatically sets this flag to true. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="overload-protection-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>This parameter is used to enable overload protection in the webapp container
 against low memory conditions. When a low memory situation occurs, new session
 creation attempts will result in weblogic.servlet.SessionCreationException. The
 application code needs to catch this exception and take proper action.
 Alternatively appropriate error-pages can be configured in web.xml against
 weblogic.servlet.SessionCreationException. This check is performed only
 on memory and replicated sessions. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="x-powered-by-header-level" nillable="true">
            <xs:annotation>
              <xs:documentation> WebLogic Server uses the X-Powered-By HTTP header, as recommended
 by the Servlet 2.4 specification, to publish its implementation
 information.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="NONE"/>
                <xs:enumeration value="SHORT"/>
                <xs:enumeration value="MEDIUM"/>
                <xs:enumeration value="FULL"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="./config/mimemappings.properties" minOccurs="0" name="mime-mapping-file" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Returns the name of the file containing mime-mappings for the
  domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="optimistic-serialization" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> When OptimisticSerialization is turned on, WebLogic server does not
 serialize-deserialize context and request attributes upon
 getAttribute(name) when a request gets dispatched across servlet contexts.
 This means you will need to make sure that the attributes common to
 Web applications are scoped to a common parent classloader (they are application-scoped)
 or placed in the system classpath if the two Web applications do not belong to the
 same application. When OptimisticSerialization is turned off (which is the default)
 WebLogic Server does serialize-deserialize context and request attributes upon
 getAttribute(name) to avoid the possibility of ClassCastExceptions.
 The value of OptimisticSerialization can also be overridden for specific Web applications
 by setting the optimistic-serialization value in weblogic.xml.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="retain-original-url" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> retain-original-url is used in FORM based authentication scenarios. When this property
 is set to true, after a successful authentication, Weblogic Server will redirect back
 to the web resource (page/servlet) retaining the protocol (http/https) used to
 access the protected resource in the original request. If set to false (which is the
 default value), Weblogic Server will redirect back to the protected resource using
 the current protocol.
 retain-original-url value can also be specified at per webapp level
 in weblogic.xml. The value in weblogic.xml, if specified, overrides the domain
 level value.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="servlet-authentication-form-url" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> ServletAuthenticationFormURL is used for backward compatibility with previous
 releases of Weblogic Server.If ServletAuthenticationFormURL is set to true (default), then
 ServletAuthentication.getTargetURLForFormAuthentication() and
 HttpSession.getAttribute(AuthFilter.TARGET_URL) will return the URL of the protected
 target resource. If set to false, the above API's will return the URI of the protected
 target resource. By default the value is set to true.(new method added in 9.0.0.1) </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="rtexprvalue-jsp-param-name" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Global property which determines the behavior of the JSP compiler when a
 jsp:param attribute "name" has a request time value. Without this property
 set to "true", the JSP compiler throws an error for a JSP using a
 request time value for the "name" attribute as mandated by the JSP 2.0 spec.
 This property exists for backward compatibility.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="client-cert-proxy-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether or not to honor the WL-Proxy-Client-Cert header coming
 with the request. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="http-trace-support-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation> Returns the value of HttpTraceSupportEnabled. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="weblogic-plugin-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether or not the proprietary &lt;tt&gt;WL-Proxy-Client-IP&lt;/tt&gt;
 header should be honored. (This is needed only when WebLogic
 plugins are configured.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="auth-cookie-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Whether authcookie feature is enabled or not.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="wap-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the session ID should include JVM information.
 (Checking this box may be necessary when using URL rewriting with
 WAP devices that limit the size of the URL to 128 characters, and
 may also affect the use of replicated sessions in a cluster.)
 When this box is selected, the default size of the URL
 will be set at 52 characters, and it will not contain any special characters.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="30" minOccurs="0" name="post-timeout-secs" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time this server waits between receiving chunks of data
 in an HTTP POST data before it times out. (This is used to prevent 
 denial-of-service attacks that attempt to overload the server with POST data.)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="120"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-post-time-secs" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Max Post Time (in seconds) for reading HTTP POST data in a
 servlet request. MaxPostTime &amp;lt; 0 means unlimited</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-post-size" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum post size this server allows for reading HTTP POST
 data in a servlet request. A value less than 0 indicates an
 unlimited size.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="work-context-propagation-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether or not WorkContextPropagation is enabled.
 By default it is turned on. There is a little overhead involved in
 propagating WorkContexts. Therefore, if you don't care about WorkContext
 propagation, turn this value off in production environments. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="p3p-header-value" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation> Returns the P3P Header value that will be sent with all
 responses for http requests (if non-null). The value of this header
 points to the location of the policy reference file for the Web site.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="jsp-compiler-backwards-compatible" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Global property to determine the behavior of the JSP compiler.
 When this property set to "true", the JSP compiler throws a translation
 error for JSPs that do not conform to the JSP2.0 specification.
 This property exists for backward compatibility.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="servlet-reload-check-secs" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WebAppContainerMBean Attribute=getServletReloadCheckSecs)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="show-archived-real-path-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Global property to determine the behavior of getRealPath() for 
 archived web applications. When this property set to "true", 
 getRealPath() will return the canonical path of the resource files. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="self-tuningType">
    <xs:annotation>
      <xs:documentation>Corresponds to SelfTuningMBean
 (Interface=weblogic.management.configuration.SelfTuningMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="fair-share-request-class" nillable="true" type="dom:fair-share-request-classType">
            <xs:annotation>
              <xs:documentation>Get all the fair share request classes
 (Interface=weblogic.management.configuration.SelfTuningMBean Attribute=getFairShareRequestClasses)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="response-time-request-class" nillable="true" type="dom:response-time-request-classType">
            <xs:annotation>
              <xs:documentation>Get all the response time request classes
 (Interface=weblogic.management.configuration.SelfTuningMBean Attribute=getResponseTimeRequestClasses)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="context-request-class" nillable="true" type="dom:context-request-classType">
            <xs:annotation>
              <xs:documentation>Get all the context request classes
 (Interface=weblogic.management.configuration.SelfTuningMBean Attribute=getContextRequestClasses)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="min-threads-constraint" nillable="true" type="dom:min-threads-constraintType">
            <xs:annotation>
              <xs:documentation>Get all the min threads constraint
 (Interface=weblogic.management.configuration.SelfTuningMBean Attribute=getMinThreadsConstraints)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="max-threads-constraint" nillable="true" type="dom:max-threads-constraintType">
            <xs:annotation>
              <xs:documentation>Get all the max threads constraint
 (Interface=weblogic.management.configuration.SelfTuningMBean Attribute=getMaxThreadsConstraints)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="capacity" nillable="true" type="dom:capacityType">
            <xs:annotation>
              <xs:documentation>Get all the capacity definitions
 (Interface=weblogic.management.configuration.SelfTuningMBean Attribute=getCapacities)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="work-manager" nillable="true" type="dom:work-managerType">
            <xs:annotation>
              <xs:documentation>Get all the defined work managers.
 &lt;p&gt;
 A note about dynamic additions and deletions of WorkManager in a running
 server. Only applications or modules deployed or re-deployed after the
 changes are made can pick up the newly added WorkManagers. Existing
 production applications resolve their dispatch-policies to work managers
 during deployment time and once the application is exported and in
 production mode, the server does not swap work manager's midway. The
 tight binding helps performance and also avoids issues like what happens
 to inflight work in the old work manager. This attribute is marked as
 dynamic so that new applications (re)deployed can pick up the WorkManager
 changes.
 Please note that this applies only to resolving dispatch-policies to
 WorkManagers. Existing attributes within a work manager like fair-share
 and constraints can be modified without requiring a redeploy.
 &lt;/p&gt;
 (Interface=weblogic.management.configuration.SelfTuningMBean Attribute=getWorkManagers)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="response-time-request-classType">
    <xs:annotation>
      <xs:documentation>Corresponds to ResponseTimeRequestClassMBean
 (Interface=weblogic.management.configuration.ResponseTimeRequestClassMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element default="-1" minOccurs="0" name="goal-ms" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation> A response time goal in milliseconds. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="context-request-classType">
    <xs:annotation>
      <xs:documentation>Corresponds to ContextRequestClassMBean
 (Interface=weblogic.management.configuration.ContextRequestClassMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="context-case" nillable="true" type="dom:context-caseType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ContextRequestClassMBean Attribute=getContextCases)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="capacityType">
    <xs:annotation>
      <xs:documentation>Corresponds to CapacityMBean
 (Interface=weblogic.management.configuration.CapacityMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element default="-1" minOccurs="0" name="count" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Total number of requests that can be enqueued.
 (Interface=weblogic.management.configuration.CapacityMBean Attribute=getCount)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="path-serviceType">
    <xs:annotation>
      <xs:documentation>Corresponds to PathServiceMBean
 (Interface=weblogic.management.configuration.PathServiceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="persistent-store" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.PathServiceMBean Attribute=getPersistentStoreAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-bridge-destinationType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSBridgeDestinationMBean
 (Interface=weblogic.management.configuration.JMSBridgeDestinationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:bridge-destination-commonType">
        <xs:sequence>
          <xs:element minOccurs="0" name="connection-factory-jndi-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The connection factory's JNDI name for this JMS bridge
 destination.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="weblogic.jndi.WLInitialContextFactory" minOccurs="0" name="initial-context-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The initial context factory name for this JMS bridge
 destination.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="connection-url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The connection URL for this JMS bridge destination.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="destination-jndi-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The destination JNDI name for this JMS bridge destination.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="destination-type" nillable="true">
            <xs:annotation>
              <xs:documentation>The destination type (queue or topic) for this JMS bridge
 destination.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Queue"/>
                <xs:enumeration value="Topic"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="shutdown-classType">
    <xs:annotation>
      <xs:documentation>Corresponds to ShutdownClassMBean
 (Interface=weblogic.management.configuration.ShutdownClassMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:class-deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="singleton-serviceType">
    <xs:annotation>
      <xs:documentation>Corresponds to SingletonServiceMBean
 (Interface=weblogic.management.configuration.SingletonServiceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:singleton-service-baseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="class-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The fully qualified name of a class to load and run. The class
 must be on the server's classpath.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="constrained-candidate-server" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SingletonServiceMBean Attribute=getConstrainedCandidateServersAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="cluster" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SingletonServiceMBean Attribute=getClusterAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jolt-connection-poolType">
    <xs:annotation>
      <xs:documentation>Corresponds to JoltConnectionPoolMBean
 (Interface=weblogic.management.configuration.JoltConnectionPoolMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="primary-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The list of addresses for the primary Jolt Server Listeners
 (JSLs) on the Tuxedo system.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="failover-address" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The list of Jolt Server Listeners (JSLs) addresses that is used
 if the connection pool cannot estabilish connections to the Primary
 Addresses, or if the primary connections fail.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="minimum-pool-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The minimum number of connections to be added to this Jolt
 connection pool when WebLogic Server starts.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="maximum-pool-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of connections that can be made from this
 Jolt connection pool.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="user-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>A user name that applications specify to connect to this Jolt
 connection pool. If Security Context is enabled, this name must be
 the name of an authorized Tuxedo user. (Specifying a Tuxedo user
 name is required if the Tuxedo authentication level is
 &lt;code&gt;USER_AUTH&lt;/code&gt;.)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="user-password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JoltConnectionPoolMBean Attribute=getUserPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="application-password-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JoltConnectionPoolMBean Attribute=getApplicationPasswordEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="user-role" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The Tuxedo user role for this Jolt connection pool. (This is
 required only when the security level in the Tuxedo domain is
 &lt;tt&gt;USER_AUTH&lt;/tt&gt;, &lt;tt&gt;ACL&lt;/tt&gt;, or &lt;tt&gt;MANDATORY_ACL&lt;/tt&gt;).</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="security-context-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether this Jolt connection pool passes the
 connection pool's security context (user name, password and other
 information) from the WebLogic Server user to the Tuxedo
 domain.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="recv-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of seconds the client waits to receive a response
 before timing out.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="key-store-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path and file name of the keystore containing the private key
 used in SSL mutual authentication.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="trust-store-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path and file name of the keystore containing the trust certificates.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="key-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JoltConnectionPoolMBean Attribute=getKeyPassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="key-store-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JoltConnectionPoolMBean Attribute=getKeyStorePassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="trust-store-pass-phrase-encrypted" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JoltConnectionPoolMBean Attribute=getTrustStorePassPhraseEncryptedAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="file-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to FileStoreMBean
 (Interface=weblogic.management.configuration.FileStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:generic-file-storeType">
        <xs:sequence>
          <xs:element minOccurs="0" name="target" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.FileStoreMBean Attribute=getTargetsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="1000" minOccurs="0" name="deployment-order" nillable="false">
            <xs:annotation>
              <xs:documentation>A priority that the server uses to determine when it deploys an
 item. The priority is relative to other deployable items of the
 same type.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="logical-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name used by subsystems to refer to different stores on
 different servers using the same name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="xa-resource-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Overrides the name of the XAResource that this store registers
 with JTA.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jdbc-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to JDBCStoreMBean
 (Interface=weblogic.management.configuration.JDBCStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:generic-jdbc-storeType">
        <xs:sequence>
          <xs:element minOccurs="0" name="data-source" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JDBCStoreMBean Attribute=getDataSourceAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="target" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JDBCStoreMBean Attribute=getTargetsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="connection-pool" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JDBCStoreMBean Attribute=getConnectionPoolAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="20" minOccurs="0" name="deletes-per-batch-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of table rows that are deleted per database
 call.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1000" minOccurs="0" name="deployment-order" nillable="false">
            <xs:annotation>
              <xs:documentation>A priority that the server uses to determine when it deploys an
 item. The priority is relative to other deployable items of the
 same type.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="2147483647"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="logical-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name used by subsystems to refer to different stores on
 different servers using the same name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="20" minOccurs="0" name="inserts-per-batch-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of table rows that are inserted per database
 call.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="xa-resource-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Overrides the name of the XAResource that this store registers
 with JTA.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="20" minOccurs="0" name="deletes-per-statement-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of table rows that are deleted per database
 call.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="100"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-interop-moduleType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSInteropModuleMBean
 (Interface=weblogic.management.configuration.JMSInteropModuleMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-system-resourceType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="custom-resourceType">
    <xs:annotation>
      <xs:documentation>Corresponds to CustomResourceMBean
 (Interface=weblogic.management.configuration.CustomResourceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:system-resourceType">
        <xs:sequence>
          <xs:element minOccurs="0" name="resource-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>This is the name of the class that is used to manage the lifecycle of
 the resource.  An instance of the ResourceClass is created and is passed
 the DescriptorBean.  If this value is not set then the resource does not
 participate in the deployment lifecycle and simply represent a distribution
 of configuration information to be used by other subsystems.
 (Interface=weblogic.management.configuration.CustomResourceMBean Attribute=getResourceClass)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="descriptor-bean-class" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Returns the interface of the bean that is returned by the #getResource method.
 (Interface=weblogic.management.configuration.CustomResourceMBean Attribute=getDescriptorBeanClass)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="wldf-system-resourceType">
    <xs:annotation>
      <xs:documentation>Corresponds to WLDFSystemResourceMBean
 (Interface=weblogic.management.configuration.WLDFSystemResourceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:system-resourceType">
        <xs:sequence>
          <xs:element minOccurs="0" name="description" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Optional short description of this WLDFSystemResource. If
 provided, the WebLogic Server Administration Console will display
 the resource description.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jdbc-system-resourceType">
    <xs:annotation>
      <xs:documentation>Corresponds to JDBCSystemResourceMBean
 (Interface=weblogic.management.configuration.JDBCSystemResourceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:system-resourceType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="saf-agentType">
    <xs:annotation>
      <xs:documentation>Corresponds to SAFAgentMBean
 (Interface=weblogic.management.configuration.SAFAgentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="store" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SAFAgentMBean Attribute=getStoreAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="bytes-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum bytes quota (total amount of bytes) that can be
 stored in this SAF agent.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="bytes-threshold-high" nillable="false">
            <xs:annotation>
              <xs:documentation>The upper threshold value that triggers events based on the
 number of bytes stored in the SAF agent.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="bytes-threshold-low" nillable="false">
            <xs:annotation>
              <xs:documentation>The lower threshold that triggers events based on the number of
 bytes stored in the SAF agent.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="messages-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum message quota (total amount of messages) that can be
 stored in this SAF agent.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="messages-threshold-high" nillable="false">
            <xs:annotation>
              <xs:documentation>The upper threshold that triggers events based on the number of
 messages stored in the SAF agent.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="messages-threshold-low" nillable="false">
            <xs:annotation>
              <xs:documentation>The low threshold that triggers events based on the number of
 messages stored in the SAF agent.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="2147483647" minOccurs="0" name="maximum-message-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of bytes allowed in individual messages on
 this SAF agent.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="20000" minOccurs="0" name="default-retry-delay-base" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of time, in milliseconds, between the original
 delivery attempt and the first retry.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="180000" minOccurs="0" name="default-retry-delay-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum amount of time, in milliseconds, between two
 successive delivery retry attempts.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1.0" minOccurs="0" name="default-retry-delay-multiplier" nillable="false">
            <xs:annotation>
              <xs:documentation>The factor used to multiply the previous delay time to calculate
 the next delay time to be used.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:double">
                <xs:minInclusive value="1.0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="service-type" nillable="true">
            <xs:annotation>
              <xs:documentation>The type of service that this SAF agent provides. JMS requires only a Sending agent 
 on the sending side for messages. Whereas, Web Services Reliable Messaging requires both a 
 Sending and Receiving agent for messages.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Both"/>
                <xs:enumeration value="Sending-only"/>
                <xs:enumeration value="Receiving-only"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="10" minOccurs="0" name="window-size" nillable="false">
            <xs:annotation>
              <xs:documentation>For JMS messages, the number of messages in a batch. A sending agent
 waits to forward a message batch until the source destination 
 message count is greater than or equal to this value.
 For WSRM, the maximum number of unacknowledged messages allowed between
 a source destination and a target destination during a conversation.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="logging-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether a message is logged in the server log file
 when a message fails to be forwarded.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="conversation-idle-time-maximum" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum amount of time allowed before a sending side
 releases the resources used by a conversation.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="acknowledge-interval" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>The maximum interval between two successive acknowledgements
 sent by the receiving side.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="default-time-to-live" nillable="false">
            <xs:annotation>
              <xs:documentation>The default amount of time, in milliseconds, that the agent
 guarantees to reliably send messages.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="incoming-paused-at-startup" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the agent is paused for incoming messages at
 startup time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="forwarding-paused-at-startup" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the agent is paused for forwarding messages at
 the startup time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="receiving-paused-at-startup" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the agent is paused for receiving messages at
 the startup time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="message-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The amount of memory used to store message bodies in memory
 before they are paged out to disk.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="-1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="paging-directory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>
 Specifies where message bodies are written when the size
 of the message bodies in the JMS server exceeds the message
 buffer size. If unspecified, messages are written to the
 &lt;code&gt;tmp&lt;/code&gt; directory in the host WebLogic Server
 instance's directory. For example,
 &lt;code&gt;&lt;em&gt;domainName&lt;/em&gt;/servers/&lt;em&gt;servername&lt;/em&gt;/tmp&lt;/code&gt;.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="0" minOccurs="0" name="window-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum amount of time, in milliseconds, that a JMS sending agent 
 will wait before forwarding messages in a single batch.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="jmssaf-message-log-file" nillable="true" type="dom:jmssaf-message-log-fileType">
            <xs:annotation>
              <xs:documentation>The jms message log file configuration for this saf agent
 (Interface=weblogic.management.configuration.SAFAgentMBean Attribute=getJMSSAFMessageLogFile)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="error-handlingType">
    <xs:annotation>
      <xs:documentation>Corresponds to ErrorHandlingMBean
 (Interface=weblogic.management.configuration.ErrorHandlingMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="policy" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Policy</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="log-policy" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Policy</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="remote-saf-contextType">
    <xs:annotation>
      <xs:documentation>Corresponds to RemoteSAFContextMBean
 (Interface=weblogic.management.configuration.RemoteSAFContextMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="url" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>URL</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="protocol" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Protocol</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="username" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>UserName</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="password" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Password</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jndi-property" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>JndiProperty</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="jndi-initial-context-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>JndiInitialContextFactory</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="migratable-rmi-serviceType">
    <xs:annotation>
      <xs:documentation>Corresponds to MigratableRMIServiceMBean
 (Interface=weblogic.management.configuration.MigratableRMIServiceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="classname" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The rmi class name (including the package name)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="argument" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>You must provide an argument string to initialize or destroy the
 RMI class. This argument must be a string.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="webservice-securityType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebserviceSecurityMBean
 (Interface=weblogic.management.configuration.WebserviceSecurityMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="webservice-token-handler" nillable="true" type="dom:webservice-token-handlerType">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies the list of token handlers that have been configured for this
 Web Service security configuration.&lt;p&gt;
 (Interface=weblogic.management.configuration.WebserviceSecurityMBean Attribute=getWebserviceTokenHandlers)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="webservice-credential-provider" nillable="true" type="dom:webservice-credential-providerType">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies the list of credential providers that have been configured 
 for this Web Service security configuration.&lt;p&gt;
 (Interface=weblogic.management.configuration.WebserviceSecurityMBean Attribute=getWebserviceCredentialProviders)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="webservice-security-token" nillable="true" type="dom:webservice-security-tokenType">
            <xs:annotation>
              <xs:documentation>&lt;p&gt;Specifies the list of tokens that have been configured 
 for this Web Service security configuration.&lt;p&gt;
 (Interface=weblogic.management.configuration.WebserviceSecurityMBean Attribute=getWebserviceSecurityTokens)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="webservice-timestamp" nillable="true" type="dom:webservice-timestampType">
            <xs:annotation>
              <xs:documentation>Specifies the timestamp information that has been configured for this
 Web Service security configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="default-credential-provider-stsuri" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Gets the default STS endpoint URL for all WS-Trust enabled credential
  providers of this Web Service security configuration.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="policy-selection-preference" nillable="true">
            <xs:annotation>
              <xs:documentation>Gets the value of the PolicySelectionPreference attribute. &lt;/p&gt;
 &lt;p&gt;
 The preference value can be one of the following:
 &lt;ul&gt;
 &lt;li&gt;NONE
 &lt;li&gt;SCP
 &lt;li&gt;SPC
 &lt;li&gt;CSP
 &lt;li&gt;CPS
 &lt;li&gt;PCS
 &lt;li&gt;PSC
 &lt;/ul&gt;
 &lt;p&gt;
 Where: S: Security or functionality; C: Compatibility or Interoperability; P: Performance
 &lt;p&gt;
 If NONE is specified, no preference is applied - the
 first policy alternative is always chosen, and optional
 policy assertions are ignored.
 (Interface=weblogic.management.configuration.WebserviceSecurityMBean Attribute=getPolicySelectionPreference)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="NONE"/>
                <xs:enumeration value="SCP"/>
                <xs:enumeration value="SPC"/>
                <xs:enumeration value="CSP"/>
                <xs:enumeration value="CPS"/>
                <xs:enumeration value="PCS"/>
                <xs:enumeration value="PSC"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="compatibility-preference" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Gets the value of the compatiblityPreference attribute.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="compatibility-ordering-preference" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Gets the value of the compatiblityOrderingPreference attribute.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="webservice-token-handlerType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebserviceTokenHandlerMBean
 (Interface=weblogic.management.configuration.WebserviceTokenHandlerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:webservice-security-configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="handling-order" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Specifies the order in which the token handlers execute on a given 
 token. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="webservice-timestampType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebserviceTimestampMBean
 (Interface=weblogic.management.configuration.WebserviceTimestampMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="true" minOccurs="0" name="clock-synchronized" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specifies whether the Web Service assumes synchronized clocks.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="60000" minOccurs="0" name="clock-precision" nillable="false">
            <xs:annotation>
              <xs:documentation>DEPRECATED -- Use set/getClockSkew() -- If both ClockSkew and ClockPrecision
 are defined, then ClockSkew takes precedence and is used.
 &lt;p&gt;If clocks are synchronized, this attribute describes the accuracy of 
 the synchronization.&lt;/p&gt;
 (Interface=weblogic.management.configuration.WebserviceTimestampMBean Attribute=getClockPrecision)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="60000" minOccurs="0" name="clock-skew" nillable="false">
            <xs:annotation>
              <xs:documentation> ClockSkew takes precedence over ClockPrecision if both are defined,
 as ClockPrecision has been DEPRECATED.
 &lt;p&gt;If clocks are synchronized, this attribute describes the accuracy of
 the synchronization between two clocks: the client and the server.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="0"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="lax-precision" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>DEPRECATED. 
</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-processing-delay" nillable="false" type="xs:long">
            <xs:annotation>
              <xs:documentation>Specifies the freshness policy for received messages:
 the Web Service observes the processing delay by subtracting the Created
 time in the Timestamp from the current time.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="validity-period" nillable="false">
            <xs:annotation>
              <xs:documentation>Represents the length of time the sender wants the outbound message to 
 be valid. </xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="admin-consoleType">
    <xs:annotation>
      <xs:documentation>Corresponds to AdminConsoleMBean
 (Interface=weblogic.management.configuration.AdminConsoleMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="ADMINCONSOLESESSION" minOccurs="0" name="cookie-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Returns the Cookie Name used by the Administration
 Console. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="3600" minOccurs="0" name="session-timeout" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Returns Session Timeout value (in seconds) for
 Administration Console. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-distributed-topicType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSDistributedTopicMBean
 (Interface=weblogic.management.configuration.JMSDistributedTopicMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-distributed-destinationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-deploymentType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebDeploymentMBean
 (Interface=weblogic.management.configuration.WebDeploymentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="virtual-host" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.WebDeploymentMBean Attribute=getVirtualHostsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="foreign-jndi-objectType">
    <xs:annotation>
      <xs:documentation>Corresponds to ForeignJNDIObjectMBean
 (Interface=weblogic.management.configuration.ForeignJNDIObjectMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="local-jndi-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name that the remote object will be bound to in the local
 server's JNDI tree. This is the name that should be used to look up
 the object on the local server.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="remote-jndi-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name of the remote object that will be looked up in the
 remote JNDI directory.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jdbc-pool-componentType">
    <xs:annotation>
      <xs:documentation>Corresponds to JDBCPoolComponentMBean
 (Interface=weblogic.management.configuration.JDBCPoolComponentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:componentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="applicationType">
    <xs:annotation>
      <xs:documentation>Corresponds to ApplicationMBean
 (Interface=weblogic.management.configuration.ApplicationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="conversation-serviceType">
    <xs:annotation>
      <xs:documentation>Corresponds to ConversationServiceMBean
 (Interface=weblogic.management.configuration.ConversationServiceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="web-service-componentType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebServiceComponentMBean
 (Interface=weblogic.management.configuration.WebServiceComponentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:web-app-componentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="weblogicType">
    <xs:annotation>
      <xs:documentation>Corresponds to WebLogicMBean
 (Interface=weblogic.management.WebLogicMBean)</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="name" nillable="true" type="xs:string">
        <xs:annotation>
          <xs:documentation>The name of this configuration. WebLogic Server uses an MBean to
 implement and persist the configuration.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="foreign-jms-destinationType">
    <xs:annotation>
      <xs:documentation>Corresponds to ForeignJMSDestinationMBean
 (Interface=weblogic.management.configuration.ForeignJMSDestinationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:foreign-jndi-objectType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-templateType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSTemplateMBean
 (Interface=weblogic.management.configuration.JMSTemplateMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-dest-commonType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="cache-async-listenersType">
    <xs:annotation>
      <xs:documentation>Corresponds to CacheAsyncListenersMBean
 (Interface=weblogic.management.configuration.CacheAsyncListenersMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element default="false" minOccurs="0" name="enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Specify if listeners must be fired asynchronously
 (Interface=weblogic.management.configuration.CacheAsyncListenersMBean Attribute=getEnabled)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="work-manager" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The work manager to be used for firing event listeners asynchronously
 (Interface=weblogic.management.configuration.CacheAsyncListenersMBean Attribute=getWorkManager)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-connection-factoryType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSConnectionFactoryMBean
 (Interface=weblogic.management.configuration.JMSConnectionFactoryMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="xml-registry-entryType">
    <xs:annotation>
      <xs:documentation>Corresponds to XMLRegistryEntryMBean
 (Interface=weblogic.management.configuration.XMLRegistryEntryMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="public-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the public id of the document type represented by this
 registry entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="system-id" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the system id of the document type represented by this
 registry entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="root-element-tag" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the tag name of the document root element of the
 document type represented by this registry entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="entity-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the path name to a local copy of an external entity
 (e.g., a DTD) that is associated with this registry entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="parser-class-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the class name of any custom XML parser that is
 associated with the registry entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="document-builder-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the class name of the DocumentBuilderFactory that is
 associated with the registry entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="sax-parser-factory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides the class name of the SAXParserFactory that is
 associated with the registry entry.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-jdbc-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSJDBCStoreMBean
 (Interface=weblogic.management.configuration.JMSJDBCStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-storeType">
        <xs:sequence>
          <xs:element minOccurs="0" name="prefix-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The prefix for the JDBC store's database table
 (&lt;code&gt;WLStore&lt;/code&gt;), in the following format:
 &lt;code&gt;[[[catalog.]schema.]prefix]&lt;/code&gt;.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="create-table-ddl-file" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Specifies the DDL (Data Definition Language) file to use for
 creating the JDBC store's backing table.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="http-proxyType">
    <xs:annotation>
      <xs:documentation>Corresponds to HTTPProxyMBean
 (Interface=weblogic.management.configuration.HTTPProxyMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="initial-connections" nillable="false">
            <xs:annotation>
              <xs:documentation>The number of initial connections that should be opened to
 each server in the back end servers.&lt;/p&gt;
 (Interface=weblogic.management.configuration.HTTPProxyMBean Attribute=getInitialConnections)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="0"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="100" minOccurs="0" name="max-connections" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum number of connections that each server can open
 to the back end servers.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="65535"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="server-list" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The list of servers in the back end that the HCS should proxy
 to.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="5" minOccurs="0" name="health-check-interval" nillable="false">
            <xs:annotation>
              <xs:documentation>The health check interval in milliseconds between pings.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
                <xs:maxInclusive value="300"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="3" minOccurs="0" name="max-retries" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The max retries after which the server will be marked dead.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="60" minOccurs="0" name="max-health-check-interval" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>The maximum interval between health checks.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-file-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSFileStoreMBean
 (Interface=weblogic.management.configuration.JMSFileStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-storeType">
        <xs:sequence>
          <xs:element minOccurs="0" name="directory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path name to the file system directory where the file store
 maintains its data files.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="synchronous-write-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>&lt;pThe policy that determines how a file store writes data to disk and affects performance, 
 scalability, and reliability of a file store. Oracle recommends &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt; which 
 tends to have the highest performance. The default value is &lt;code&gt;Direct-Write&lt;/code&gt;. To view a running file 
 store's synchronous write policy and driver, check the BEA-280050 message in the server log./p&gt;
 The valid options are:
 &lt;ul&gt;
 &lt;li&gt;&lt;code&gt;Direct-Write&lt;/code&gt;: Direct I/O is supported on all platforms. 
 When available, file stores in direct I/O mode automatically load the 
 native I/O &lt;code&gt;wlfileio2&lt;/code&gt; driver. This option tends to out-perform 
 &lt;code&gt;Cache-Flush&lt;/code&gt; and tend to be slower than &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt;. 
 This mode does not require a  native store &lt;code&gt;wlfileio&lt;/code&gt;driver, but 
 performs faster when they are available.  &lt;/li&gt;

 &lt;li&gt;&lt;code&gt;Direct-Write-With-Cache&lt;/code&gt;: Store records 
 are written synchronously to primary files in the directory 
 specified by &lt;code&gt;Store Directory&lt;/code&gt; and  
 asynchronously to a corresponding cache file in 
 the &lt;code&gt;Cache Directory&lt;/code&gt;. The &lt;code&gt;Cache Directory&lt;/code&gt; 
 provides information about disk space, locking, security, and 
 performance implications. Requires a native store &lt;code&gt;wlfileio&lt;/code&gt; 
 driver, if the native driver cannot be loaded, then the write mode 
 automatically switches to &lt;code&gt;Direct-Write&lt;/code&gt;.  
 see setCacheDirectory(String cacheDirectory)  CacheDirectory

 &lt;li&gt;&lt;code&gt;Cache-Flush&lt;/code&gt;: Transactions cannot complete until all 
 of their writes have been flushed down to disk. This policy is reliable and scales well
 as the number of simultaneous users increases. Transactionally safe but 
 tends to be a lower performer than direct-write policies.&lt;/li&gt;

 &lt;li&gt;&lt;code&gt;Disabled&lt;/code&gt;: Transactions are treated as
 complete as soon as their associated writes are cached 
 in machine memory instead of waiting for the writes to 
 successfully reach the disk. This is the fastest policy because 
 write requests do not block waiting to be synchronized 
 to disk, but, unlike other policies, is not transactionally 
 safe in the event of operating system or hardware failures.
 Such failures can lead to duplicate or lost data/messages.
 This option does not require native store &lt;code&gt;wlfileio&lt;/code&gt; 
 drivers, but may run faster when they are available. Some 
 non-WebLogic JMS vendors default to a policy that 
 is equivalent to &lt;code&gt;Disabled&lt;code&gt;. &lt;/li&gt;
 &lt;/ul&gt;

 Notes: &lt;ul&gt;
 &lt;li&gt;When available, file stores load WebLogic &lt;code&gt;wlfileio&lt;/code&gt; native drivers, 
 which can improve performance. These drivers are included with Windows, Solaris, 
 Linux, HP-UX, and AIX WebLogic installations. 
 &lt;li&gt;Certain older versions of Microsoft Windows may incorrectly report 
 storage device synchronous write completion if the Windows default &lt;code&gt;Write Cache Enabled&lt;/code&gt;
 setting is used. This violates the transactional semantics of transactional products
 (not specific to Oracle), including file stores configured with a &lt;code&gt;Direct-Write&lt;/code&gt; (default)
 or &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt; policy, as a system crash or power failure
 can lead to a loss or a duplication of records/messages. One of the visible symptoms 
 is that this problem may manifest itself in high persistent message/transaction 
 throughput exceeding the physical capabilities of your storage device. You can 
 address the problem by applying a Microsoft supplied patch, disabling the Windows
 &lt;code&gt;Write Cache Enabled&lt;/code&gt; setting, or by using a power-protected storage 
 device. 
 See &lt;a href=http://support.microsoft.com/kb/281672/ and http://support.microsoft.com/kb/332023&lt;/a&gt;.
 (Interface=weblogic.management.configuration.JMSFileStoreMBean Attribute=getSynchronousWritePolicy)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Disabled"/>
                <xs:enumeration value="Cache-Flush"/>
                <xs:enumeration value="Direct-Write"/>
                <xs:enumeration value="Direct-Write-With-Cache"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="cache-directory" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The location of the cache directory for 
 &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt;, ignored for other policies.
 When &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt; is specified as the &lt;code&gt;SynchronousWritePolicy&lt;/code&gt;, 
 cache files are created in addition to primary files (see &lt;a href='#getStoreDirectory())'&gt;Store Directory&lt;/a&gt;
 for the location of primary files). If a cache directory location is specified, 
 the path is &lt;code&gt;&lt;i&gt;CacheDirectory&lt;/i&gt;/WLStoreCache/&lt;i&gt;StoreName&lt;/i&gt;-&lt;i&gt;FileNum&lt;/i&gt;.DAT.cache&lt;/code&gt;. 
 When specified, Oracle recommends using absolute paths, but if the directory location 
 is a relative path, then &lt;code&gt;&lt;i&gt;CacheDirectory&lt;/i&gt;&lt;/code&gt; is created relative to the WebLogic 
 Server instance's home directory. If "" or &lt;code&gt;Null&lt;/code&gt; is specified, the &lt;code&gt;CacheDirectory&lt;/code&gt; 
 is located in the current operating system &lt;code&gt;temp&lt;/code&gt; dir as determined by 
 the (&lt;code&gt;java.io.tmpdir&lt;/code&gt;) Java System property (for example: &lt;code&gt;/tmp&lt;/code&gt;
 on UNIX, &lt;code&gt;%TEMP% &lt;/code&gt; on Windows) and is 
 &lt;code&gt; &lt;i&gt;TempDirectory&lt;/i&gt;/WLStoreCache/&lt;i&gt;DomainName&lt;/i&gt;/&lt;i&gt;unique-id&lt;/i&gt;/&lt;i&gt;StoreName&lt;/i&gt;-&lt;i&gt;FileNum&lt;/i&gt;.DAT.cache". 
 The value of &lt;code&gt;java.io.tmpdir&lt;/code&gt; varies between operating systems and configurations, 
 and can be overridden by passing &lt;code&gt;-Djava.io.tmpdir=&lt;i&gt;My_path&lt;/i&gt;&lt;/code&gt; on the JVM command line. </xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="min-window-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The minimum amount of data, in bytes and rounded down to the nearest power of 2, mapped into the 
 JVM's address space per primary store file. Applies to synchronous write policies &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt; 
 and &lt;code&gt;Disabled&lt;/code&gt;, but only when a native &lt;code&gt;wlfileio&lt;/code&gt; library is loaded. See
 &lt;a href='#getMaxWindowBufferSize'&gt; MaxWindowBufferSize&lt;/a&gt;.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="1073741824"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="max-window-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum amount of data, in bytes and rounded down to the nearest power of 2,  mapped into the 
 JVM's address space per primary store file. A window buffer does not consume Java heap memory, 
 but does consume off-heap (native) memory. If the store is unable to allocate the 
 requested buffer size, it allocates smaller and smaller buffers until it reaches
 &lt;code&gt;MinWindowBufferSize&lt;/code&gt;. If the store cannot honor &lt;code&gt;MinWindowBufferSize&lt;/code&gt;, it fails.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="1073741824"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="-1" minOccurs="0" name="io-buffer-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The I/O buffer size, in bytes, automatically rounded down to the nearest power of 2.
 &lt;ul&gt;
 &lt;li&gt; For &lt;code&gt;Direct-Write-With-Cache&lt;/code&gt; policy when a native
 &lt;code&gt;wlfileio&lt;/code&gt; driver is available, &lt;code&gt;IOBufferSize&lt;/code&gt; describes 
 the maximum portion of a cache view that is passed to a system call. It 
 does not consume off-heap (native) or Java heap memory.&lt;/li&gt;

 &lt;li&gt; For the &lt;code&gt;Direct-Write&lt;/code&gt; and &lt;code&gt;Cache-Flush&lt;/code&gt; policies, 
 &lt;code&gt;IOBufferSize&lt;/code&gt; is the size of a per store buffer which consumes 
 off-heap (native) memory, where one buffer is allocated during run-time, 
 but multiple buffers may be temporarily created during boot recovery.&lt;/li&gt;

 &lt;li&gt;When a native &lt;code&gt;wlfileio&lt;/code&gt; driver is not available, 
 the setting applies to off-heap (native) memory for all policies (including &lt;code&gt;Disabled&lt;/code&gt;).&lt;/li&gt;

 &lt;li&gt;For the best runtime performance, Oracle recommends setting 
 &lt;code&gt;IOBufferSize&lt;/code&gt; so that it is larger than the largest 
 write (multiple concurrent store requests may be combined into a single write).&lt;/li&gt;

 &lt;li&gt;For the best boot recovery time performance of large stores, 
 Oracle recommends setting &lt;code&gt;IOBufferSize&lt;/code&gt; to at least 2 megabytes.&lt;/li&gt;

 See &lt;code&gt;AllocatedIOBufferBytes&lt;/code&gt; to find out the actual allocated 
 off-heap (native) memory amount. It is a multiple of &lt;code&gt;AllocatedIOBufferBytes&lt;/code&gt; 
 for the &lt;code&gt;Direct-Write&lt;/code&gt; and &lt;code&gt;Cache-Flush&lt;/code&gt; policies, 
 and zero otherwise).&lt;/li&gt;

&lt;li&gt; See &lt;a href='#AllocatedIOBufferBytes'&gt;AllocatedIOBufferBytes&lt;/a&gt;.
 &lt;/ul&gt;</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="-1"/>
                <xs:maxInclusive value="67108864"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1342177280" minOccurs="0" name="max-file-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The maximum file size, in bytes.  
 &lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;MaxFileSize&lt;/code&gt; value affects the number of files needed to accommodate 
 a store of a particular size (number of files = store size/MaxFileSize rounded up).&lt;/li&gt;

 &lt;li&gt;A file store automatically reuses space freed by deleted records and automatically 
  expands individual files up to &lt;code&gt;MaxFileSize&lt;/code&gt; if there is not enough space for a new 
 record. If there is no space left in exiting files for a new record, a store creates an additional file.&lt;/li&gt;

 &lt;li&gt; A small number of larger files is normally preferred over a large number of smaller files 
 as each file allocates Window Buffer and file handles. &lt;/li&gt;

 BlockSize, then &lt;code&gt;MaxFileSize&lt;/code&gt; is 
 ignored, and the actual maximum file size is used for this value. The default block size is 512, 
 512 is 8 GB. &lt;/li&gt;

&lt;li&gt; See &lt;a href='#getInitialSize())'&gt;InitialSize&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="1048576"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="512" minOccurs="0" name="block-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The smallest addressable block, in bytes, of a file.</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="512"/>
                <xs:maxInclusive value="8192"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1048576" minOccurs="0" name="initial-size" nillable="false">
            <xs:annotation>
              <xs:documentation>The initial file size, in bytes. 
 &lt;ul&gt;
 &lt;li&gt;Set &lt;code&gt;InitialSize&lt;/code&gt; to pre-allocate 
 file space during a file store boot. If &lt;code&gt;InitialSize&lt;/code&gt; exceeds &lt;code&gt;MaxFileSize&lt;/code&gt;, 
 a store creates multiple files (number of files = &lt;code&gt;InitialSize&lt;/code&gt;/&lt;code&gt;MaxFileSize&lt;/code&gt; rounded up).&lt;/li&gt;

 &lt;li&gt;A file store automatically reuses the space from deleted records and automatically expands a file if there is not enough space for a new write request.&lt;/li&gt;

 &lt;li&gt;Use &lt;code&gt;InitialSize&lt;/code&gt; to limit or prevent file expansions 
 during runtime, as file expansion introduces temporary latencies that may be noticeable 
 under rare circumstances. &lt;/li&gt;
 &lt;li&gt;Changes to initial size only take effect for new file stores, or after any current files have been deleted prior to restart.&lt;/li&gt;

 &lt;li&gt; See &lt;a href='#getMaxFileSize()'&gt;MaxFileSize&lt;/a&gt;.
 &lt;/ul&gt;</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="1048576"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="file-locking-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Determines whether OS file locking is used. </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="virtual-destinationType">
    <xs:annotation>
      <xs:documentation>Corresponds to VirtualDestinationMBean
 (Interface=weblogic.management.configuration.VirtualDestinationMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="jndi-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The JNDI name used to look up a virtual destination within the
 JNDI namespace. Applications can use the JNDI name to look up the
 virtual destination. If not specified, then the destination is not
 bound into the JNDI namespace.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="sca-containerType">
    <xs:annotation>
      <xs:documentation>Corresponds to SCAContainerMBean
 (Interface=weblogic.management.configuration.SCAContainerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="timeout" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SCAContainerMBean Attribute=getTimeout)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="autowire" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SCAContainerMBean Attribute=isAutowire)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="allows-pass-by-reference" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SCAContainerMBean Attribute=isAllowsPassByReference)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="remotable" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SCAContainerMBean Attribute=isRemotable)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="max-idle-time" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Get max idle time of the a stateful service
 (Interface=weblogic.management.configuration.SCAContainerMBean Attribute=getMaxIdleTime)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="max-age" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Get max of a stateful service
 (Interface=weblogic.management.configuration.SCAContainerMBean Attribute=getMaxAge)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="single-principal" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SCAContainerMBean Attribute=isSinglePrincipal)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jdbc-multi-poolType">
    <xs:annotation>
      <xs:documentation>Corresponds to JDBCMultiPoolMBean
 (Interface=weblogic.management.configuration.JDBCMultiPoolMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-destination-keyType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSDestinationKeyMBean
 (Interface=weblogic.management.configuration.JMSDestinationKeyMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="cache-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to CacheStoreMBean
 (Interface=weblogic.management.configuration.CacheStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="custom-store" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The cache store to be used for store backed caches
 (Interface=weblogic.management.configuration.CacheStoreMBean Attribute=getCustomStore)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="write-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.CacheStoreMBean Attribute=getWritePolicy)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="None"/>
                <xs:enumeration value="WriteThrough"/>
                <xs:enumeration value="WriteBehind"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="work-manager" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>Sets the work manager that schedules
 the thread that writes to the backing store asynchronously
 (Interface=weblogic.management.configuration.CacheStoreMBean Attribute=getWorkManager)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="100" minOccurs="0" name="buffer-max-size" nillable="false">
            <xs:annotation>
              <xs:documentation>Sets the upper limit for the store buffer
 that's used to write out updates to the store. A value of 0 indicates
 no limit
 (Interface=weblogic.management.configuration.CacheStoreMBean Attribute=getBufferMaxSize)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="buffer-write-timeout" nillable="false">
            <xs:annotation>
              <xs:documentation>Sets the time in milliseconds that the
 user thread will wait before aborting an attempt to write to the buffer.
 The attempt to write to the store buffer fails only in case the 
 buffer is
 full. After the timeout, futher attempts may be made to write 
 to the buffer
 based on the value of StoreBufferWriteAttempts
 (Interface=weblogic.management.configuration.CacheStoreMBean Attribute=getBufferWriteTimeout)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:long">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="buffer-write-attempts" nillable="false">
            <xs:annotation>
              <xs:documentation>Sets the number of attempts that the
 user thread will make to write to the store buffer.
 (Interface=weblogic.management.configuration.CacheStoreMBean Attribute=getBufferWriteAttempts)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element default="1" minOccurs="0" name="store-batch-size" nillable="false">
            <xs:annotation>
              <xs:documentation>Sets the number of user updates that are
 picked up from the store buffer to write back to the backing store
 (Interface=weblogic.management.configuration.CacheStoreMBean Attribute=getStoreBatchSize)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="domain-targetedType">
    <xs:annotation>
      <xs:documentation>Corresponds to DomainTargetedMBean
 (Interface=weblogic.management.configuration.DomainTargetedMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ejb-componentType">
    <xs:annotation>
      <xs:documentation>Corresponds to EJBComponentMBean
 (Interface=weblogic.management.configuration.EJBComponentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:componentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="java-compiler" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The path to the Java compiler to use to compile EJBs (e.g. "sj"
 or "javac"). Note: the default must be null. If no JavaCompiler is
 specified on this specific EJBComponent, the default will be pulled
 in the following order from - EJBContainerMBean -
 Server.JavaCompiler.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="java-compiler-pre-class-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides a list of the options to prepend to the Java compiler
 classpath when you compile Java code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="java-compiler-post-class-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Provides a list of the options to append to the Java compiler
 classpath when you compile Java code.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="extra-rmic-options" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The extra options passed to rmic during server-side generation
 are noted here. The default for this attribute must be null. If no
 ExtraRmicOptions are specified on the EJBComponent, the default
 will be pulled from Server.ExtraRmicOptions.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="true" minOccurs="0" name="keep-generated" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>indicates whether KeepGenerated is enabled and the ejbc source
 files will be kept.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="force-generation" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>Indicates whether the ForceGeneration is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="tmp_ejb" minOccurs="0" name="tmp-path" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Return the temporary directory where generated files are stored
 by ejbc. Deprecated: All EJB compiler output is now stored in the
 EJBCompilerCache subdirectory of the server staging directory. This
 directory should not be described as "temporary" since removing it
 would cause the EJB compiler to be rerun as necessary the next time
 the server is restarted.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="false" minOccurs="0" name="verbose-ejb-deployment-enabled" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Indicates whether the VerboseEJBDeployment is enabled.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="extra-ejbc-options" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Returns the extra options passed to ejbc during the dynamic ejbc
 of a jar file. For example: -J-mx128m By default this value is
 null. If no ExtraEJBCOptions are specified on the EJBComponent, the
 default will be pulled from the Server.ExtraEJBCOptions.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="foreign-jms-connection-factoryType">
    <xs:annotation>
      <xs:documentation>Corresponds to ForeignJMSConnectionFactoryMBean
 (Interface=weblogic.management.configuration.ForeignJMSConnectionFactoryMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:foreign-jndi-objectType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="adminType">
    <xs:annotation>
      <xs:documentation>Corresponds to AdminMBean
 (Interface=weblogic.management.configuration.AdminMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="cache-transactionType">
    <xs:annotation>
      <xs:documentation>Corresponds to CacheTransactionMBean
 (Interface=weblogic.management.configuration.CacheTransactionMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="concurrency" nillable="true">
            <xs:annotation>
              <xs:documentation>Setting this property to something other than none will make this
 cache transactional
 (Interface=weblogic.management.configuration.CacheTransactionMBean Attribute=getConcurrency)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="Pessimistic"/>
                <xs:enumeration value="Optimistic"/>
                <xs:enumeration value="None"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="isolation-level" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.CacheTransactionMBean Attribute=getIsolationLevel)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="admin-serverType">
    <xs:annotation>
      <xs:documentation>Corresponds to AdminServerMBean
 (Interface=weblogic.management.configuration.AdminServerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jdbc-data-sourceType">
    <xs:annotation>
      <xs:documentation>Corresponds to JDBCDataSourceMBean
 (Interface=weblogic.management.configuration.JDBCDataSourceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jdbc-tx-data-sourceType">
    <xs:annotation>
      <xs:documentation>Corresponds to JDBCTxDataSourceMBean
 (Interface=weblogic.management.configuration.JDBCTxDataSourceMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="stuck-thread-actionType">
    <xs:annotation>
      <xs:documentation>Corresponds to StuckThreadActionMBean
 (Interface=weblogic.management.configuration.StuckThreadActionMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="work-manager-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>WorkManager name for which stuck thread actions need to be performed.
 (Interface=weblogic.management.configuration.StuckThreadActionMBean Attribute=getWorkManagerName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="module-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Module name to which the stuck WorkManager belongs
 (Interface=weblogic.management.configuration.StuckThreadActionMBean Attribute=getModuleName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="application-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Application name to which the stuck WorkManager belongs
 (Interface=weblogic.management.configuration.StuckThreadActionMBean Attribute=getApplicationName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="max-stuck-threads-count" nillable="false" type="xs:int">
            <xs:annotation>
              <xs:documentation>Minimum number of stuck threads required to take action
 (Interface=weblogic.management.configuration.StuckThreadActionMBean Attribute=getMaxStuckThreadsCount)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="action-code" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Action to be taken when the stuck thread limit is reached.
 (Interface=weblogic.management.configuration.StuckThreadActionMBean Attribute=getActionCode)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="cacheType">
    <xs:annotation>
      <xs:documentation>Corresponds to CacheMBean
 (Interface=weblogic.management.configuration.CacheMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="jndi-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The JNDI name that the cache should to be bound to
 (Interface=weblogic.management.configuration.CacheMBean Attribute=getJNDIName)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element default="64" minOccurs="0" name="max-cache-units" nillable="false">
            <xs:annotation>
              <xs:documentation>Maximum number of cache elements in memory after which eviction/paging
 occurs. This value is defined as an Integer.
 (Interface=weblogic.management.configuration.CacheMBean Attribute=getMaxCacheUnits)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:int">
                <xs:minInclusive value="1"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="expiration" nillable="true" type="dom:cache-expirationType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.CacheMBean Attribute=getExpiration)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="eviction-policy" nillable="true">
            <xs:annotation>
              <xs:documentation>The eviction policy to choose when the number of entries in cache
 hits the maximum
 (Interface=weblogic.management.configuration.CacheMBean Attribute=getEvictionPolicy)</xs:documentation>
            </xs:annotation>
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="LRU"/>
                <xs:enumeration value="NRU"/>
                <xs:enumeration value="FIFO"/>
                <xs:enumeration value="LFU"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
          <xs:element minOccurs="0" name="work-manager" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Set the default work manager to use for all asynchronous caching tasks.
 If none of the specific work managers are specified, this work manager 
 is used. This work manager may be overriden by other work managers
 configured for specific tasks like store backup, listeners etc
 (Interface=weblogic.management.configuration.CacheMBean Attribute=getWorkManager)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="loader" nillable="true" type="dom:cache-loaderType">
            <xs:annotation>
              <xs:documentation>The configuration parameters for self-loading caches
 (Interface=weblogic.management.configuration.CacheMBean Attribute=getLoader)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="store" nillable="true" type="dom:cache-storeType">
            <xs:annotation>
              <xs:documentation>The configuraiton parameters for self-backing caches
 (Interface=weblogic.management.configuration.CacheMBean Attribute=getStore)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="transactional" nillable="true" type="dom:cache-transactionType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.CacheMBean Attribute=getTransactional)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="async-listeners" nillable="true" type="dom:cache-async-listenersType">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.CacheMBean Attribute=getAsyncListeners)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="cache-loaderType">
    <xs:annotation>
      <xs:documentation>Corresponds to CacheLoaderMBean
 (Interface=weblogic.management.configuration.CacheLoaderMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType">
        <xs:sequence>
          <xs:element minOccurs="0" name="custom-loader" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The custom loader to be used for self loading caches
 (Interface=weblogic.management.configuration.CacheLoaderMBean Attribute=getCustomLoader)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-topicType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSTopicMBean
 (Interface=weblogic.management.configuration.JMSTopicMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-destinationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="persistent-storeType">
    <xs:annotation>
      <xs:documentation>Corresponds to PersistentStoreMBean
 (Interface=weblogic.management.configuration.PersistentStoreMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="logical-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The name used by subsystems to refer to different stores on
 different servers using the same name.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="xa-resource-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>Overrides the name of the XAResource that this store registers
 with JTA.</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="foreign-jms-serverType">
    <xs:annotation>
      <xs:documentation>Corresponds to ForeignJMSServerMBean
 (Interface=weblogic.management.configuration.ForeignJMSServerMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:deploymentType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="domain-log-filterType">
    <xs:annotation>
      <xs:documentation>Corresponds to DomainLogFilterMBean
 (Interface=weblogic.management.configuration.DomainLogFilterMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:configurationType"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="connector-componentType">
    <xs:annotation>
      <xs:documentation>Corresponds to ConnectorComponentMBean
 (Interface=weblogic.management.configuration.ConnectorComponentMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:componentType">
        <xs:sequence>
          <xs:element minOccurs="0" name="connection-profiling-enabled" nillable="false" type="xs:boolean">
            <xs:annotation>
              <xs:documentation>The flag that indicates whether to store connection call
 stacks.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="authentication-mechanisms" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.ConnectorComponentMBean Attribute=getAuthenticationMechanismsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="singleton-service-app-scopedType">
    <xs:annotation>
      <xs:documentation>Corresponds to SingletonServiceAppScopedMBean
 (Interface=weblogic.management.configuration.SingletonServiceAppScopedMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:singleton-service-baseType">
        <xs:sequence>
          <xs:element minOccurs="0" name="class-name" nillable="false" type="xs:string">
            <xs:annotation>
              <xs:documentation>The fully qualified name of a class to load and run. The class
 must be on the server's classpath.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="sub-deployment" nillable="true" type="dom:sub-deploymentType">
            <xs:annotation>
              <xs:documentation>The subdeployment groups within this JMS module. Subdeployments enable 
 you to deploy some resources in a JMS module to a JMS server and other 
 JMS resources to a server instance or cluster.</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="target" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.SingletonServiceAppScopedMBean Attribute=getTargetsAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="module-type" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>The values match those defined by jsr88. This attribute may move to another MBean.
 (Interface=weblogic.management.configuration.SingletonServiceAppScopedMBean Attribute=getModuleType)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="compatibility-name" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>
 This is only set for beans created as a result of conversion from an
 8.1 application configured using ApplicationMBean and ComponentMBean.
 </xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="jms-distributed-topic-memberType">
    <xs:annotation>
      <xs:documentation>Corresponds to JMSDistributedTopicMemberMBean
 (Interface=weblogic.management.configuration.JMSDistributedTopicMemberMBean)</xs:documentation>
    </xs:annotation>
    <xs:complexContent>
      <xs:extension base="dom:jms-distributed-destination-memberType">
        <xs:sequence>
          <xs:element minOccurs="0" name="jms-topic" nillable="true" type="xs:string">
            <xs:annotation>
              <xs:documentation>(Interface=weblogic.management.configuration.JMSDistributedTopicMemberMBean Attribute=getJMSTopicAsString)</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:element name="domain" type="dom:domainType"/>
</xs:schema>
