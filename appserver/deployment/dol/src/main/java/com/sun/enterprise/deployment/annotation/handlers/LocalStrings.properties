#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

enterprise.deployment.annotation.handlers.invalidaehandler=Invalid annotation symbol found for this type of class.
enterprise.deployment.annotation.handlers.cantfindmsglistenerintf=Cannot find message listener interface for bean class.
enterprise.deployment.annotation.handlers.ambiguousimplementsclause=Implements clause for 3.x bean class {0} in {1} declares more than one potential business interface.  In this case, the @Remote and/or @Local annotations must be used to identify the business interfaces.
enterprise.deployment.annotation.handlers.invalidtypelevelresource=Invalid TYPE-level @Resource with name() = [{0}] and type = [{1}] in {2}. Each TYPE-level @Resource must specify both name() and type().
enterprise.deployment.annotation.handlers.nonametypelevel=TYPE-Level annotation  must specify name member.
enterprise.deployment.annotation.handlers.invalidinjectionmethod=Injection on a method requires a JavaBeans setter method type with one parameter
enterprise.deployment.annotation.handlers.injectionmethodmustreturnvoid=Injection on a method requires a void return type
enterprise.deployment.annotation.handlers.classnotannotated=Class must be annotated with a {1} annotation\n symbol : {1}\n location: {0}
enterprise.deployment.annotation.handlers.invalidannotationforthisclass=illegal annotation for this class will be ignored
enterprise.deployment.annotation.handlers.invalidinjectionmethodname=Injection method name must start with \"set\"
enterprise.deployment.annotation.handlers.injectionmethodnotstatic=Injection methods for application clients must be declared STATIC
enterprise.deployment.annotation.handlers.injectionfieldnotstatic=Injection fields for application clients must be declared STATIC
enterprise.deployment.annotation.handlers.typeinhernotsupp=The annotation symbol inheritance is not supported.
enterprise.deployment.annotation.handlers.morethanoneauthannotation=One cannot have more than one of @RolesAllowed, @PermitAll, @DenyAll in the same AnnotatedElement.
enterprise.deployment.annotation.handlers.warningdenyalltransportprotected=One should not have @DenyAll and @TransportProtected together. The @TransportProtected would be ignored.
enterprise.deployment.annotation.handlers.typenotfound=TYPE-level annotation symbol must specify type member.
enterprise.deployment.annotation.handlers.invalidtype=Annotation not allowed on this element.  
enterprise.deployment.annotation.handlers.classnotfound=Class {0} referenced from annotation symbol cannot be loaded
enterprise.deployment.annotation.handlers.componentnotfound=Component referenced from annotation symbol cannot be found
enterprise.deployment.annotation.handlers.handlerfilenotfound=Handler file {0} not found
enterprise.deployment.annotation.handlers.parserexception={0} XML Parsing error : line  {1} ; Error = {2}
enterprise.deployment.annotation.handlers.wrongannotationlocation=Symbol annotation can only be specified on TYPE
enterprise.deployment.annotation.handlers.handlerfilehandlernotfound=Handler class {0} specified in handler file {1} cannot be loaded
enterprise.deployment.annotation.handlers.ddhandlernotfound=Handler class {0} specified in deployment descriptors
enterprise.deployment.annotation.handlers.handlerchainnotfound=Unable to get @HandlerChainin {0}
enterprise.deployment.annotation.handlers.webeppkgwrong=Class {0} is annotated with @WebService and without @Stateless but is packaged in a JAR. If it is supposed to be a servlet endpoint, it should be packaged in a WAR; Deployment will continue assuming this class to be just a POJO used by other classes in the JAR being deployed
enterprise.deployment.annotation.handlers.ejbeppkgwrong=Class {0} is annotated with @WebService and @Stateless but is packaged in a WAR. If it is supposed to be an EJB endpoint, it should be packaged in a JAR; Deployment will continue assuming this class to be just a POJO used by other classes in the WAR being deployed
enterprise.deployment.annotation.handlers.wrongresourceclass=Incorrect @Resource annotation class definition - missing lookup attribute
enterprise.deployment.annotation.handlers.invalidauthenticationtype=Invalid AuthenticationType [{0}] in @Resource with name() = [{1}] and type = [{1}] in {2}.
enterprise.deployment.annotation.handlers.needtoimpllistenerinterface=The Class {0} having annotation javax.servlet.annotation.WebListener need to implement one of the following interfaces: javax.servlet.ServletContextLisener, javax.servlet.ServletContextAttributeListener, javax.servlet.ServletRequestListener, javax.servletServletRequestAttributeListener, javax.servlet.http.HttpSessionListener, javax.servlet.http.HttpSessionAttributeListener, javax.servlet.http.HttpSessionIdListener.
lifecycle_method_invalid_param_size=The lifecycle method [{0}] must not have more than one parameter
lifecycle_method_no_checked_exception=The lifecycle method [{0}] must not throw a checked exception
lifecycle_method_return_type_void=The return type of the lifecycle method [{0}] must be void
