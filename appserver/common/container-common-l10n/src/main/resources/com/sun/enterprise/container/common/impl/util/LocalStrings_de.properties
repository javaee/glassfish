#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2011-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#


injection-manager.no-descriptor-registered-for-invocation=Kein Deskriptor f\u00FCr aktuellen Aufruf {0} registriert
injection-manager.no-descriptor-registered-for-component=Kein Deskriptor f\u00FCr componentId {0} registriert
injection-manager.null-invocation-context=Null-Aufrufkontext
injection-manager.error-creating-managed-object=Fehler beim Erstellen des verwalteten Objekts f\u00FCr Klasse: {0}
injection-manager.illegal-use-of-static-field=Unzul\u00E4ssige Verwendung des statischen Feldes f\u00FCr Klasse, die nur instanzbasierte Injection unterst\u00FCtzt: {0}
injection-manager.appclient-injected-field-must-be-static=Durch Injection eingef\u00FCgtes Feld {0} in Anwendungsclientklasse {1} muss als statisch deklariert werden
injection-manager.injecting-dependency-field=Abh\u00E4ngigkeit mit logischem Namen {0} wird in Feld {1} in Klasse {2} durch Injection eingef\u00FCgt
injection-manager.illegal-use-of-static-method=Unzul\u00E4ssige Verwendung der statischen Methode in Klasse, die nur instanzbasierte Injection unterst\u00FCtzt: {0}
injection-manager.appclient-injected-method-must-be-static=Durch Injection eingef\u00FCgte Methode {0} bei Anwendungsclientklasse {1} muss als statisch deklariert werden
injection-manager.injecting-dependency-method=Abh\u00E4ngigkeit mit logischem Namen {0} wird in Methode {1} bei Klasse {2} durch Injection eingef\u00FCgt
injection-manager.exception-to-inject=Exception beim Versuch, {0} in {1} durch Injection einzuf\u00FCgen: {2}
injection-manager.exception-invoke-lifecycle-method=Exception beim Versuch, Lebenszyklusmethode {0} aufzurufen
injection-manager.calling-lifecycle-method=Lebenszyklusmethode {0} wird bei Klasse {1} aufgerufen
injection-manager.field-not-found=InjectionManager-Exception. Feld {0} in Klasse {1} nicht gefunden
injection-manager.method-not-found=InjectionManager-Exception. Methode: void {0} ({1}) in Klasse {2} nicht gefunden
injection-manager.postconstruct-not-found=InjectionManager-Exception. PostConstruct-Methode {0} in Klasse {1} nicht gefunden
injection-manager.predestroy-not-found=InjectionManager-Exception. PreDestroy-Methode {0} in Klasse {1} nicht gefunden

