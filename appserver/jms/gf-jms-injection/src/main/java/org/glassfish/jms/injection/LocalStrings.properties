#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2012-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

txn.mgr.failure=Unable to retrieve transaction manager.
txn.detection.failure=Failed to detect transaction status of current thread.
JMSContext.injection.initialization=Injecting JMSContext wrapper with id {0} and metadata [{1}].
JMSContext.delegation.type="JMSContext wrapper with id {0} is delegating to {1} instance.
JMSContext.injection.cleanup=Cleaning up {0} JMSContext wrapper with id {1} and metadata [{2}].
ContextNotActiveException.msg=An injected JMSContext cannot be used when there is neither a transaction or a valid request scope.
JMSContext.injection.cleanup.failure=Failed to cleaning up {0} JMSContext wrapper with id {1} and metadata [{2}]. Reason: {3}.
JMSContext.injection.not.supported=This method is not permitted on a container-managed (injected) JMSContext.
initialContext.init.exception=Cannot create InitialContext.
connectionFactory.not.found=ConnectionFactory not found with lookup {0}.
JMSContext.impl.create=Created new JMSContext instance associated with id {0}: {1}.
JMSContext.impl.close=Closed JMSContext instance associated with id {0}: {1}.
JMSContext.impl.close.failure=Failed to close JMSContext instance associated with id {0}: {1}.
decrypt.password.fail=Failed to unalias password for the reason: {0}.
wrapper.no.txn=The jms object created in a transaction should not be used outside the scope.
wrapper.txn.bad.status=The transaction of current thread is ended. The jms object created in a transaction should not be used outside the scope.
