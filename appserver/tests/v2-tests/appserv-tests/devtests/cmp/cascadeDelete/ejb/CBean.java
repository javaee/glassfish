
package cascadeDelete;

import javax.ejb.*;

/**
 * Created Dec 23, 2002 12:43:05 PM
 * Code generated by the Forte For Java EJB Builder
 * @author mvatkina
 */


public abstract class CBean implements javax.ejb.EntityBean {
    
    private javax.ejb.EntityContext context;
    private boolean cascadeDeleteFromA = false;
    private boolean cascadeDeleteFromB = false;
    
    
    /**
     * @see javax.ejb.EntityBean#setEntityContext(javax.ejb.EntityContext)
     */
    public void setEntityContext(javax.ejb.EntityContext aContext) {
        context=aContext;
    }
    
    
    /**
     * @see javax.ejb.EntityBean#ejbActivate()
     */
    public void ejbActivate() {
        
    }
    
    
    /**
     * @see javax.ejb.EntityBean#ejbPassivate()
     */
    public void ejbPassivate() {
        
    }
    
    
    /**
     * @see javax.ejb.EntityBean#ejbRemove()
     */
    public void ejbRemove() {
        System.out.println("Debug: C ejbRemove");
        
        cascadeDelete.LocalA a = getA();
        System.out.println("A: " + ((a==null)? "null" : a.getName()));
        if (cascadeDeleteFromA && (a != null) )
            throw new EJBException("In C - getA() not NULL in CascadeDeleteFromA!");
        
        cascadeDelete.LocalB b = getB();
        System.out.println("B: " + ((b==null)? "null" : b.getName()));
        if (b != null) {
            if (cascadeDeleteFromB) {
                throw new EJBException("In C - getB() not NULL in CascadeDeleteFromB!");
            } else {
                b.cascadeDeleteFromC();
            }
        }
        
        System.out.println("Ds: " + getDs().size());
        
        
    }
    
    
    /**
     * @see javax.ejb.EntityBean#unsetEntityContext()
     */
    public void unsetEntityContext() {
        context=null;
    }
    
    
    /**
     * @see javax.ejb.EntityBean#ejbLoad()
     */
    public void ejbLoad() {
        cascadeDeleteFromA = false;
        cascadeDeleteFromB = false;
        
    }
    
    
    /**
     * @see javax.ejb.EntityBean#ejbStore()
     */
    public void ejbStore() {
        
    }
    
    public abstract java.lang.Integer getId();
    public abstract void setId(java.lang.Integer id);
    
    public abstract java.lang.String getName();
    public abstract void setName(java.lang.String name);
    
    public abstract java.util.Collection getDs();
    
    public abstract void setDs(java.util.Collection ds);
    
    public abstract cascadeDelete.LocalA getA();
    
    public abstract void setA(cascadeDelete.LocalA a);
    
    public abstract cascadeDelete.LocalB getB();
    
    public abstract void setB(cascadeDelete.LocalB b);
    
    public java.lang.Integer ejbCreate(java.lang.Integer id, java.lang.String name) throws javax.ejb.CreateException {
        setId(id);
        setName(name);
        return null;
    }
    
    public void ejbPostCreate(java.lang.Integer id, java.lang.String name) throws javax.ejb.CreateException {
    }
    
    public void cascadeDeleteFromA() {
        cascadeDeleteFromA = true;
    }

    public void cascadeDeleteFromB() {
        cascadeDeleteFromB = true;
    }
}
