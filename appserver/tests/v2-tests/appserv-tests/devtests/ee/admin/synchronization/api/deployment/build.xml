<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE project [
<!ENTITY commonSetup SYSTEM "file:./../../../../../../config/properties.xml">
<!ENTITY commonBuild SYSTEM "file:./../../../../../../config/common.xml">
<!ENTITY eecommonBuild SYSTEM "file:./../../../../../../config/ee-common.xml">
<!ENTITY testRootproperties SYSTEM "file:./../../build.properties">
<!ENTITY testproperties SYSTEM "file:./build.properties">
]>

<!-- This dev test assumes the presence of samples in the server installation-->
<project name="synch-deployment-App" default="usage" basedir=".">

    &commonSetup;
    &commonBuild;
    &eecommonBuild;
    &testRootproperties;
    &testproperties;

    <target name="all" depends="clean,build,create-resources,deploy,run,undeploy,delete-resources"/>
    <target name="deployapp" depends="clean,build,create-resources,deploy"/>
    <target name="undeployapp" depends="undeploy,delete-resources"/>

    <target name="clean" depends="init-common">
      <antcall  target="clean-common"/>
    </target>
 
    <target name="compile" depends="clean">
        <antcall target="compile-common">
            <param name="src" value="ejb"/>
        </antcall>
        <antcall target="compile-common">
            <param name="src" value="client"/>
        </antcall>
    </target>

    <target name="build" depends="compile">
        <antcall target="build-ear-common">
            <param name="ejbjar.classes" 
              value="**/**.class" />
            <param name="appclientjar.classes" 
              value="**/*Client*.class, **/*SFSB*.class" />
        </antcall>
    </target> 
    
    <target name="deploy" depends="init-common">

	<!-- All the modules deployments must be done after test case deployment-->
        <antcall target="deploy-to-das">
            <param name="deployed.app" value="${env.S1AS_HOME}/samples/connectors/apps/mailconnector/mailconnector.rar"/>
         </antcall>
        <antcall target="deploy-to-das">
            <param name="deployed.app" value="${env.S1AS_HOME}/samples/ejb/misc/apps/timersession/timersession.ear"/>
         </antcall>
        <antcall target="deploy-to-das">
            <param name="deployed.app" value="${env.S1AS_HOME}/samples/quickstart/hello.war"/>
         </antcall>
        <antcall target="deploy-to-cluster">
            <param name="appserver.instance.name" value="${cluster.name}"/>
         </antcall>
         <antcall target="copy-client-jar"/>
    </target>

    <target name="copy-client-jar" depends="init-common">
        <copy file="${admin.domain.dir}/${admin.domain}/applications/j2ee-apps/${appname}App/${appname}AppClient.jar" todir="${assemble.dir}" failonerror="false"/>
    </target>


    <target name="create-resources" depends="init-common">
    <!--
        <antcall target="asadmin-batch-common">
          <param name="asadmin.file" value="create_resources.asadmin"/>
        </antcall>
    -->
    </target>
    
    <target name="delete-resources" depends="init-common">
    <!--
        <antcall target="asadmin-batch-common">
          <param name="asadmin.file" value="delete_resources.asadmin"/>
        </antcall>
    -->
    </target>

    <target name="runtest" depends="init-common">
        <antcall target="run-standalone-client">
        <param name="orb.port" value="${orb.listener1.port}"/>
        <param name="appclient.application.args" value="ee-synchronization-server-1 put com_sun_web_ui ."/>
        <param name="test.app.name" value="mailconnector"/>
        <param name="test.app.type" value="ConnectorModule"/>
        </antcall>
        <antcall target="run-standalone-client">
        <param name="orb.port" value="${orb.listener1.port}"/>
        <param name="appclient.application.args" value="ee-synchronization-server-1 put com_sun_web_ui ."/>
        <param name="test.app.name" value="timersession"/>
        <param name="test.app.type" value="J2EEApplication"/>
        </antcall>
        <antcall target="run-standalone-client">
        <param name="orb.port" value="${orb.listener1.port}"/>
        <param name="appclient.application.args" value="ee-synchronization-server-1 put com_sun_web_ui ."/>
        <param name="test.app.name" value="hello"/>
        <param name="test.app.type" value="WebModule"/>
        </antcall>
    </target>


    <target name="run" depends="init-common">
        <antcall target="runtest"/>
    </target>
 
    <target name="undeploy" depends="init-common">
        <antcall target="undeploy-common">
            <param name="deployedapp.name" value="timersession"/>
        </antcall>
        <antcall target="undeploy-common">
            <param name="deployedapp.name" value="hello"/>
        </antcall>
        <antcall target="undeploy-common">
            <param name="appserver.instance.name" value="${cluster.name}"/>
        </antcall>
    </target>   

    <!-- This should be a common target FIX IT -->
    <target name="deploy-to-cluster" depends="init-common">      
        <echo message="So you are using Enterprise Version eh ?"/>
    <property name="deployed.app" value="${assemble.dir}/${appname}App.ear"/>

      <exec executable="${ASADMIN}" failonerror="false">
        <arg line="deploy"/>
        <arg line="--user ${admin.user}"/>
        <arg line="--password ${admin.password}"/>
        <arg line="--host ${admin.host}"/>
        <arg line="--port ${admin.port}"/>
        <arg line="--target ${appserver.instance.name}"/>
        <arg line="--type ${apptype}"/>
        <arg line="--retrieve ${assemble.dir}"/>
    <!-- deployed.app defaults to ${assemble.dir}/${appname}App.ear defined in properties.xml-->
        <arg line="${deployed.app}"/>
      </exec>
      <echo message="Deployment on target server ${appserver.instance.name} 
    successful"/>
     <antcall target="stop-default-cluster-common"/>
     <antcall target="start-default-cluster-common"/>

    </target>

    <target name="deploy-to-das" depends="init-common">      
      <exec executable="${ASADMIN}" failonerror="false">
        <arg line="deploy"/>
        <arg line="--user ${admin.user}"/>
        <arg line="--password ${admin.password}"/>
        <arg line="--host ${admin.host}"/>
        <arg line="--port ${admin.port}"/>
        <arg line="--target ${appserver.instance.name}"/>
        <arg line="--type ${apptype}"/>
        <arg line="--retrieve ${assemble.dir}"/>
        <arg line="${deployed.app}"/>
      </exec>
      <echo message="Deployment on target server ${appserver.instance.name} 
    successful"/>
    </target>

    <!-- =============================================== -->
    <!-- Target to run the standalone client without ACC -->
    <!-- =============================================== -->
    <target name="run-standalone-client" depends="init-common">
        <property name="jndi.name" value="ejb/apiDeployment"/>
        <property name="provider.url" value="iiop://${admin.host}:${orb.port}"/>
        <property name="ctxfactory" 
            value="com.sun.enterprise.naming.SerialInitContextFactory"/>
<!--
	<property name="ctxfactory" 
            	value="com.sun.jndi.cosnaming.CNCtxFactory"/>
-->
	<echo message="provider.url used is ${provider.url}"/>
      <java classname="${test.client}"
        classpath="${s1astest.classpath}:${assemble.dir}/${appname}AppClient.jar"
        failonerror="true" fork="true">
	<jvmarg value="-Dorg.omg.CORBA.ORBInitialHost=${admin.host}"/>
	<jvmarg value="-Dorg.omg.CORBA.ORBInitialPort=${orb.port}"/>
	<jvmarg value="-Dj2eelogin.name=${test.user}"/>
	<jvmarg value="-Dj2eelogin.password=${test.passwd}"/>
        <arg value="${provider.url}"/>
        <arg value="${ctxfactory}"/>
        <arg value="${jndi.name}"/>
        <!--arg value="${test.server.name} ${test.action} ${test.src} ${test.dest}"/-->
        <arg value="ee-synchronization-server-1"/>
        <arg value="get"/>
        <arg value="${test.app.name}"/>
        <arg value="."/>
        <arg value="${test.app.type}"/>
      </java>
    </target>


    <target name="usage">
        <antcall target="usage-common"/>
        <echo>         
          ant create-resources Create all destinations and connection factories
          ant delete-resources Delete all destinations and connection factories
        </echo>
    </target>
</project>
