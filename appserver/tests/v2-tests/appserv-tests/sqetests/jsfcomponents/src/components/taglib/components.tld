<?xml version="1.0" encoding="UTF-8" ?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2004-2018 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://oss.oracle.com/licenses/CDDL+GPL-1.1
    or LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<!DOCTYPE taglib
  PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
  "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">


<taglib>

  <tlib-version>0.03</tlib-version>
  <jsp-version>1.2</jsp-version>
  <short-name>JavaServerFaces Example Components Tag Library</short-name>
  <uri>http://java.sun.com/jsf/demo/components</uri>
  <description>
    This tag library contains tags for several useful demo components.
    These components are *not* part of the standard JavaServer Faces
    Specification, but are provided as examples of how components, renderers,
    and component tags can be built on top of the framework.
  </description>


  <tag>

    <name>area</name>
    <tag-class>components.taglib.AreaTag</tag-class>
    <body-content>empty</body-content>
    <description>
      Description of a single hotspot in a client side image map.  This
      tag MUST be nested inside a &lt;map&gt; tag.  To specify the hotspot
      characteristics, you must specify EITHER a value OR the
      alt, coords, and shape attributes.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>alt</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Alternate text for a synthesized ImageArea bean.  The set of
        alt values for all hotspots in a particular map must be unique.
      </description>
    </attribute>

    <attribute>
      <name>coords</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Hotspot coordinates for a synthesized ImageArea bean.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component id of this component.
      </description>
    </attribute>

    <attribute>
      <name>onmouseout</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Context-relative path to the image to be displayed for this
        hotspot when the mouse is not hovering over it.
      </description>
    </attribute>    

    <attribute>
      <name>onmouseover</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Context-relative path to the image to be displayed for this
        hotspot when the mouse is hovering over it.
      </description>
    </attribute>
      
    <attribute>
      <name>targetImage</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Specifies the ID if the image component.
      </description>
    </attribute>

    <attribute>
      <name>shape</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Shape for a synthesized ImageArea bean (default, rect, circle, poly).
      </description>
    </attribute>

    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        CSS style class to use when rendering this element.
      </description>
    </attribute>

    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression pointing at an ImageArea bean describing
        the characteristics of this hotspot.  If not present, an ImageArea
        bean will be synthesized from the values of the alt, coords, and
        shape attributes.
      </description>
    </attribute>

  </tag>
  
  <tag>

    <name>data_repeater</name>
    <tag-class>components.taglib.DataRepeaterTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render the components of the child UIColumn components under the
      UIData component associated with this tag, once per row.  The actual
      renderer class (components.renderkit.RepeaterRenderer) can serve as
      the base class for more specialized markup generation.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>first</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Zero-relative row index of the first row to be displayed.  If not
        specified, the default value is zero (i.e. the first row of the
        underlying data model).
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component identifier of this component.
      </description>
    </attribute>

    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag indicating whether or not this component should be rendered.
        If not specified, the default value is "true".
      </description>
    </attribute>

    <attribute>
      <name>rows</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        The maximum number of rows (from the underlying data model) to be
        rendered.  If not specified, the default value is zero, which indicates
        that all remaining rows should be rendered.
      </description>
    </attribute>

    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        The CSS style class to use when rendering the entire table, if any.
      </description>
    </attribute>

    <attribute>
      <name>value</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression pointing at (a) a DataModel instance,
        (b) an array of objects, (c) a List of objects, (d) a
        java.sql.ResultSet (or RowSet), (d) a javax.servlet.jsp.jstl.sql.Result
        object, or (e) a JavaBean (which will be treated as a one-row dataset).
      </description>
    </attribute>

    <attribute>
      <name>var</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Attribute key under which an object representing the current row
        will be exposed as a request scope attribute.  If not specified, no
        such row data object will be exposed.
      </description>
    </attribute>

  </tag>


  <tag>

    <name>graph_menubar</name>
    <tag-class>components.taglib.GraphMenuBarTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render a components.model.Graph (bindingd by the current value of a
      UIOutput component) as a menu bar (whose items are from the children
      of the root node of the graph), with expanded menus (and submenus)
      underneath.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>actionListener</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         Optional method binding binding to handle tree expansion and contraction events.
      </description>
    </attribute>

    <attribute>
      <name>immediate</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      A flag indicating that the default ActionListener should execute
      immediately (that is, during the Apply Request Values phase of the 
      request processing lifecycle, instead of waiting for Invoke 
      Application phase). The default value of this property must be false.
      </description>
    </attribute>
    
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        CSS style class to use when rendering this component.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component id of this component
      </description>
    </attribute>

    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        value binding expression pointing at a components.model.Graph
        instance.
      </description>
    </attribute>

    <attribute>
      <name>selectedClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        CSS style class to use when rendering a seelcted node.
      </description>
    </attribute>

    <attribute>
      <name>unselectedClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        CSS style class to use when rendering a unselected node.
      </description>
    </attribute>

  </tag>


  <tag>

    <name>graph_menutree</name>
    <tag-class>components.taglib.GraphMenuTreeTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render a components.model.Graph (referenced by the current value of a
      UIOutput component) as a tree control with subtrees expanded or
      contracted based on the "expanded" property.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>actionListener</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         Optional method binding reference to handle tree expansion and contraction events.
      </description>
    </attribute>

    <attribute>
      <name>immediate</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
      A flag indicating that the default ActionListener should execute
      immediately (that is, during the Apply Request Values phase of the 
      request processing lifecycle, instead of waiting for Invoke 
      Application phase). The default value of this property must be false.
      </description>
    </attribute>
    
    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        CSS style class to use when rendering this component.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component id of this component
      </description>
    </attribute>

    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Model binding expression pointing at a components.model.Graph instance.
      </description>
    </attribute>

    <attribute>
      <name>selectedClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        CSS style class to use when rendering a seelcted node.
      </description>
    </attribute>

    <attribute>
      <name>unselectedClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        CSS style class to use when rendering a unselected node.
      </description>
    </attribute>
  </tag>


  <tag>

    <name>graph_menunode</name>
    <tag-class>components.taglib.GraphMenuNodeTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render a components.model.Node that represents a node of the tree.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>action</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
          context-relative URL triggered when node selected.
      </description>
    </attribute>

    <attribute>
      <name>enabled</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         should the node be enabled ?
      </description>
    </attribute>

    <attribute>
      <name>expanded</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Should the node appear expanded or collapased ?
      </description>
    </attribute>

    <attribute>
      <name>icon</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        icon to visually represent the node. This can be used with or without
        label.
      </description>
    </attribute>

    <attribute>
      <name>label</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        visual representation of the node.
      </description>
    </attribute>

    <attribute>
      <name>name</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Name of the node.
      </description>
    </attribute>

  </tag>


  <tag>

    <name>graph_treenode</name>
    <tag-class>components.taglib.GraphTreeNodeTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render a components.model.Node that represents a node of the tree.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>action</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
          context-relative URL triggered when node selected.
      </description>
    </attribute>

    <attribute>
      <name>enabled</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         should the node be enabled ?
      </description>
    </attribute>

    <attribute>
      <name>expanded</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Should the node appear expanded or collapased ?
      </description>
    </attribute>

    <attribute>
      <name>icon</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        icon to visually represent the node. This can be used with or without
        label.
      </description>
    </attribute>

    <attribute>
      <name>label</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        visual representation of the node.
      </description>
    </attribute>

    <attribute>
      <name>name</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Name of the node.
      </description>
    </attribute>

  </tag>



  <tag>

    <name>map</name>
    <tag-class>components.taglib.MapTag</tag-class>
    <description>
      Component representing a client-side image map, with which the user
      can click on hotspots to activate selections, and see changes in the
      displayed image when the mouse is hovered over hotspots.  Only
      &lt;area&gt; components may be nested inside this component.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>current</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Alternate text for the currently selected area child.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component identifier of this component.
      </description>
    </attribute>

    <attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        CSS style class to use when rendering this element.
      </description>
    </attribute>

    <attribute>
      <name>actionListener</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>

    <attribute>
      <name>immediate</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>

    <attribute>
      <name>action</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <type>java.lang.String</type>
    </attribute>

  </tag>


  <tag>

    <name>scroller</name>
    <tag-class>components.taglib.ScrollerTag</tag-class>
    <body-content>JSP</body-content>
    <description>
    Render a set of hyperlinks to enable navigation over results that span
    across several pages.  Child tags nested inside this tag must be:
    * facet tags that can optionally nest panel_group tag that provide widgets
    * for easy navigation.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component id of this component.
      </description>
    </attribute>
    
    <attribute>
      <name>for</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        The data grid component for which this acts as a scroller.
      </description>
    </attribute>

    <attribute>
      <name>navFacetOrientation</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        When rendering a widget representing "page navigation" where
        should the facet markup be rendered in relation to the page
        navigation widget?  Values are "NORTH", "SOUTH", "EAST", "WEST".
        Case insensitive.
      </description>
    </attribute>
    
    <attribute>
      <name>actionListener</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         Optional method binding reference to handle scroll event.
      </description>
    </attribute>
</tag>


  <tag>

    <name>pane_tab</name>
    <tag-class>components.taglib.PaneTabTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render an individual pane of a tabbed control.  This tag is only
      valid when immediately nested in a pane_tabbed tag.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component id of this component
      </description>
    </attribute>

    <attribute>
      <name>paneClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        CSS style class to use when rendering this component.
      </description>
    </attribute>

    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Flag indicating whether or not this component should be rendered.
        If not specified, the default value is "true".
      </description>
    </attribute>

  </tag>


  <tag>

    <name>pane_tabbed</name>
    <tag-class>components.taglib.PaneTabbedTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render a tabbed control with immediately nested pane_tab tags
      to represent each pane.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>contentClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        If present, specifies the CSS style class to be used when
        rendering the content of the selected pane.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component id of this component
      </description>
    </attribute>

    <attribute>
      <name>paneClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        If present, specifies the CSS style class to be used when
        rendering the entire tabbed pane control.  Style classes
        for the selected tab, unselected tabs, and the content data
        support overriding these defaults in the usual CSS manner.
      </description>
    </attribute>

    <attribute>
      <name>selectedClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        If present, specifies the CSS style class to be used when
        rendering the tab for the currently selected pane.
      </description>
    </attribute>

    <attribute>
      <name>unselectedClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        If present, specifies the CSS style class to be used when
        rendering the tabs for panes that are not currently selected.
      </description>
    </attribute>
  </tag>


  <tag>

    <name>pane_tablabel</name>
    <tag-class>components.taglib.PaneTabLabelTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Render an individual pane tab label of a tabbed control.  This
      tag is only valid when immediately nested in a pane_tab tag.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>commandName</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        command name for this component
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component id of this component
      </description>
    </attribute>

    <attribute>
      <name>image</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        image for the face of this component
      </description>
    </attribute>

    <attribute>
      <name>label</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        label "text" for the face of this component
      </description>
    </attribute>

    <attribute>
      <name>paneTabLabelClass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        CSS style class to use when rendering this component.
      </description>
    </attribute>

  </tag>


  <tag>

    <name>stylesheet</name>
    <tag-class>components.taglib.StylesheetTag</tag-class>
    <body-content>empty</body-content>
    <description>
      Renders an HTML link element to a CSS stylesheet (content type text/css)
      at the context-relative path specified by the "path" attribute.
    </description>

    <attribute>
      <name>binding</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Value binding expression to bind this component to a backing bean.
      </description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Component id of this component.
      </description>
    </attribute>

    <attribute>
      <name>path</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        Context-relative path to a CSS stylesheet resource within this
        webapp.  The path must start with a slash ("/") character.
      </description>
    </attribute>

  </tag>
  
  <tag>

    <name>chart</name>
    <tag-class>components.taglib.ChartTag</tag-class>
    <body-content>JSP</body-content>
    <description>
      Displays a chart as either a bar chart or pie chart.
    </description>

    <attribute>
      <name>width</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        The width of the Chart
      </description>
    </attribute>

    <attribute>
      <name>height</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        The height of the Chart
      </description>
    </attribute>

    <attribute>
      <name>type</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         Type of Chart. Valid values are "BarChart" and "PieChart".
      </description>
    </attribute>
    
    <attribute>
      <name>orientation</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
	 Orientation of the chart. This attribute applies only to bar chart.
      </description>
    </attribute>
    
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         Points to a collection of chart items. Currently the only array type
         is supported. So either value should be present or
         a set of nested chartItem tags should be present. If both are
         present, value takes precedence and nested ChartItem tags are ignored.
      </description>
    </attribute>

    <attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        The title of the chart.
      </description>
    </attribute>

    <attribute>
      <name>xlabel</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        The label that appears along the x axis of the chart.
      </description>
    </attribute>

    <attribute>
      <name>ylabel</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        The label that appears along the y axis of the chart.
      </description>
    </attribute>
  </tag>
  
  <tag>

    <name>chartItem</name>
    <tag-class>components.taglib.ChartItemTag</tag-class>
    <body-content>empty</body-content>
    <description>
       Specifies data for individual entries of the chart, for instance, 
       if a bar chart is being displayed, the attributes will correspond to 
       label, color and value of an particular bar in the chart. ChartComponent 
       then aggregates the various chartItem instances into a collection for 
       display purposes.
    </description>

    <attribute>
      <name>itemColor</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        The Color of the Chart entry
      </description>
    </attribute>

    <attribute>
      <name>itemLabel</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
        The label of the Chart entry
      </description>
    </attribute>

    <attribute>
      <name>itemValue</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
	A chart item value defined as a primitive integer.
      </description>
    </attribute>
    
    <attribute>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description>
         Points of a ChartItem instance. So either value should be present or
         itemColor, itemLabel and itemValue should be present. If both are
         present, value takes precedence and other attributes are ignored.
      </description>
    </attribute>
  </tag>
</taglib>
