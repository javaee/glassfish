<?xml version="1.0" encoding="UTF-8"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://oss.oracle.com/licenses/CDDL+GPL-1.1
    or LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<!--
        *** GENERATED FROM project.xml - DO NOT EDIT  ***
        ***         EDIT ../build.xml INSTEAD         ***

        For the purpose of easier reading the script
        is divided into following sections:

        - initialization
        - compilation
        - dist
        - execution
        - debugging
        - cleanup

        -->
<project name="BankClientApp-jbi-impl" default="build" basedir="..">
    <target name="default" depends="dist" description="Build whole project."/>
    <!-- 
                INITIALIZATION SECTION 
            -->
    <target name="pre-init">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="init-private" depends="pre-init">
        <property file="nbproject/private/private.properties"/>
    </target>
    <target name="init-userdir" depends="pre-init,init-private">
        <property name="user.properties.file" location="${netbeans.user}/build.properties"/>
    </target>
    <target name="init-user" depends="pre-init,init-private,init-userdir">
        <property file="${user.properties.file}"/>
    </target>
    <target name="init-project" depends="pre-init,init-private,init-userdir,init-user">
        <property file="nbproject/project.properties"/>
    </target>
    <target name="do-init" depends="pre-init,init-private,init-userdir,init-user,init-project">
        <!-- The two properties below are usually overridden -->
        <!-- by the active platform. Just a fallback. -->
        <property name="default.javac.source" value="1.4"/>
        <property name="default.javac.target" value="1.4"/>
        <condition property="have.tests">
            <or>
                <available file="${test.dir}"/>
            </or>
        </condition>
        <condition property="netbeans.home+have.tests">
            <and>
                <isset property="netbeans.home"/>
                <isset property="have.tests"/>
            </and>
        </condition>
    </target>
    <target name="post-init">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="init-check" depends="pre-init,init-private,init-userdir,init-user,init-project,do-init">
        <fail unless="src.dir">Must set src.dir</fail>
        <fail unless="build.dir">Must set build.dir</fail>
        <fail unless="build.generated.dir">Must set build.generated.dir</fail>
        <fail unless="dist.dir">Must set dist.dir</fail>
        <fail unless="build.classes.dir">Must set build.classes.dir</fail>
        <fail unless="dist.jar">Must set dist.jar</fail>
        <fail unless="test.dir">Must set test.dir</fail>
    </target>
    <target name="-init-taskdefs" if="from.commandline">
        <path id="ant.task.classpath">
            <pathelement location="${netbeans.home}/../soa1/modules/org-netbeans-modules-compapp-projects-jbi.jar"/>
            <pathelement location="${netbeans.home}/../soa1/modules/org-apache-xmlbeans.jar"/>
            <pathelement location="${netbeans.home}/../soa1/ant/nblib/org-netbeans-modules-compapp-projects-jbi.jar"/>
            <pathelement location="${netbeans.home}/../platform6/lib/org-openide-util.jar"/>
            <pathelement location="${netbeans.home}/../platform6/lib/org-openide-modules.jar"/>
            <pathelement location="${netbeans.home}/../platform6/modules/org-openide-options.jar"/>
            <pathelement location="${netbeans.home}/../platform6/modules/org-openide-text.jar"/>
            <pathelement location="${netbeans.home}/../platform6/modules/org-openide-loaders.jar"/>
            <pathelement location="${netbeans.home}/../platform6/modules/org-openide-nodes.jar"/>
            <pathelement location="${netbeans.home}/../platform6/modules/org-openide-dialogs.jar"/>
            <pathelement location="${netbeans.home}/../platform6/core/org-openide-filesystems.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/ext/xerces-2.8.0.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/ext/xml-commons-dom-ranges-1.0.b2.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-retriever.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-schema-model.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-wsdl-model.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-xam.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-text.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-netbeans-modules-editor.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-netbeans-modules-editor-lib.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-netbeans-modules-editor-util.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-netbeans-modules-projectapi.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-netbeans-modules-classfile.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/org-apache-xml-resolver.jar"/>
            <pathelement location="${netbeans.home}/../xmltools1/modules/org-netbeans-modules-xml-wsdl-extensions.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/ext/jaxws21/api/jaxb-api.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/ext/jaxws21/jaxb-impl.jar"/>
            <pathelement location="${netbeans.home}/../ide7/modules/ext/jaxws21/activation.jar"/>
        </path>
        <taskdef name="jbi-build-service-assembly" classname="org.netbeans.modules.compapp.projects.jbi.anttasks.BuildServiceAssembly">
            <classpath refid="ant.task.classpath"/>
        </taskdef>
        <taskdef name="jbi-deploy-service-assembly" classname="org.netbeans.modules.compapp.projects.jbi.anttasks.DeployServiceAssembly">
            <classpath refid="ant.task.classpath"/>
        </taskdef>
        <taskdef name="setup-debug-environment" classname="org.netbeans.modules.compapp.projects.jbi.anttasks.SetUpDebugEnvironment">
            <classpath refid="ant.task.classpath"/>
        </taskdef>
        <taskdef name="teardown-debug-environment" classname="org.netbeans.modules.compapp.projects.jbi.anttasks.TearDownDebugEnvironment">
            <classpath refid="ant.task.classpath"/>
        </taskdef>
        <taskdef name="jbi-javaee-dist" classname="org.netbeans.modules.compapp.projects.jbi.anttasks.BuildJavaEESU">
            <classpath refid="ant.task.classpath"/>
        </taskdef>
    </target>
    <target name="init" depends="pre-init,init-private,init-userdir,init-user,init-project,do-init,post-init,init-check,-init-taskdefs"/>
    <!--
                COMPILATION SECTION
            -->
    <target name="deps-jar" depends="init" unless="${no.dependencies}"/>
    <target name="deps-javaee-jar" depends="init" unless="${no.dependencies}">
        <ant target="dist" inheritall="false" dir="${project.BankClient}"/>
        <basename property="BankClient.se.jar.name" file="${reference.BankClient.dist}"/>
        <basename property="BankClient.su.name" file="${project.BankClient}"/>
        <property name="BankClient.su.dir" value="${src.dir}/../jbiServiceUnits/${BankClient.su.name}"/>
        <unzip src="${reference.BankClient.dist}" dest="${src.dir}/../jbiServiceUnits/${BankClient.su.name}">
            <patternset>
                <include name="**/*.wsdl"/>
                <include name="**/*.xsd"/>
                <include name="META-INF/jbi.xml"/>
            </patternset>
        </unzip>
        <unzip src="${reference.BankClient.dist}" dest="${src.dir}/../jbiServiceUnits/META-INF/catalogData/BankClient">
            <patternset>
                <include name="META-INF/catalog.xml"/>
            </patternset>
        </unzip>
        <jbi-javaee-dist projectName="BankClient" subprojJar="${reference.BankClient.dist}" subprojDir="${project.BankClient}" suExtractDir="${BankClient.su.dir}" subprojResource="${resource.BankClient}"/>
    </target>
    <target name="pre-pre-compile" depends="init,deps-jar">
        <mkdir dir="${build.classes.dir}"/>
    </target>
    <target name="pre-compile">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="library-inclusion-in-archive" depends="compile">
        <unjar dest="${build.classes.dir}" src="${reference.BankClient.dist}"/>
    </target>
    <target name="library-inclusion-in-manifest" depends="compile">
        <basename property="included.lib.reference.BankClient.dist" file="${reference.BankClient.dist}"/>
        <copy todir="${build.classes.dir}" file="${reference.BankClient.dist}"/>
        <manifest file="${build.classes.dir}/META-INF/MANIFEST.MF" mode="update">
            <attribute name="Class-Path" value="${included.lib.reference.BankClient.dist}"/>
        </manifest>
    </target>
    <target name="do-compile" depends="init,deps-jar,pre-pre-compile,pre-compile"/>
    <target name="post-compile">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="compile" depends="init,deps-jar,pre-pre-compile,pre-compile,do-compile,post-compile" description="Compile project."/>
    <target name="pre-compile-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="do-compile-single" depends="init,deps-jar,pre-pre-compile">
        <fail unless="javac.includes">Must select some files in the IDE or set javac.includes</fail>
    </target>
    <target name="post-compile-single">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="compile-single" depends="init,deps-jar,pre-pre-compile,pre-compile-single,do-compile-single,post-compile-single"/>
    <!--
                DIST BUILDING SECTION
            -->
    <target name="jbi-build" depends="init,init-deploy,deps-jar, deps-javaee-jar" description="Build Service Assembly.">
        <copy todir="${src.dir}/../jbiServiceUnits" overwrite="true">
            <fileset dir="${src.dir}"/>
        </copy>
        <mkdir dir="${build.dir}/META-INF"/>
        <jar compress="true" jarfile="${build.dir}/BCDeployment.jar">
            <fileset dir="${src.dir}/../jbiServiceUnits">
                <exclude name="META-INF/catalogData/**"/>
                <exclude name="**/jbi.xml"/>
            </fileset>
        </jar>
        <jbi-build-service-assembly/>
        <delete file="${build.dir}/BCDeployment.jar"/>
        <dirname property="dist.jar.dir" file="${dist.jar}"/>
        <mkdir dir="${dist.jar.dir}"/>
        <jar compress="${jar.compress}" jarfile="${dist.jar}">
            <fileset dir="${build.dir}" excludes="jar/*"/>
        </jar>
    </target>
    <target name="jbi-clean-build" depends="init,init-deploy,clean,jbi-build" description="Clean and Build Service Assembly."/>
    <target name="pre-dist">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="do-dist" depends="init,pre-dist">
        <mkdir dir="${build.dir}/META-INF"/>
        <jar compress="${jar.compress}" jarfile="${build.dir}/SEDeployment.jar">
            <fileset includes="**/*.bpel,**/*.wsdl,**/*.xsd" dir="${src.dir}"/>
            <fileset dir="${basedir}/${src.dir}">
                <include name="portmap.xml"/>
            </fileset>
        </jar>
        <jar compress="${jar.compress}" jarfile="${build.dir}/BCDeployment.jar">
            <fileset includes="**/*.wsdl,**/*.xsd" dir="${src.dir}"/>
            <fileset dir="${basedir}/${src.dir}">
                <include name="endpoints.xml"/>
            </fileset>
        </jar>
        <dirname property="dist.jar.dir" file="${dist.jar}"/>
        <mkdir dir="${dist.jar.dir}"/>
        <jar compress="${jar.compress}" jarfile="${dist.jar}">
            <fileset dir="${build.dir}"/>
        </jar>
    </target>
    <target name="post-dist">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="dist" depends="init,pre-dist,do-dist,post-dist" description="Build distribution (JAR)."/>
    <!--
                EXECUTION SECTION
            -->
    <target name="run" depends="jbi-build,run-jbi-deploy" description="Deploy to server."/>
    <target name="init-deploy">
        <property name="include.jar.manifest" value=""/>
    </target>
    <target name="run-jbi-deploy" depends="jbi-build">
        <property name="j2ee.server.instance" value=""/>
        <loadproperties srcFile="${basedir}/nbproject/private/private.properties"/>
        <jbi-deploy-service-assembly serviceAssemblyID="${org.netbeans.modules.compapp.projects.jbi.descriptor.uuid.assembly-unit}" serviceAssemblyLocation="${basedir}/${dist.jar}" netBeansUserDir="${netbeans.user}" j2eeServerInstance="${j2ee.server.instance}"/>
    </target>
    <target name="undeploy" depends="init">
        <property name="j2ee.server.instance" value=""/>
        <loadproperties srcFile="${basedir}/nbproject/private/private.properties"/>
        <jbi-deploy-service-assembly undeployServiceAssembly="true" serviceAssemblyID="${org.netbeans.modules.compapp.projects.jbi.descriptor.uuid.assembly-unit}" serviceAssemblyLocation="${basedir}/${dist.jar}" netBeansUserDir="${netbeans.user}" j2eeServerInstance="${j2ee.server.instance}"/>
    </target>
    <target name="-pre-debug">
        <setup-debug-environment netBeansUserDir="${netbeans.user}" j2eeServerInstance="${j2ee.server.instance}"/>
    </target>
    <target name="-post-debug">
        <teardown-debug-environment/>
    </target>
    <!--
                DEBUGGING SECTION
            -->
    <target name="debug" description="Debug project in IDE." depends="run,-pre-debug" if="netbeans.home"/>
    <target name="pre-debug-fix" depends="init">
        <fail unless="fix.includes">Must set fix.includes</fail>
        <property name="javac.includes" value="${fix.includes}.java"/>
    </target>
    <target name="do-debug-fix" if="netbeans.home" depends="init,pre-debug-fix,compile-single">
        <j2seproject:nbjpdareload xmlns:j2seproject="http://www.netbeans.org/ns/j2se-project/1"/>
    </target>
    <target name="debug-fix" if="netbeans.home" depends="init,pre-debug-fix,do-debug-fix"/>
    <!--
                CLEANUP SECTION
            -->
    <target name="deps-clean" depends="init" unless="${no.dependencies}">
        <ant target="clean" inheritall="false" dir="${project.BankClient}"/>
    </target>
    <target name="do-clean" depends="init">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${source.root}/jbiServiceUnits"/>
    </target>
    <target name="post-clean">
        <!-- Empty placeholder for easier customization. -->
        <!-- You can override this target in the ../build.xml file. -->
    </target>
    <target name="clean" depends="init,deps-clean,do-clean,post-clean" description="Clean build products."/>
    <!--
                JUNIT EXECUTION SECTION
                ======================= 
            -->
    <target name="-pre-test-run" if="have.tests" depends="init">
        <mkdir dir="${test.results.dir}"/>
    </target>
    <target name="-do-test-run" if="netbeans.home+have.tests" depends="init,-pre-test-run">
        <junit showoutput="true" fork="yes" dir="${basedir}" failureproperty="tests.failed" errorproperty="tests.failed">
            <classpath>
                <pathelement path="${netbeans.home}/../soa1/modules/ext/jbi/catd.jar"/>
                <pathelement path="${netbeans.home}/../soa1/modules/ext/jbi/xmlunit1.0.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/ext/junit-3.8.1.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/ext/jaxrpc16/FastInfoset.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/ext/jaxrpc16/saaj-api.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/ext/jaxrpc16/saaj-impl.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-xdm.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-xam.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-editor-lib.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-text.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-editor.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-editor-util.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-core.jar"/>
                <pathelement path="${netbeans.home}/../platform6/lib/org-openide-modules.jar"/>
                <pathelement path="${netbeans.home}/../platform6/lib/org-openide-util.jar"/>
                <pathelement path="${netbeans.home}/../platform6/modules/org-openide-options.jar"/>
                <pathelement path="${netbeans.home}/../platform6/modules/org-openide-text.jar"/>
                <pathelement path="${netbeans.home}/../platform6/modules/org-openide-loaders.jar"/>
                <pathelement path="${netbeans.home}/../platform6/modules/org-openide-nodes.jar"/>
                <pathelement path="${netbeans.home}/../platform6/core/org-openide-filesystems.jar"/>
            </classpath>
            <test name="org.netbeans.modules.compapp.catd.ConfiguredTest" haltonfailure="no" todir="${test.results.dir}"/>
            <syspropertyset>
                <propertyref prefix="test-sys-prop."/>
                <mapper to="*" from="test-sys-prop.*" type="glob"/>
            </syspropertyset>
            <formatter usefile="false" type="brief"/>
            <formatter type="xml"/>
        </junit>
    </target>
    <target name="-do-single-test-run" if="netbeans.home+have.tests" depends="init,-pre-test-run">
        <junit showoutput="true" fork="yes" dir="${basedir}" failureproperty="tests.failed" errorproperty="tests.failed">
            <classpath>
                <pathelement path="${netbeans.home}/../soa1/modules/ext/jbi/catd.jar"/>
                <pathelement path="${netbeans.home}/../soa1/modules/ext/jbi/xmlunit1.0.jar"/>
                <pathelement path="${netbeans.home}/../soa1/modules/ext/jbi/httpunit-1.6.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/ext/junit-3.8.1.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/ext/jaxrpc16/FastInfoset.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/ext/jaxrpc16/saaj-api.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/ext/jaxrpc16/saaj-impl.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-xdm.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-xam.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-editor-lib.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-text.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-editor.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-editor-util.jar"/>
                <pathelement path="${netbeans.home}/../ide7/modules/org-netbeans-modules-xml-core.jar"/>
                <pathelement path="${netbeans.home}/../platform6/lib/org-openide-modules.jar"/>
                <pathelement path="${netbeans.home}/../platform6/lib/org-openide-util.jar"/>
                <pathelement path="${netbeans.home}/../platform6/modules/org-openide-options.jar"/>
                <pathelement path="${netbeans.home}/../platform6/modules/org-openide-text.jar"/>
                <pathelement path="${netbeans.home}/../platform6/modules/org-openide-loaders.jar"/>
                <pathelement path="${netbeans.home}/../platform6/modules/org-openide-nodes.jar"/>
                <pathelement path="${netbeans.home}/../platform6/core/org-openide-filesystems.jar"/>
            </classpath>
            <test name="org.netbeans.modules.compapp.catd.ConfiguredTest" haltonfailure="no" todir="${test.results.dir}"/>
            <syspropertyset>
                <propertyref prefix="test-sys-prop."/>
                <mapper to="*" from="test-sys-prop.*" type="glob"/>
            </syspropertyset>
            <formatter usefile="false" type="brief"/>
            <formatter type="xml"/>
        </junit>
    </target>
    <target name="-post-test-run" if="have.tests" depends="init,-pre-test-run,-do-test-run">
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>
    <target name="-post-single-test-run" if="have.tests" depends="init,-pre-test-run,-do-single-test-run">
        <fail if="tests.failed">Some tests failed; see details above.</fail>
    </target>
    <target name="test-report" if="have.tests" depends="init"/>
    <target name="-test-browse" if="netbeans.home+have.tests" depends="init"/>
    <target name="test" depends="init,-pre-test-run,-do-test-run,test-report,-post-test-run,-test-browse" description="Run unit tests."/>
    <target name="test-single" depends="init,-pre-test-run,-do-single-test-run,test-report,-post-single-test-run,-test-browse" description="Run unit tests."/>
    <target name="debug-single" depends="init,-pre-test-run,-pre-debug,-do-single-test-run,test-report,-post-single-test-run,-test-browse,-post-debug" description="Debug unit tests."/>
    <target name="jbi-unit-test" depends="run,test,undeploy" description="build, deploy, test, and undeploy."/>
</project>
