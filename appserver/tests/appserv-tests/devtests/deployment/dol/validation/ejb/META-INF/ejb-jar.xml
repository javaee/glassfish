<?xml version="1.0"?>
<!DOCTYPE ejb-jar PUBLIC '-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN' 'http://java.sun.com/dtd/ejb-jar_2_0.dtd'>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2017 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://oss.oracle.com/licenses/CDDL+GPL-1.1
    or LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<ejb-jar>
  <description>validation test</description>
  <display-name>validation test</display-name>
  <small-icon>employee-service-icon16x16.jpg</small-icon>
  <large-icon>employee-service-icon32x32.jpg</large-icon>
  <enterprise-beans>
    <session>
      <description>ok</description>
      <display-name>session bean</display-name>
      <small-icon>employee-service-icon16x16.jpg</small-icon>
      <ejb-name>statefulSession</ejb-name>
      <home>examples.sfsb.TraderHome</home>
      <remote>examples.sfsb.TraderRemote</remote>
      <ejb-class>examples.sfsb.TraderBean</ejb-class>
      <session-type>Stateful</session-type>
      <transaction-type>Container</transaction-type>
      <env-entry>
        <description>beas env entryr</description>
        <env-entry-name>BEAS</env-entry-name>
	<env-entry-type>java.lang.Double </env-entry-type>
	<env-entry-value>100.0</env-entry-value>
      </env-entry>
      <env-entry>
        <env-entry-name>MSFT</env-entry-name>
	<env-entry-type>java.lang.Double </env-entry-type>
	<env-entry-value>150.0</env-entry-value>
      </env-entry>
      <ejb-ref>
        <description>enroller ref</description>
        <ejb-ref-name>ejb/Enroller</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>com.sun.s1asdev.ejb.bmp.finder.ejb.EnrollerHome</home>
        <remote>com.sun.s1asdev.ejb.bmp.finder.ejb.Enroller</remote>
      </ejb-ref>
      <security-role-ref>
        <role-name>EMP</role-name>
        <role-link>Employee</role-link>
      </security-role-ref>
      <security-identity>
        <description>run as description</description>
        <run-as>
          <description>run as employee</description>
          <role-name>EMP</role-name>
        </run-as>
      </security-identity>
     <resource-ref>
      <description>jms resource ref</description>
      <res-ref-name>jms/opc/QueueConnectionFactory</res-ref-name>
      <res-type>javax.jms.QueueConnectionFactory</res-type>
      <res-auth>Container</res-auth>
      <res-sharing-scope>Shareable</res-sharing-scope>
     </resource-ref>
     <resource-env-ref>
      <description>jms resource env ref</description>
       <resource-env-ref-name>jms/opc/WorkFlowMgrQueue</resource-env-ref-name>
       <resource-env-ref-type>javax.jms.Queue</resource-env-ref-type>
      </resource-env-ref>
    </session>
    <entity>
      <description>entity bean</description>
      <display-name>AccountBean</display-name>
      <large-icon>employee-service-icon32x32.jpg</large-icon>
      <ejb-name>AccountBean</ejb-name>
      <home>com.sun.s1peqe.security.integration.bankadmin.daomanager.AccountRemoteHome</home>
      <remote>com.sun.s1peqe.security.integration.bankadmin.daomanager.AccountRemote</remote>
      <local-home>com.sun.s1peqe.security.integration.bankadmin.daomanager.AccountLocalHome</local-home>
      <local>com.sun.s1peqe.security.integration.bankadmin.daomanager.AccountLocal</local>
      <ejb-class>com.sun.s1peqe.security.integration.bankadmin.daomanager.AccountBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>AccountBeanSchema</abstract-schema-name>
      <cmp-field>
        <description>cmp account</description>
        <field-name>accountID</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>amount</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>privileges</field-name>
      </cmp-field>
      <primkey-field>accountID</primkey-field>
      <env-entry>
        <env-entry-name>ABC</env-entry-name>
        <env-entry-type>java.lang.Double </env-entry-type>
        <env-entry-value>50.0</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>statefulSession</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>examples.sfsb.TraderHome</home>
        <remote>examples.sfsb.TraderRemote</remote>
      </ejb-ref>
      <ejb-local-ref>
        <ejb-ref-name>ejb/local/Address</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.j2ee.blueprints.opc.purchaseorder.ejb.AddressLocalHome</local-home>
        <local>com.sun.j2ee.blueprints.opc.purchaseorder.ejb.AddressLocal</local>
        <ejb-link>AddressBean</ejb-link>
     </ejb-local-ref>
      <security-role-ref>
        <description>manager role ref</description>
        <role-name>Manager</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>Administrator</role-name>
        <role-link>Administrator</role-link>
      </security-role-ref>
      <security-identity>
        <description>identity</description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
     <resource-ref>
      <res-ref-name>jms/opc/QueueConnectionFactory</res-ref-name>
      <res-type>javax.jms.QueueConnectionFactory</res-type>
      <res-auth>Container</res-auth>
      <res-sharing-scope>Shareable</res-sharing-scope>
     </resource-ref>
     <resource-env-ref>
       <resource-env-ref-name>jms/opc/WorkFlowMgrQueue</resource-env-ref-name>
       <resource-env-ref-type>javax.jms.Queue</resource-env-ref-type>
      </resource-env-ref>
      <query>
        <description>find all query</description>
        <query-method>
          <method-name>findAll</method-name>
          <method-params/>
        </query-method>
        <ejb-ql>SELECT object(p) FROM Player p</ejb-ql>
      </query>
    </entity>
    <entity>
      <display-name>CustomerBean</display-name>
      <ejb-name>CustomerBean</ejb-name>
      <home>com.sun.s1peqe.security.integration.bankadmin.daomanager.CustomerRemoteHome</home>
      <remote>com.sun.s1peqe.security.integration.bankadmin.daomanager.CustomerRemote</remote>
      <local-home>com.sun.s1peqe.security.integration.bankadmin.daomanager.CustomerLocalHome</local-home>
      <local>com.sun.s1peqe.security.integration.bankadmin.daomanager.CustomerLocal</local>
      <ejb-class>com.sun.s1peqe.security.integration.bankadmin.daomanager.CustomerBean</ejb-class>
      <persistence-type>Container</persistence-type>
      <prim-key-class>java.lang.String</prim-key-class>
      <reentrant>False</reentrant>
      <cmp-version>2.x</cmp-version>
      <abstract-schema-name>CustomerBeanSchema</abstract-schema-name>
      <cmp-field>
        <field-name>customerID</field-name>
      </cmp-field>
      <cmp-field>
        <field-name>customerName</field-name>
      </cmp-field>
      <primkey-field>customerID</primkey-field>
      <ejb-local-ref>
        <ejb-ref-name>ejb/Account</ejb-ref-name>
        <ejb-ref-type>Entity</ejb-ref-type>
        <local-home>com.sun.s1peqe.security.integration.bankadmin.daomanager.AccountLocalHome</local-home>
        <local>com.sun.s1peqe.security.integration.bankadmin.daomanager.AccountLocal</local>
        <ejb-link>AccountBean</ejb-link>
      </ejb-local-ref>
      <security-role-ref>
        <role-name>Manager</role-name>
        <role-link>Manager</role-link>
      </security-role-ref>
      <security-role-ref>
        <role-name>Administrator</role-name>
        <role-link>Administrator</role-link>
      </security-role-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
   </entity>
   <message-driven>
      <description>message driven bean</description>
      <display-name>SimpleMessageEJB</display-name>
      <small-icon>employee-service-icon16x16.jpg</small-icon>
      <ejb-name>SimpleMessageEJB</ejb-name>
      <ejb-class>com.sun.s1peqe.ejb.mdb.simple.ejb.SimpleMessageBean</ejb-class>
      <transaction-type>Bean</transaction-type>
      <message-selector>JMSType = `car' AND color = `blue' AND weight &gt; 2500
      </message-selector>
      <acknowledge-mode>Auto-acknowledge</acknowledge-mode>
      <message-driven-destination>
        <destination-type>javax.jms.Queue</destination-type>
        <subscription-durability>Durable</subscription-durability>
      </message-driven-destination>
      <env-entry>
        <env-entry-name>param/SendMail</env-entry-name>
        <env-entry-type>java.lang.Boolean</env-entry-type>
        <env-entry-value>false</env-entry-value>
      </env-entry>
      <ejb-ref>
        <ejb-ref-name>statefulSession</ejb-ref-name>
        <ejb-ref-type>Session</ejb-ref-type>
        <home>examples.sfsb.TraderHome</home>
        <remote>examples.sfsb.TraderRemote</remote>
      </ejb-ref>
      <security-identity>
        <description></description>
        <use-caller-identity></use-caller-identity>
      </security-identity>
      <resource-ref>
        <res-ref-name>jms/opc/QueueConnectionFactory</res-ref-name>
        <res-type>javax.jms.QueueConnectionFactory</res-type>
        <res-auth>Container</res-auth>
        <res-sharing-scope>Shareable</res-sharing-scope>
      </resource-ref>
      <resource-env-ref>
         <resource-env-ref-name>jms/opc/OrderFillerQueue</resource-env-ref-name>
         <resource-env-ref-type>javax.jms.Queue</resource-env-ref-type>
      </resource-env-ref>
      <resource-env-ref>
         <resource-env-ref-name>jms/opc/CRMQueue</resource-env-ref-name>
         <resource-env-ref-type>javax.jms.Queue</resource-env-ref-type>
      </resource-env-ref>
    </message-driven>
  </enterprise-beans>

  <relationships>
    <description>all relations</description>
    <ejb-relation>
      <description>customer and account</description>
      <ejb-relation-name>Customer-has-Accounts</ejb-relation-name>
      <ejb-relationship-role>
        <description>customer has account</description>
        <ejb-relationship-role-name>Customer-has-Accounts</ejb-relationship-role-name>
        <multiplicity>One</multiplicity>
        <cascade-delete></cascade-delete>
        <relationship-role-source>
          <description>customer source</description>
          <ejb-name>CustomerBean</ejb-name>
        </relationship-role-source>
        <cmr-field>
          <description>account cmr</description>
          <cmr-field-name>accounts</cmr-field-name>
          <cmr-field-type>java.util.Collection</cmr-field-type>
        </cmr-field>
      </ejb-relationship-role>
      <ejb-relationship-role>
        <ejb-relationship-role-name>AccountBean-CustomerBean</ejb-relationship-role-name>
        <multiplicity>Many</multiplicity>
        <cascade-delete></cascade-delete>
        <relationship-role-source>
          <ejb-name>AccountBean</ejb-name>
        </relationship-role-source>
      </ejb-relationship-role>
    </ejb-relation>
  </relationships>

  <assembly-descriptor>
  <security-role>
    <description>employee role</description>
    <role-name>Employee</role-name>
  </security-role>
  <security-role>
    <role-name>Manager</role-name>
  </security-role>
  <security-role>
    <role-name>GeneralUser</role-name>
  </security-role>
  <security-role>
    <role-name>Customer</role-name>
  </security-role>
  <security-role>
    <role-name>Administrator</role-name>
  </security-role>
  <method-permission>
      <description>all customer methods permission</description>
      <role-name>Administrator</role-name>
      <method>
        <description>all customer methods</description>
        <ejb-name>CustomerBean</ejb-name>
        <method-name>*</method-name>
      </method>
  </method-permission>
  <method-permission>
      <role-name>Manager</role-name>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-name>*</method-name>
      </method>
  </method-permission>
  <method-permission>
      <role-name>GeneralUser</role-name>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-name>*</method-name>
      </method>
  </method-permission>
    <container-transaction>
      <description>remove trans</description>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>createAccount</method-name>
        <method-params>
          <method-param>com.sun.s1peqe.security.integration.bankadmin.daomanager.AccountDataObject</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>createAccount</method-name>
        <method-params>
          <method-param>com.sun.s1peqe.security.integration.bankadmin.daomanager.AccountDataObject</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getDAO</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getDAO</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>java.lang.Object</method-param>
        </method-params>
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCustomerID</method-name>
        <method-params />
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getCustomerID</method-name>
        <method-params />
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>getCustomerName</method-name>
        <method-params />
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>getCustomerName</method-name>
        <method-params />
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>findByPrimaryKey</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>javax.ejb.Handle</method-param>
        </method-params>
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>Local</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>Remote</method-intf>
        <method-name>remove</method-name>
        <method-params />
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>LocalHome</method-intf>
        <method-name>createCustomer</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>CustomerBean</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>createCustomer</method-name>
        <method-params>
          <method-param>java.lang.String</method-param>
          <method-param>java.lang.String</method-param>
        </method-params>
      </method>
      <trans-attribute>RequiresNew</trans-attribute>
    </container-transaction>
    <container-transaction>
      <method>
        <ejb-name>statefulSession</ejb-name>
	<method-name>*</method-name>
      </method>
      <trans-attribute>Required</trans-attribute>
    </container-transaction>
    <exclude-list>
      <description>account exclude list</description>
      <method>
        <ejb-name>AccountBean</ejb-name>
        <method-intf>Home</method-intf>
        <method-name>remove</method-name>
        <method-params>
          <method-param>javax.ejb.Handle</method-param>
        </method-params>
      </method>
    </exclude-list>
  </assembly-descriptor>  
  <ejb-client-jar>cart-ejb-client.jar</ejb-client-jar>
</ejb-jar>
