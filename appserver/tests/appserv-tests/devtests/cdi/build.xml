<?xml version="1.0" encoding="ISO-8859-1"?>
<!--

    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.

    Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.

    The contents of this file are subject to the terms of either the GNU
    General Public License Version 2 only ("GPL") or the Common Development
    and Distribution License("CDDL") (collectively, the "License").  You
    may not use this file except in compliance with the License.  You can
    obtain a copy of the License at
    https://oss.oracle.com/licenses/CDDL+GPL-1.1
    or LICENSE.txt.  See the License for the specific
    language governing permissions and limitations under the License.

    When distributing the software, include this License Header Notice in each
    file and include the License file at LICENSE.txt.

    GPL Classpath Exception:
    Oracle designates this particular file as subject to the "Classpath"
    exception as provided by Oracle in the GPL Version 2 section of the License
    file that accompanied this code.

    Modifications:
    If applicable, add the following below the License Header, with the fields
    enclosed by brackets [] replaced by your own identifying information:
    "Portions Copyright [year] [name of copyright owner]"

    Contributor(s):
    If you wish your version of this file to be governed by only the CDDL or
    only the GPL Version 2, indicate your decision by adding "[Contributor]
    elects to include this software in this distribution under the [CDDL or GPL
    Version 2] license."  If you don't indicate a single choice of license, a
    recipient has the option to distribute your version of this file under
    either the CDDL, the GPL Version 2 or to extend the choice of license to
    its licensees as provided above.  However, if you add GPL Version 2 code
    and therefore, elected the GPL Version 2 license, then the option applies
    only if the new code is made subject to such option by the copyright
    holder.

-->

<!DOCTYPE project [
<!ENTITY commonSetup SYSTEM "./../../config/properties.xml">
<!ENTITY commonBuild SYSTEM "./../../config/common.xml">
<!ENTITY commonRun SYSTEM "./../../config/run.xml">
<!ENTITY reporting   SYSTEM "./report.xml">
]>

<project name="cdi" default="usage" basedir=".">

    &commonSetup;
    &commonBuild;
    &commonRun;
    &reporting;
    
    <property name="cdi-target" value="all"/>

    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${env.APS_HOME}/devtests/cdi/lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <target name="pe-all">
        <antcall target="backup-config-pe"/>
	<echo message="NOTE: The file ${env.APS_HOME}/config.properties is being replaced with ${basedir}/config/pe-config.properties. The file will be reverted to its original state after the completion of these tests."/>
	<copy file="${basedir}/config/pe-config.properties" tofile="${env.APS_HOME}/config.properties" overwrite="true"/>
	<antcall target="create-pe-passwordfile"/>
	<antcall target="all"/>
        <antcall target="restore-config-pe"/>
    </target>
	
    <target name="das-all">
        <antcall target="backup-config-pe"/>
        <echo message="NOTE: The file ${env.APS_HOME}/config.properties is being replaced with ${basedir}/config/das-config.properties. The file will be reverted to its original state after the completion of these tests."/>
	<copy file="${basedir}/config/das-config.properties" tofile="${env.APS_HOME}/config.properties" overwrite="true"/>
	<antcall target="create-ee-passwordfile"/>
	<antcall target="all"/>
        <antcall target="restore-config-pe"/>
    </target>

    <target name="ee-all">
        <antcall target="backup-config-pe"/>
        <antcall target="backup-config-ee"/>
        <echo message="NOTE: The file ${env.APS_HOME}/config.properties is being replaced with ${basedir}/config/das-config.properties. The file will be reverted to its original state after the completion of these tests."/>
	<copy file="${basedir}/config/ee-config.properties" tofile="${env.APS_HOME}/config.properties" overwrite="true"/>
	<copy file="${basedir}/config/ee-config.properties" tofile="${env.APS_HOME}/eeconfig/ee-config.properties" overwrite="true"/>
	<antcall target="create-ee-passwordfile"/>
	<antcall target="ee"/>
	<antcall target="all"/>
        <antcall target="restore-config-pe"/>
        <antcall target="restore-config-ee"/>
    </target>

    <target name="backup-config-pe" depends="replace-password-with-passwordfile">
	<copy file="${env.APS_HOME}/config.properties" tofile="${env.APS_HOME}/config.properties.bak" overwrite="true"/>
    </target>

    <target name="restore-config-pe" depends="undo-replace-password-with-passwordfile">
	<copy file="${env.APS_HOME}/config.properties.bak" tofile="${env.APS_HOME}/config.properties" overwrite="true"/>
    </target>
		
    <target name="backup-config-ee">
	<copy file="${env.APS_HOME}/eeconfig/ee-config.properties" tofile="${env.APS_HOME}/eeconfig/ee-config.properties.bak" overwrite="true"/>
    </target>

    <target name="restore-config-ee">
	<copy file="${env.APS_HOME}/eeconfig/ee-config.properties.bak" tofile="${env.APS_HOME}/eeconfig/ee-config.properties" overwrite="true"/>
    </target>
    
    <target name="create-pe-passwordfile">
	<property file="${env.APS_HOME}/config.properties"/>
	<echo message="AS_ADMIN_PASSWORD=${admin.password}${line.separator}" file="${env.APS_HOME}/devtests/cdi/config/password.txt"/>
    </target>

    <target name="create-ee-passwordfile">
	<property file="${env.APS_HOME}/config.properties"/>
	<echo message="AS_ADMIN_PASSWORD=${admin.password}${line.separator}" file="${env.APS_HOME}/devtests/cdi/config/password.txt"/>
	<echo message="AS_ADMIN_MASTERPASSWORD=${master.password}${line.separator}" file="${env.APS_HOME}/devtests/cdi/config/password.txt" append="true"/>
    </target>
    
    <target name="replace-password-with-passwordfile">
	<replace dir="${env.APS_HOME}/config/">
           <include name="**/*.xml"/>
	   <replacetoken>--password ${admin.password}</replacetoken>
	   <replacevalue>--passwordfile ${env.APS_HOME}/devtests/cdi/config/password.txt</replacevalue>
	</replace>
    </target>

    <target name="undo-replace-password-with-passwordfile">
	<replace dir="${env.APS_HOME}/config/">
           <include name="**/*.xml"/>
	   <replacetoken>--passwordfile ${env.APS_HOME}/devtests/cdi/config/password.txt</replacetoken>
	   <replacevalue>--password ${admin.password}</replacevalue>
	</replace>
    </target>
	
    <target name="run-test">
        <antcall target="cdi">
        <param name="cdi-target" value="run-test"/>
        </antcall>
    </target>

    <target name="all">
        <antcall target="cdi">
        <param name="cdi-target" value="all"/>
        </antcall>
    </target>

    <target name="clean">
        <antcall target="cdi">
        <param name="cdi-target" value="clean"/>
        </antcall>
    </target>

    <target name="build">
        <antcall target="cdi">
        <param name="cdi-target" value="build"/>
        </antcall>
    </target>

    <target name="setup">
        <antcall target="cdi">
        <param name="cdi-target" value="setup"/>
        </antcall>
    </target>

    <target name="deploy">
        <antcall target="cdi">
        <param name="cdi-target" value="deploy"/>
        </antcall>
    </target>

    <target name="undeploy">
        <antcall target="cdi">
        <param name="cdi-target" value="undeploy"/>
        </antcall>
    </target>

    <target name="unsetup">
        <antcall target="cdi">
        <param name="cdi-target" value="unsetup"/>
        </antcall>
    </target>

    <target name="run">
        <antcall target="cdi">
        <param name="cdi-target" value="run"/>
        </antcall>
    </target>

    <target name="cdi">
        <record name="cdi.output" action="start" />
        <antcall target="test-setup" />
		<echo message="@@## Running all CDI developer tests##@@"/>
        <ant dir="smoke-tests" target="${cdi-target}"/>
        <ant dir="qualifiers" target="${cdi-target}"/>

        <!--
        Not running until https://issues.jboss.org/browse/CDI-331 is sorted out.
        In 1.1.10.Final the test passes.
        In 2.0 Beta it fails.
        See email from Jozef 3/4/13
        <ant dir="alternatives" target="${cdi-target}"/>
        <ant dir="ambiguous-deps" target="${cdi-target}"/>
        -->
        <ant dir="events" target="${cdi-target}"/>
        <ant dir="injection-point" target="${cdi-target}"/>
        <ant dir="interceptors" target="${cdi-target}"/>
        <ant dir="javaee-component-resources" target="${cdi-target}"/>
        <ant dir="javaee-integration" target="${cdi-target}"/>
        <ant dir="managed-beans" target="${cdi-target}"/>
        <ant dir="portable-extensions" target="${cdi-target}"/>
        <ant dir="producer-methods" target="${cdi-target}"/>

        <!--
        Not running until https://issues.jboss.org/browse/CDI-331 is sorted out.
        In 1.1.10.Final the test passes.
        In 2.0 Beta it fails.
        See email from Jozef 3/4/13
        <ant dir="programmatic-lookup" target="${cdi-target}"/>
        -->

        <ant dir="scopes" target="${cdi-target}"/>
        <ant dir="specialization" target="${cdi-target}"/>
        <ant dir="stereotypes" target="${cdi-target}"/>
        <ant dir="transactions" target="${cdi-target}"/>
        <ant dir="unproxyable-deps" target="${cdi-target}"/>
        <ant dir="unsatisfied-deps" target="${cdi-target}"/>

        <ant dir="implicit" target="${cdi-target}"/>

        <if>
            <equals arg1="${test.embedded.mode}" arg2="true"/>
            <then>
                <echo> Excluding testcase directory osgi-cdi for embedded mode</echo>
            </then>
            <else>
                <ant dir="osgi-cdi" target="${cdi-target}"/>
            </else>
        </if>
        <!-- now generate report -->
        <antcall target="report"/>
        <antcall target="test-unsetup" />
        <record name="cdi.output" action="stop" />
    </target>

    <target name="usage">
	<echo> Usage:
		ant cdi (Executes the cdi tests)
		ant all (Executes all the cdi tests)
		ant clean (cleans all the cdi tests)
		ant build (builds all the cdi tests)
		ant setup (sets up all resources for cdi tests)
		ant deploy (deploys all the cdi apps)
		ant run (Executes all the cdi tests)
		ant undeploy (undeploys all the  cdi apps)
		ant unsetup (unsets all resources for cdi tests)
	</echo>
    </target>

    <target name="report-local">
      <exec executable="sh">
        <arg value="./resultCount.sh"/>
      </exec>
    </target>

    <target name="test-setup">
        <antcall target="start-database"/>
        <ant target="startDomain"/>
    </target>

    <target name="test-unsetup">
        <echo message="Stopping app server instance"/>
        <ant target="stopDomain"/>
        <antcall target="stop-database"/>
    </target>

    <target name="start-database" depends="init-common">
        <echo message="Starting database" />
        <!-- spawn is added to prevent a hang on Windows -->
        <exec spawn="true" executable="${ASADMIN}" failonerror="false">
            <arg line="start-database"/>
        </exec>
    </target>

    <target name="stop-database" depends="init-common">
        <echo message="Stopping database"/>
        <exec executable="${ASADMIN}" failonerror="false">
            <arg line="stop-database"/>
        </exec>
    </target>

</project>
