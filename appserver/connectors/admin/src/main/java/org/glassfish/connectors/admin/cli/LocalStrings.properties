#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

noApplications=No applications found.
nothingToList=Nothing to list.
create.connector.resource=Creates a connector resource with the specified JNDI name
create.connector.resource.poolname=The name of the connector connection pool. If two or more connector resource elements point to the same connection pool element, they use the same pool connection at runtime.
create.connector.resource.objecttype=
create.connector.resource.description=Text providing descriptive details about the connector resource.
create.connector.resource.jndi_name=The JNDI name of this connector resource.
create.connector.resource.enabled=Determines whether the connector resource is enabled at runtime. The default value is true.
create.connector.resource.success=Connector resource {0} created.
create.connector.resource.duplicate=A resource named {0} already exists.
create.connector.resource.fail=Unable to create connector resource {0}.
create.connector.resource.noJndiName=No JNDI name defined for the connector resource.
create.connector.resource.connPoolNotFound=Attribute value (pool-name = {0}) is not found in list of connector connection pools.
delete.connector.resource=Remove a connector resource with the specified JNDI name
delete.connector.resource.jndi_name=The JNDI name of this connector resource to be removed.
delete.connector.resource.success=Connector resource {0} deleted.
delete.connector.resource.fail=Unable to delete connector resource {0}.
delete.connector.resource.noJndiName=No JNDI name defined for the connector resource.
delete.connector.resource.notfound=A connector resource named {0} does not exist.
delete.connector.resource.resource-ref.exist=Connector resource [ {0} ] is referenced in an instance/cluster target, Use delete-resource-ref on appropriate target.
delete.connector.resource.multiple.resource-refs=Connector resource [ {0} ] is referenced in multiple instance/cluster targets, Use delete-resource-ref on appropriate target.
delete.connector.resource.no.resource-ref=Connector resource [ {0} ] is not referenced in target [ {1} ]
delete.connector.resource.notAllowed=The {0} resource cannot be deleted as it is required to be configured in the system.
list.connector.resources=List all connector resources
list.connector.resources.success=Command list-connector-resources executed successfully.
list.connector.resources.fail=Command list-connector-resources failed.
list.connector.resources.empty=Nothing to list.
create.connector.connection.pool=Adds a connection pool with the specified connection pool name
create.connector.connection.pool.raname=The name of the resource adapter.
create.connector.connection.pool.connectiondefinition=The name of the connection definition.
create.connector.connection.pool.steadypoolsize=The minimum and initial number of connections maintained in the pool. The default value is 8.
create.connector.connection.pool.maxpoolsize=The maximum number of connections that can be created to satisfy client request. The default value is 32.
create.connector.connection.pool.maxwait=The amount of time, in milliseconds, that a caller must wait before a connection is created, if a connection is not available.  If set to 0, the caller is blocked indefinitely until a resource is available or until an error occurs.  The default value is 60000.
create.connector.connection.pool.poolresize=Quantity by which the pool will scale-up or scale-down the number of connections. Scale-up: When the pool has no free connections, pool will scale-up by this quantity. Scale-down: All the invalid and idle connections are removed, sometimes resulting in removing connections of quantity greater than this value. Steadypoolsize will be ensured. Possible values are from 0 to 32. The default value is 2.
create.connector.connection.pool.ping=A pool with this attribute set to true is pinged during the pool creation or reconfiguration to identify and warn of any erroneous values for the its attributes. Default value of this attribute is false.
create.connector.connection.pool.pooling=When set to false, this attribute disables connection pooling. Default value of this attribute is true.
create.connector.connection.pool.idletimeout=The maximum time, in seconds, that a connection can remain idle in the pool. After this time, the pool can close this connection. The default value is 300.
create.connector.connection.pool.isconnectvalidatereq=If the value is set to true, the connections will be checked to see if they are usable, before they are given out to the application. The default value is false.
create.connector.connection.pool.failconnection=If set to true, all connections in the pool are closed if a single validation check fails. This parameter is mandatory if the is-connection-validation-required is set to true. Legal values are on, off, yes, no, 1, 0, true or false. The default value is false.
create.connector.connection.pool.transactionsupport= Indicates the level of transaction support that this pool will have.  Possible values are 'XATransaction', 'LocalTransaction' and 'NoTransaction'.  This attribute can have a value lower than or equal to but not higher than the resource adapter's transaction support attribute.  The resource adapter's transaction support attribute has an order of values, where 'XATransaction' is the highest, and 'NoTransaction' is the lowest.
create.connector.connection.pool.description=Text providing details about the connector connection pool.
create.connector.connection.pool.property=Optional attribute name/value pairs for configuring the connector connection pool.
create.connector.connection.pool.connector_connection_pool_name=The name of the connector connection pool to be created.
create.connector.connection.pool.success=Connector connection pool {0} created.
create.connector.connection.pool.fail=Connector connection pool {0} creation failed.
create.connector.connection.pool.noJndiName=No pool name defined for connector connection pool.
create.connector.connection.pool.duplicate=A resource named {0} already exists.
admin.mbeans.rmb.invalid_ra_connectdef_not_found=Invalid connection definition. Connector Module with connection definition {0} not found.
admin.mbeans.rmb.null_res_adapter=Resource Adapter Name is null
admin.mbeans.rmb.invalid_ra_app_not_found=Invalid name. Application with name {0} not found.
admin.mbeans.rmb.invalid_ra_cm_not_found=Invalid name. Connector Module with name {0} not found.
delete.connector.connection.pool=Remove the specified connector connection pool
delete.connector.connection.pool.cascade=When set to true, it deletes all connector resources associated with the pool, apart from the pool itself. When set to false, the deletion of pool fails if any resources are associated with the pool. The resource must be deleted explicitly or the option must be set to true. The default setting is false.
delete.connector.connection.pool.connector_connection_pool_name=The name of the connector connection pool to be removed.
delete.connector.connection.pool.success=Connector connection pool {0} deleted.
delete.connector.connection.pool.fail=Unable to delete connector connection pool {0}.
delete.connector.connection.pool.notfound=A connector connection pool named {0} does not exist.
delete.connector.connection.pool.noJndiName=No id defined for connector connection pool.
delete.connector.connection.pool.pool_in_use=Some connector resources are referencing connection pool {0}. Use ''cascade'' option to delete them as well.
list.connector.connection.pools=List all connector connection pools
list.connector.connection.pools.success=Command list-connector-connection-pools executed successfully.
list.connector.connection.pools.fail=Command list-connector-connection-pools failed
list.connector.connection.pools.empty=Nothing to list.
create.admin.object=Adds the administered object with the specified JNDI name
create.admin.object.restype=This option is used to administer the object resource types, as defined by the resource adapter in the ra.xml file.
create.admin.object.raname=This is the name of the resource adapter associated with this object.
create.admin.object.description=Text providing descriptive details about the connector resource.
create.admin.object.jndi_name=The JNDI name of the administered object to be created.
create.admin.object.enabled=Specifies if the object is enabled. The default value is true.
create.admin.object.success=Administered object {0} created.
create.admin.object.duplicate=A resource named {0} already exists.
create.admin.object.fail=Unable to create administered object {0}.
create.admin.object.noJndiName=No JNDI name defined for the administered object.
create.admin.object.raNotFound=Applications: Config element connector-module {0} is not found.
create.admin.object.noResTypes=Could not find admin object interface names (resTypes) from ConnectorRuntime for resource adapter {0}.
admin.mbeans.rmb.null_ao_intf=Resource Adapter {0} does not contain any resource type for admin-object. Please specify another res-adapter.
admin.mbeans.rmb.ao_intf_impl_check_failed=Could not determine admin object resource information of Resource Adapter [ {0} ] for Resource Type [ {1} ] and classname [ {2} ]
admin.mbeans.rmb.multiple_admin_objects.found.for.restype=Need to specify admin-object classname parameter (--classname) as multiple admin-objects use this resource type [ {0} ] 
admin.mbeans.rmb.invalid_res_type=Invalid Resource Type: {0}
delete.admin.object=Remove the administered object with the specified JNDI name
delete.admin.object.jndi_name=JNDI name of the administered object to be deleted.
delete.admin.object.success=Administered object {0} deleted.
delete.admin.object.fail=Unable to delete administered object {0}.
delete.admin.object.noJndiName=No JNDI name defined for the administered object.
delete.admin.object.notfound=An administered object named {0} does not exist.
delete.admin.object.resource-ref.exist=Admin object resource [ {0} ] is referenced in an instance/cluster target, Use delete-resource-ref on appropriate target.
delete.admin.object.multiple.resource-refs=Admin object resource [ {0} ] is referenced in multiple instance/cluster targets, Use delete-resource-ref on appropriate target.
delete.admin.object.no.resource-ref=Admin object resource [ {0} ] is not referenced in target [ {1} ]
list.admin.objects=List all the administered objects
list.admin.objects.success=Command list-connector-resources executed successfully.
list.admin.objects.fail=Command list-connector-resources failed.
create.resource.adapter.config=Creates the configuration information in domain.xml for the connector module
create.resource.adapter.config.threadpoolid=The threadpool ID from which the work manager gets the thread. This option takes only one threadpool ID.
create.resource.adapter.config.raname=This operand indicates the connector module name. It is the value of the resource-adapter-name in the domain.xml file.
create.resource.adapter.config.property=This option specifies the configuration properties of the resource adapter java bean. The properties can be specified as name value pairs separated by a colon (:).
create.resource.adapter.confignoRAName=No RA Name defined for resource adapter config.
create.resource.adapter.config.duplicate=Resource adapter config already exists for RAR {0}.
create.resource.adapter.config.fail=Unable to create resource adapter config {0}. {1}
delete.resource.adapter.config=Deletes the resource adapter configuration
delete.resource.adapter.config.raname=This operand helps specify the connector module name. This value is kept in the resource-adapter-name in the domain.xml file.
delete.resource.adapter.config.noRARName=No RAR name defined for resource adapter config.
delete.resource.adapter.config.notfound=Resource-Adapter-Config for {0} does not exist.
delete.resource.adapter.config.fail=Unable to delete resource adapter config {0}
list.resource.adapter.configs=List the names of the resource\u2014adapter\u2014configs created
list.resource.adapter.configs.raname=This option specifies the connector module name.
list.resource.adapter.configs.verbose=This option helps to list the properties that are configured.
list.resource.adapter.configs.fail=Unable to list resource adapter configs.
create.connector.work.security.map=Creates a work context security map for the specified resource adapter
create.connector.work.security.map.usagetext=create-connector-work-security-map\n\t--raname=raname\n\t--principalsmap (eisprincipal=mappedprincipal)[,eisprincipal=mappedprincipal]* |\n\t--groupsmap (eisgroup=mappedgroup)[,eisgroup=mappedgroup]*\n\t[--description <description>] [-?|--help[=<help(default:false)>]]\n\tmapname
create.connector.work.security.raname=Resource adapter requesting mapping of identities from EIS domain to application server domain.
create.connector.work.security.principalsmap=Specifies a list of backend EIS principals. More than one principal can be specified using a colon separated list. Use either the --principalsmap or --groupsmap options, but not both.
create.connector.work.security.groupsmap=Specifies a list of backend EIS user group. More than one group can be specified using a colon separated list.
create.connector.work.security.mapname=This property specifies the EIS work security map.
create.connector.work.security.map.noRaName=Name not found for connector work security map.
create.connector.work.security.map.noMap=No principalsmap or groupsmap defined for connector work security map.
create.connector.work.security.map.specifyPrincipalsOrGroupsMap=A work-security-map can have either (any number of) group mapping or (any number of) principals mapping but not both. Specify --principalsmap or --groupsmap.
create.connector.work.security.map.duplicate=A connector work security map named {0} for resource adapter {1} already exists.
create.connector.work.security.map.fail=Unable to create connector work security map {0}.
delete.connector.work.security.map=Deletes the work security map for the specified resource adapter
delete.connector.work.security.map.raname=name of the resource adapter for the work security map to be deleted
delete.connector.work.security.map.mapname=name of the work security map to be deleted
delete.connector.work.security.map.notFound=A connector work security map named {0} for resource adapter {1} does not exist.
delete.connector.work.security.map.fail=Unable to delete connector work security map {0} for resource adapter {1}.
list.connector.work.security.maps=List all the connector work security maps for the specified resource adapter.
list.connector.work.security.maps.fail=Unable to list connector work security map {0} for resource adapter {1}.
list.connector.work.security.maps.eisPrincipalAndMappedPrincipal={0}: EIS principal={1}, mapped principal={2}
list.connector.work.security.maps.eisGroupAndMappedGroup= {0}: EIS group={1}, mapped group={2}
list.connector.work.security.maps.workSecurityMapNotFound=Nothing to list. Either the resource adapter {0} does not exist or the resource adapter {0} is not associated with any work security map. 
create.connector.security.map=Creates a security map for the specified connector connection pool
create.connector.security.map.poolname=Specifies the name of the connector connection pool to which the security map belongs
create.connector.security.map.principals=Specifies a list of backend EIS principals. More than one principal can be specified using a : separated list.  User either the --principals or --usergroups option but not both.
create.connector.security.map.usergroups=Specifies a list of backend EIS user groups. More than one usergroup can be specified using a : separated list.
create.connector.security.map.mappedusername=This property specifies the EIS username.
create.connector.security.map.mapname=Name of the security map to be created or updated.
create.connector.security.map.noSecurityMapName=No mapname specified.
create.connector.security.map.duplicate=A security map named {0} already exists for connector connection pool {1}. Please give a different map name.
create.connector.security.map.principal_exists=The principal {0} already exists in connector connection pool {1}. Please give a different principal name.
create.connector.security.map.usergroup_exists=The user-group {0} already exists in connector connection pool {1}. Please give a different user-group name.
create.connector.security.map.noPrincipalsOrGroupsMap=Either the principal or the user group has to be specified while creating a security map. Both cannot be null.
create.connector.security.map.specifyPrincipalsOrGroupsMap=A work-security-map can have either (any number of) group mapping or (any number of) principals mapping but not both. Specify --principals or --usergroups.
create.connector.security.map.noSuchPoolFound=Specified connector connection pool {0} does not exist. Please specify a valid pool name.
create.connector.security.map.fail=Unable to create connector security map {0} for connector connection pool {1}
create.connector.security.map.usagetext=create-connector-security-map\n\t--poolname connector_connection_pool_name\n\t--principals principal-name[,principal-name]* |\n\t--usergroups user-group[,user-group]* --mappedusername user-name\n\t[-?|--help[=<help(default:false)>]] mapname
delete.connector.security.map=Deletes a security map for the specified connector connection pool
delete.connector.security.map.poolname=Specifies the name of the connector connection pool to which the security map that is to be deleted belongs
delete.connector.security.map.mapname=Name of the security map to be deleted
delete.connector.security.map.notFound=A security map named {0} for connector connection pool {1} does not exist.
delete.connector.security.map.fail=Unable to delete security map {0} for connector connection pool {1}.
list.connector.security.maps=List the security maps belonging to the specified connector connection pool
list.connector.security.maps.empty=Nothing to list.
list.connector.security.securitymap=Specified the name of the security map contained within the connector connection pool from which the identity and principals should be listed.
list.connector.security.pool-name=Name of the connector connection pool for which you want to list security maps
list.connector.security.maps.securityMapNotFound=Security map {0} does not exist for connector connection pool {1}. Please give a valid map name.
list.connector.security.maps.fail=Unable to list security map {0} for connector connection pool {1}
list.connector.security.maps.principals=\tPrincipal(s)
list.connector.security.maps.groups=\tUser Group(s)
list.connector.security.maps.backendPrincipal=\tBackend Principal
list.connector.security.maps.username=\t\tUser Name = {0}
list.connector.security.maps.password=\t\tPassword = {0}
update.connector.security.map=Creates or modifies a security map for the specified connector connection pool
update.connector.security.map.usagetext=Update connector security map\n\t--poolname connector_connection_pool_name\n\t[--addprincipals principal-name[,principal-name]*]\n\t[--addusergroups user-group[,user-group]*]\n\t[--removeprincipals principal-name[,principal-name]*]\n\t[--removeusergroups user-group[,user-group]*]\n\t[--mappedusername user-name] [-?|--help[=<help(default:false)>]] mapname
update.connector.security.map.poolname=Specifies the name of the connector connection pool to which the security map that is to be updated or created belongs.
update.connector.security.map.addprincipals=Specifies a colon-separated list of EIS-specific principals to be added. Use either the --addprincipals or --addusergroups options, but not both at the same time.
update.connector.security.map.addusergroups=Specifies a colon-separated list of EIS user groups to be added. Use either the --addprincipals or --addusergroups options, but not both at the same time.
update.connector.security.map.removeprincipals=Specifies a colon-separated list of EIS-specific principals to be removed.
update.connector.security.map.removeusergroups=Specifies a colon-separated list of EIS user groups to be removed.
update.connector.security.map.mappedusername=Specifies the EIS username
update.connector.security.map.mapname=name of the security map to be created or updated
update.connector.security.map.map_does_not_exist=Security map {0} does not exist for connector connection pool {1}. Please give a valid map name.
update.connector.security.map.same_principal_values=This value {0} is given in both --addprincipals and --removeprincipals. The same value cannot given for these options.
update.connector.security.map.same_usergroup_values=This value {0} is given in both --addusergroups and --removeusergroups. The same value cannot given for these options.
update.connector.security.map.principal_does_not_exists=The principal {0} that you want to delete does not exist in connector connection pool {1}. Please give a valid principal name.
update.connector.security.map.usergroup_does_not_exists=The usergroup {0} that you want to delete does not exist in connector connection pool {1}. Please give a valid user-group name.
update.connector.security.map.principals_usergroups_will_be_null=The values in your command will delete all principals and usergroups. You cannot delete all principals and usergroups. At least one of them must exist.
update.connector.security.map.fail=Unable to update security map {0} for connector connection pool {1}.
update.connector.security.map.addPrincipalToExistingUserGroupsWorkSecurityMap=Failed to add principals to a security map with user groups.
update.connector.security.map.addUserGroupsToExistingPrincipalsWorkSecurityMap=Failed to add user groups to a security map with principals.
update.connector.work.security.map.noargs=Update connector work security map should be executed with at least one optional argument of either add(principals/usergroups) or remove(principals/usergroups)
update.connector.work.security.map.noSuchRAFound=Resource Adapter {0} does not exist. Please specify a resource adapter name.
update.connector.work.security.map.mapNotExist=Work Security map {0} does not exist for resource adapter {1}. Please give a valid map name.
update.connector.work.security.map.samePrincipalValues=This value {0} is given in both --addprincipals and --removeprincipals. The same value cannot given for these options.
update.connector.work.security.map.sameUsergroupValues=This value {0} is given in both --addusergroups and --removeusergroups. The same value cannot given for these options.
update.connector.work.security.map.addPrincipalToExistingUserGroupsWorkSecurityMap=Failed to add principals to a security map with user groups.
update.connector.work.security.map.addUserGroupsToExistingPrincipalsWorkSecurityMap=Failed to add user groups to a security map with principals.
update.connector.work.security.map.principals_usergroups_will_be_null=The values in your command will delete all principals and usergroups. You cannot delete all principals and usergroups. At least one of them must exist.
update.connector.work.security.map.principalNotExists=The principal {0} that you want to delete does not exist in security map {1}. Please give a valid principal name.
update.connector.work.security.map.usergroupNotExists=The usergroup {0} that you want to delete does not exist in security map {1}. Please give a valid user-group name.
update.connector.work.security.map.principalExists=The principal {0} already exists in security map {1}. Please give a different principal name.
update.connector.work.security.map.groupExists=The Group {0} already exists in security map {1}. Please give a different group name.
update.connector.work.security.map.fail=Unable to update security map {0} for resource adapter {1}.
flush.connection.pool.fail=Flush Connection Pool failed for {0}.
flush.connection.pool.notexist=Resource pool {0} does not exist.
flush.connection.pool.pooling.disabled=Attempt to Flush Connection Pool failed because Pooling is disabled for pool : {0}
ping.connection.pool=Tests the connectivity to a given connection pool, which may be jdbc-connection-pool or connector-connection-pool.
ping.connection.pool.pool_name=Name of the Connection Pool to be pinged.
ping.connection.pool.success=Ping Connection Pool for {0} is Successful.
ping.connection.pool.fail=Ping Connection Pool failed for {0}.
ping.connection.pool.connPoolNotFound=Connection pool {0} not found.
ping.create.connector.connection.pool.fail=Attempting to ping during Connector Connection Pool Creation : {0} - Failed.
ping.create.connector.connection.pool.success=Attempting to ping during Connector Connection Pool Creation : {0} - Succeeded.
pool.util.app.is.not.enabled=Application [ {0} ] in which the pool [{1} ] is defined, is not enabled.
pool.util.app.does.not.exist=Application [ {0} ] does not exist.
pool.util.module.does.not.exist=Module [ {0} ] does not exist in application [ {1} ]
pool.util.pool.does.not-exist=Pool [ {0} ] does not exist.
pool.util.app.name.needed=--appname is needed when --modulename is specified
create.pmf.resource.not.supported=Persistence manager factory resource is not supported any more. \
  Instead, use the jdbc-resource [ {0} ] referred by the persistence-manager-factory-resource [ {1} ] \
  in the application(s).
