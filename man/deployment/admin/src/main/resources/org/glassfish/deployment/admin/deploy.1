
asadmin Utility Subcommands                             deploy(1)

NAME
     deploy - deploys the specified component

SYNOPSIS
     deploy [--help]
     [--force={false|true}]
     [--virtualservers virtual_servers]
     [--contextroot context_root]
     [--precompilejsp={false|true}]
     [--verify={false|true}]
     [--name component_name]
     [--upload={true|false}]
     [--retrieve local_dirpath]
     [--dbvendorname dbvendorname]
     [--createtables={true|false}|--dropandcreatetables={true|false}]
     [--uniquetablenames={true|false}]
     [--deploymentplan deployment_plan]
     [--enabled={true|false}]
     [--generatermistubs={false|true}]
     [--availabilityenabled={false|true}]
     [--asyncreplication={true|false}]
     [--lbenabled={true|false}]
     [--keepstate={false|true}]
     [--libraries jar_file[,jar_file]*]
     [--target target]
     [--type pkg-type]
     [--properties(name=value)[:name=value]*]
     filepath

DESCRIPTION
     The deploy subcommand deploys applications  to  the  server.
     Applications  can  be  enterprise applications, web applica-
     tions,  Enterprise  JavaBeans   (EJB)   modules,   connector
     modules, and application client modules. If the component is
     already deployed or already exists,  it  is  forcibly  rede-
     ployed  if  the  --force  option  is set to true (default is
     false).

     The --createtables  and  --dropandcreatetables  options  are
     boolean  flags  and therefore can take the values of true or
     false. These options are only used during deployment of  CMP
     beans  that  have not been mapped to a database (that is, no
     sun-cmp-mappings.xml descriptor is provided in the  module's
     META-INF directory). They are ignored otherwise.

     The --createtables  and  --dropandcreatetables  options  are
     mutually  exclusive; only one should be used. If drop and/or
     create tables fails, the deployment does not fail; a warning
     message is provided in the log file.

Java EE 6            Last change: 9 Sep 2010                    1

asadmin Utility Subcommands                             deploy(1)

     This subcommand is supported in remote mode only.

OPTIONS
     --help
     -?

         Displays the help text for the subcommand.

     --force
         If set to true, redeploys  the  component  even  if  the
         specified component has already been deployed or already
         exists. Default is false.

     --virtualservers

         One  or  more  virtual  server  IDs.  Multiple  IDs  are
         separated by commas.

     --contextroot
         Valid only if the archive is a web module. It is ignored
         for  other  archive  types; defaults to filename without
         extension.

     --precompilejsp

         By default this option does not  allow  the  JSP  to  be
         precompiled  during  deployment.  Instead, JSPs are com-
         piled during runtime. Default is false.

     --verify
         If set to true and the required  verifier  packages  are
         installed  from the Update Center, the syntax and seman-
         tics of the deployment descriptor is  verified.  Default
         is false.

     --name

         Name of the deployable component.

         The name can include  an  optional  version  identifier,
         which follows the name and is separated from the name by
         a colon (:). The version identifier must  begin  with  a
         letter or number. It can contain alphanumeric characters
         plus underscore (_), dash (-), and  period  (.)  charac-
         ters.  For more information about module and application
         versions, see the Oracle GlassFish Server  3.1  Applica-
         tion Deployment Guide.

Java EE 6            Last change: 9 Sep 2010                    2

asadmin Utility Subcommands                             deploy(1)

     --upload

         Uploads  the  deployable  file  to  the   administration
         server.  The deployable file must be accessible from the
         client. If the file is accessible  to  both  server  and
         client,  set  the  --upload option to false. The default
         value depends on whether the server you are deploying to
         is  local or remote.  If the server is local, the option
         defaults to false.  If the server is remote, the  option
         defaults  to  true.  Explicitly specifying true or false
         overrides the default.

     --retrieve
         Retrieves the client  stub  JAR  file  from  the  server
         machine to the local directory.

     --dbvendorname

         Specifies the name of  the  database  vendor  for  which
         tables are created. Supported values include db2, mssql,
         mysql, oracle, derby, javadb,  postgresql,  and  sybase.
         These values are case-insensitive. If not specified, the
         value of the database-vendor-name attribute in  sun-ejb-
         jar.xml  is used. If no value is specified, a connection
         is made to  the  resource  specified  by  the  jndi-name
         subelement  of  the cmp-resource element in the sun-ejb-
         jar.xml file, and the database vendor name is  read.  If
         the   connection  cannot be established, or if the value
         is not recognized, SQL-92 compliance is presumed.

     --createtables
          If specified as true, creates tables at  deployment  of
         an  application with unmapped CMP beans. If specified as
         false, tables are not created.  If  not  specified,  the
         value  of  the create-tables-at-deploy entry in the cmp-
         resource element of the sun-ejb-jar.xml file  determines
         whether or not tables are created.

     --dropandcreatetables

         If specified as true when the component  is  redeployed,
         the  tables  created  by  the  previous  deployment  are
         dropped before creating  the  new  tables.   Applies  to
         deployed  applications  with unmapped CMP beans.  Preex-
         isting tables will not be dropped on the initial deploy-
         ment  of  an application or on a deployment that follows
         an explicit undeploy. If specified as false, tables  are
         neither  dropped  nor  created.   If  not specified, the
         tables are dropped if the drop-tables-at-undeploy  entry

Java EE 6            Last change: 9 Sep 2010                    3

asadmin Utility Subcommands                             deploy(1)

         in  the cmp-resource element of the sun-ejb-jar.xml file
         is set to true, and the new tables are  created  if  the
         create-tables-at-deploy  entry  in the cmp-resource ele-
         ment of the sun-ejb-jar.xml file is set to true.

     --uniquetablenames

         Guarantees unique table names  for  all  the  beans  and
         results in a hash code added to the table names. This is
         useful if you have an  application  with  case-sensitive
         bean  names.  Applies  to applications with unmapped CMP
         beans.

     --deploymentplan
         Deploys the deployment plan, which is a  JAR  file  that
         contains  GlassFishTM  Server  descriptors. Specify this
         option when deploying a pure EAR file. A pure  EAR  file
         is an EAR without GlassFish Server descriptors.

     --enabled

         Allows users to access the application. If set to false,
         users  will  not be able to access the application. This
         option enables the application on the  specified  target
         instance or cluster. If you deploy to the target domain,
         this option is ignored, since deploying  to  the  domain
         doesn't  deploy  to  a specific instance or cluster. The
         default is true except for deployment to a  cluster,  in
         which case the default is false.

     --generatermistubs
         If set to true, static RMI-IIOP stubs are generated  and
         put  into the client.jar. If set to false, the stubs are
         not generated. Default is false.

     --availabilityenabled

         This  option  controls  whether   high-availability   is
         enabled  for  web sessions and for stateful session bean
         (SFSB) checkpointing and potentially passivation. If set
         to  false  (default)  all  web  session  saving and SFSB
         checkpointing is disabled for the specified application,
         web  application,  or  EJB  module.  If set to true, the
         specified application or module  is  enabled  for  high-
         availability. Set this option to true only if high avai-
         lability is configured and  enabled  at  higher  levels,
         such as the server and container levels.

Java EE 6            Last change: 9 Sep 2010                    4

asadmin Utility Subcommands                             deploy(1)

     --asyncreplication

         This option controls whether web session and SFSB states
         for  which  high  availability is enabled are first buf-
         fered and then replicated using a separate  asynchronous
         thread.   If  set  to  true  (default),  performance  is
         improved but availability is reduced.  If  the  instance
         where  states are buffered but not yet replicated fails,
         the states are lost. If set  to  false,  performance  is
         reduced  but  availability is guaranteed. States are not
         buffered but immediately transmitted to other  instances
         in the cluster.

     --lbenabled
         This option controls whether the deployed application is
         available for load balancing. The default is true.

     --keepstate

         This  option  controls  whether   web   sessions,   SFSB
         instances,  and  persistently  created  EJB  timers  are
         retained between redeployments. For this option to  work
         for  SFSB instances, there must be no changes to the set
         of instance  variables  in  the  SFSB  bean  class.  The
         default is false.

         If any active web session, SFSB instance, or  EJB  timer
         fails to be preserved or restored, none of these will be
         available when the redeployment  is  complete.  However,
         the redeployment continues and a warning is logged.

         To preserve active state data, GlassFish Server  serial-
         izes  the  data  and  saves it in memory. To restore the
         data, the class loader of the newly redeployed  applica-
         tion deserializes the data that was previously saved.

     --libraries
         A comma-separated list of library JAR files. Specify the
         library  JAR  files by their relative or absolute paths.
         Specify   relative    paths    relative    to    domain-
         dir/lib/applibs. The libraries are made available to the
         application in the order specified.

     --target

         Specifies the target to which you are  deploying.  Valid
         values are:

Java EE 6            Last change: 9 Sep 2010                    5

asadmin Utility Subcommands                             deploy(1)

         server

             Deploys the component to the default server instance
             server and is the default value.

         domain
             Deploys the component to the domain.  If  domain  is
             the  target  for an initial deployment, the applica-
             tion is  deployed  to  the  domain,  but  no  server
             instances  or clusters reference the application. If
             domain is the target for a redeployment (the --force
             option  is set to true), and dynamic reconfiguration
             is enabled for the clusters or server instances that
             reference  the application, the referencing clusters
             or server instances automatically get the  new  ver-
             sion of the application. If redeploying, and dynamic
             configuration is disabled, the referencing  clusters
             or  server  instances  do not get the new version of
             the application until the  clustered  or  standalone
             server instances are restarted.

         cluster_name

             Deploys the component to every  server  instance  in
             the cluster.

         instance_name
             Deploys  the  component  to   a   particular   sever
             instance.

     --type

         The packaging archive type  of  the  component  that  is
         being deployed. Possible values are as follows:

         osgi
             The component is packaged as an OSGi  Alliance  bun-
             dle.

         The --type option is optional. If the component is pack-
         aged as a regular archive, omit this option.

     --properties or --property

         Optional keyword-value  pairs  that  specify  additional
         properties  for the deployment. The available properties
         are determined by the implementation  of  the  component

Java EE 6            Last change: 9 Sep 2010                    6

asadmin Utility Subcommands                             deploy(1)

         that  is  being deployed or redeployed. The --properties
         option and the --property option are equivalent. You can
         use either option regardless of the number of properties
         that you specify.

         Note -

           For properties that  contain  .  (dot)  separators  in
           their  names, using the set subcommand to change these
           properties  requires  a  server  restart.   A   better
           approach  is  to  use the redeploy subcommand with the
           changed properties. If you do use the set  subcommand,
           the  . (dot) separators in these properties names must
           be escaped.
         You can specify the following properties for  a  deploy-
         ment:

         jar-signing-alias

             Specifies the alias  for  the  security  certificate
             with which the application client container JAR file
             is signed. Java Web Start will  not  run  code  that
             requires elevated permissions unless it resides in a
             JAR file signed with a certificate that  the  user's
             system   trusts.  For  your  convenience,  GlassFish
             Server signs the JAR file  automatically  using  the
             certificate  with  this alias from the domain's key-
             store. Java Web Start then asks the user whether  to
             trust  the  code  and  displays the GlassFish Server
             certificate information.  To sign this JAR file with
             a  different certificate, add the certificate to the
             domain keystore, then use this property.  For  exam-
             ple,  you  can  use  a  certificate  from  a trusted
             authority, which avoids the Java Web  Start  prompt,
             or  from your own company, which users know they can
             trust. Default is s1as,  the  alias  for  the  self-
             signed certificate created for every domain.

         java-web-start-enabled
             Specifies whether Java Web Start access is permitted
             for an application client module. Default is true.

         jruby.home

             Specifies the directory where JRuby itself (not  the
             GlassFish  Server  JRuby  container)  is  installed.
             Default is as-install/jruby.

Java EE 6            Last change: 9 Sep 2010                    7

asadmin Utility Subcommands                             deploy(1)

         jruby.runtime

             Specifies the initial number of  JRuby  runtimes  to
             start.  Must  be  greater than zero, greater than or
             equal to jruby.runtime.min, and less than  or  equal
             to  jruby.runtime.max. Default is 1. Overrides JRuby
             container runtime pool settings. For  more  informa-
             tion,   see  the  configure-jruby-container(1)  help
             page.

         jruby.runtime.min
             Specifies the minimum number of  JRuby  runtimes  in
             the  pool.  Must  be greater than zero, less than or
             equal  to   jruby.runtime   and   jruby.runtime.max.
             Default is 1. Overrides JRuby container runtime pool
             settings. For more information, see  the  configure-
             jruby-container(1) help page.

         jruby.runtime.max

             Specifies the maximum number of  JRuby  runtimes  in
             the pool. Must be greater than zero, greater than or
             equal to jruby.runtime and jruby.runtime.min.  Over-
             rides JRuby container runtime pool settings. Default
             is 1.  For  more  information,  see  the  configure-
             jruby-container(1) help page.

         jruby.rackEnv
             Specifies the environment in which a JRuby  applica-
             tion  such as Rails or Merb runs. Allowed values are
             development,  production,  or   test.   Default   is
             development.

         jruby.applicationType

             Specifies the name of a supported framework  or  the
             path  to a script that initializes the user's frame-
             work.  Allowed  values  corresponding  to  supported
             frameworks are Rails, Merb, or Sinatra. Setting this
             property  bypasses  the  normal,   and   potentially
             lengthy,  auto-detection  process and forces deploy-
             ment on the specified  framework.  If  the  deployed
             application  is not written for the specified frame-
             work, errors result.  Default  is  computed  through
             auto-detection.

Java EE 6            Last change: 9 Sep 2010                    8

asadmin Utility Subcommands                             deploy(1)

         jruby.MTSafe

             If true, specifies that a  framework  being  started
             using   jruby.applicationType   is  thread-safe  and
             therefore does not need a pool created for it.  This
             property   affects  applications  started  using  an
             auto-detected  user-provided  startup   script.   If
             jruby.applicationType is set and jruby.MTsafe is not
             set or is set to false, the application starts  with
             a  pool  of application instances, and each instance
             of the application is accessed by one  thread  at  a
             time.  This  property  only affects frameworks being
             launched where the thread safety cannot be automati-
             cally  determined. Setting jruby.MTsafe to true does
             not cause an auto-detected Rails  2.1.x  application
             to  be  launched  in thread-safe mode, nor can it be
             used to force a thread-safe framework  to  start  in
             pooled  mode.  Default  is  computed  through  auto-
             detection.

         compatibility
             Specifies the GlassFish Server release with which to
             be  backward  compatible  in terms of JAR visibility
             requirements  for  applications.  The  only  allowed
             value  is v2, which refers to Sun GlassFishTM Enter-
             prise Server version 2 or Sun JavaTM System Applica-
             tion  Server  version  9.1  or 9.1.1.  The Java EE 6
             platform specification imposes stricter requirements
             than Java EE 5 did on which JAR files can be visible
             to various modules within an EAR file.  In  particu-
             lar, application clients must not have access to EJB
             JAR files or other JAR files in the EAR file  unless
             references  use  the  standard  Java  SE  mechanisms
             (extensions, for example) or the  Java  EE  library-
             directory  mechanism.  Setting  this  property to v2
             removes these Java EE 6 restrictions.

         keepSessions={false|true}

             Superseded by the --keepstate option.

             If the --force option is set to true, this  property
             can  by  used  to specify whether active sessions of
             the  application  that  is  being   redeployed   are
             preserved and then restored when the redeployment is
             complete. Applies to HTTP sessions  in  a  web  con-
             tainer. Default is false.

             false
                 Active  sessions  of  the  application  are  not

Java EE 6            Last change: 9 Sep 2010                    9

asadmin Utility Subcommands                             deploy(1)

                 preserved and restored (default).

             true

                 Active sessions of the application are preserved
                 and restored.

                 If any active session of the  application  fails
                 to  be  preserved  or restored, none of the ses-
                 sions will be available when the redeployment is
                 complete.  However,  the  redeployment continues
                 and a warning is logged.

                 To preserve active  sessions,  GlassFish  Server
                 serializes   the  sessions  and  saves  them  in
                 memory.  To  restore  the  sessions,  the  class
                 loader   of  the  newly  redeployed  application
                 deserializes any sessions that  were  previously
                 saved.

             preserveAppScopedResources
                 If set to true, preserves any application-scoped
                 resources and restores them during redeployment.
                 Default is false.

             Other available properties  are  determined  by  the
             implementation  of the component that is being rede-
             ployed.

OPERANDS
     filepath

         if the --upload option is set to true, this is the  path
         to the deployable file on the local client machine. Oth-
         erwise, this is the absolute path to  the  file  on  the
         server machine.

EXAMPLES
     Example 1 Deploying an Enterprise Application

     This example deploys the enterprise application packaged  in
     the Cart.ear file to the default server instance server. You
     can use the --target option to deploy to a different  server
     instance or to a cluster.

       asadmin> deploy Cart.ear

Java EE 6            Last change: 9 Sep 2010                   10

asadmin Utility Subcommands                             deploy(1)

       Application deployed successfully with name Cart.
       Command deploy executed successfully

     Example 2 Deploying a Web Application With the Default  Con-
     text Root

     This example deploys the web application  in  the  hello.war
     file  to the default server instance server. You can use the
     --target option to deploy to a different server instance  or
     to a cluster.

       asadmin> deploy hello.war
       Application deployed successfully with name hello.
       Command deploy executed successfully

     Example 3  Forcibly  Deploying  a  Web  Application  With  a
     Specific Context Root

     This example  forcibly deploys the web  application  in  the
     hello.war  file. The context root of the deployed web appli-
     cation is greetings. If the  application  has  already  been
     deployed, it is redeployed.

       asadmin> deploy  --force=true --contextroot greetings hello.war
       Application deployed successfully with name hello.
       Command deploy executed successfully

     Example 4 Deploying an Enterprise Bean

     This example deploys a component based on the EJBTM specifi-
     cation  (enterprise  bean) with CMP and creates the database
     tables used by the bean.

     This example uses the --target option. The  target  in  this
     example is an existing cluster, cluster1.

       asadmin> deploy --createtables=true EmployeeEJB.jar
       Application deployed successfully with name EmployeeEJB.

Java EE 6            Last change: 9 Sep 2010                   11

asadmin Utility Subcommands                             deploy(1)

       Command deploy executed successfully

     Example 5 Deploying a Connector Module

     This example deploys a connector module that is packaged  in
     an RAR file.

     This example uses the --target option. The  target  in  this
     example  is an existing standalone server instance that does
     not belong to a cluster.

       asadmin> deploy jdbcra.rar
       Application deployed successfully with name jdbcra.
       Command deploy executed successfully

EXIT STATUS
     0                           subcommand executed successfully

     1                           error in executing  the  subcom-
                                 mand

SEE ALSO
     redeploy(1),  list-components(1),  undeploy(1),   configure-
     jruby-container(1)

     asadmin(1M)

     Oracle GlassFish Server 3.1 Application Deployment Guide

Java EE 6            Last change: 9 Sep 2010                   12

