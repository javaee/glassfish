#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

InstanceReaderFilter.CantFindConfig=\u627E\u4E0D\u5230\u5B9E\u4F8B{0}\u7684\u914D\u7F6E\u5143\u7D20
InstanceReaderFilter.UnknownException=\u89E3\u6790 domain.xml \u65F6\u51FA\u73B0\u672A\u77E5\u9519\u8BEF: {0}
InstanceReaderFilter.ReparseNeeded=\u5FC5\u987B\u89E3\u6790 doman.xml \u4E24\u6B21\u800C\u4E0D\u662F\u4E00\u6B21, \u56E0\u4E3A\u5143\u7D20\u7684\u987A\u5E8F\u5E76\u975E\u6700\u4F73\u3002\n\u6700\u4F73\u987A\u5E8F\u662F <clusters>...<<servers>...<configs>
time=\u89E3\u6790 domain.xml \u7684\u603B\u65F6\u95F4: {0}
dxpp.serverNotFound=\u627E\u4E0D\u5230\u5B9E\u4F8B\u7684\u670D\u52A1\u5668\u5143\u7D20: {0}
dxpp.configrefnotmatch=\u5B9E\u4F8B{0}\u5C5E\u4E8E\u96C6\u7FA4{1}, \u4F46 config-ref \u7684\u5BF9\u5E94\u9879\u4E0D\u5339\u914D\u3002
dxpp.confignotfound=\u627E\u4E0D\u5230\u5B9E\u4F8B{0}\u7684\u914D\u7F6E\u5143\u7D20{1}\u3002

ConfigParsingFailed=\u65E0\u6CD5\u89E3\u6790 domain.xml
NoConfigFile={0}\u4E0D\u5B58\u5728\u6216\u4E3A\u7A7A, \u5C06\u4F7F\u7528\u5907\u4EFD
NoBackupFile={0}\u4E0D\u5B58\u5728\u6216\u4E3A\u7A7A, \u4E0D\u80FD\u4F7F\u7528\u5907\u4EFD
NoUsableConfigFile={0}\u5904\u6CA1\u6709\u53EF\u7528\u7684\u914D\u7F6E\u6587\u4EF6
SystemPropertyUpgrade.Failure=\u5C06\u914D\u7F6E{0} system-property \u4ECE v2.1.1 \u5347\u7EA7\u5230 3.1 \u65F6\u6267\u884C\u5931\u8D25
BadEnv=\u5728 domain.xml \u4E2D\u627E\u4E0D\u5230\u73AF\u5883\u4E2D\u7684\u5B9E\u4F8B{0}

GenericCrudCommand.invalid_type=\u5411 InjectionResolver:getValue () \u4F20\u9012\u7684\u6CE8\u91CA\u7C7B\u578B{0}\u65E0\u6548
GenericCrudCommand.invocation_failure=\u4ECE\u7EC4\u4EF6\u83B7\u53D6 List<?> \u503C\u65F6\u51FA\u73B0\u6545\u969C{0};
GenericCrudCommand.nongeneric_type=\u7531{0}\u8FD4\u56DE\u7684 List \u7C7B\u578B\u5FC5\u987B\u662F\u901A\u7528\u7C7B\u578B
GenericCrudCommand.wrong_type=\u4E0D\u652F\u6301\u901A\u7528\u7C7B\u578B{0}, \u4EC5 List<? extends ConfigBeanProxy> \u662F"
GenericCrudCommand.introspection_failure=\u81EA\u6D4B{1}\u4EE5\u67E5\u627E\u6240\u6709 getter \u548C setter \u65F6\u51FA\u73B0\u6545\u969C{0}
GenericCrudCommand.too_many_indexes=\u6B64\u901A\u7528\u5B9E\u73B0\u7684\u5143\u6570\u636E\u6709\u591A\u4E2A\u7D22\u5F15{0}
GenericCrudCommand.unamed_service=\u670D\u52A1{0}\u672A\u547D\u540D, \u5BF9\u901A\u7528\u547D\u4EE4\u6765\u8BF4, \u670D\u52A1\u540D\u662F\u547D\u4EE4\u540D\u79F0\u5E76\u4E14\u5FC5\u987B\u63D0\u4F9B
GenericCrudCommand.transactionException=\u6CE8\u5165{1}\u65F6\u51FA\u73B0\u4E8B\u52A1\u5904\u7406\u5F02\u5E38\u9519\u8BEF{0}
GenericCrudCommand.method_invocation_exception=\u8C03\u7528{0}\u65B9\u6CD5\u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF: {1}
GenericCrudCommand.annotation_not_found=\u5728\u65B9\u6CD5{2}\u4E0A\u627E\u4E0D\u5230\u503C\u4E3A{1}\u7684\u6CE8\u91CA{0}
GenericCreateCommand.configbean_not_found=\u914D\u7F6E Bean {0}\u65E0\u6CD5\u7531\u901A\u7528\u547D\u4EE4\u5B9E\u73B0\u52A0\u8F7D: {1}
GenericCreateCommand.command_model_exception=\u4E3A\u901A\u7528\u547D\u4EE4{0}\u521B\u5EFA\u547D\u4EE4\u6A21\u578B\u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF: {1}
GenericCreateCommand.target_object_not_found=ConfigResolver {0}\u627E\u4E0D\u5230\u7C7B\u578B{1}\u7684\u914D\u7F6E\u5BF9\u8C61, \u5E94\u8BE5\u5728\u6B64\u5904\u6DFB\u52A0{2}\u7684\u5B9E\u4F8B
GenericCreateCommand.decorator_not_found=\u5728\u76EE\u6807\u4F4D\u7F6E\u627E\u4E0D\u5230 CreationDecorator {0}, \u662F\u5426\u5DF2\u4F7F\u7528 @Service \u5BF9\u5176\u8FDB\u884C\u4E86\u6CE8\u91CA?
GenericCreateCommand.deletion_decorator_not_found=\u5728\u76EE\u6807\u4F4D\u7F6E\u627E\u4E0D\u5230 DeletionDecorator {0}, \u662F\u5426\u5DF2\u4F7F\u7528 @Service \u5BF9\u5176\u8FDB\u884C\u4E86\u6CE8\u91CA?
GenericCreateCommand.transaction_exception=\u672A\u6DFB\u52A0\u914D\u7F6E\u3002{0}
GenericCreateCommand.already_existing_instance=\u540D\u4E3A "{1}" \u7684{0}\u5B9E\u4F8B\u5728\u914D\u7F6E\u4E2D\u5DF2\u5B58\u5728
GenericDeleteCommand.transaction_exception=\u672A\u5220\u9664\u914D\u7F6E{0}\u3002{1}
GenericDeleteCommand.target_object_not_found=ConfigResolver {0}\u627E\u4E0D\u5230\u7C7B\u578B{1}\u7684\u914D\u7F6E\u5BF9\u8C61, \u5E94\u8BE5\u5728\u6B64\u5904\u5220\u9664{2}\u7684\u5B9E\u4F8B
TypeAndNameResolver.target_object_not_found=\u627E\u4E0D\u5230\u540D\u4E3A{1}\u7684{0}
TypeResolver.target_object_not_found=\u627E\u4E0D\u5230\u7C7B\u578B{0}\u7684\u5355\u4E00\u7EC4\u4EF6\u5B9E\u4F8B
TypeResolver.no_element_of_that_type=\u57DF\u914D\u7F6E\u6CA1\u6709\u7C7B\u578B\u4E3A{0}\u7684\u5B50\u5143\u7D20
GenericListCommand.element_has_no_key=\u5143\u7D20{0}\u6CA1\u6709\u5173\u952E\u5B57\u5C5E\u6027
GenericListCommand.accesschecks=\u4E3A\u901A\u7528\u547D\u4EE4{0}\u521B\u5EFA\u8BBF\u95EE\u68C0\u67E5\u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF: {1}
GenericListCommand.invalidOutputOpts=\u8F93\u51FA\u9009\u9879\u65E0\u6548\u3002\u8BF7\u4ECE\u4EE5\u4E0B\u5217\u9009\u62E9: {0}

DefaultConfigUpgrade.existingDefaultConfig=\u5347\u7EA7\u671F\u95F4\u68C0\u6D4B\u5230\u73B0\u6709\u7684 default-config\u3002\u4E0D\u9700\u8981\u521B\u5EFA default-config\u3002
DefaultConfigUpgrade.runningDefaultConfigUpgrade=\u5347\u7EA7\u671F\u95F4\u672A\u68C0\u6D4B\u5230 default-config\u3002\u8BF7\u8FD0\u884C DefaultConfigUpgrade \u4EE5\u521B\u5EFA default-config\u3002
DefaultConfigUpgrade.cantFindInstallRoot=DefaultConfigUpgrade \u5931\u8D25\u3002\u65E0\u6CD5\u627E\u5230 domain.xml \u6A21\u677F\u3002\u5B89\u88C5\u6839\u7CFB\u7EDF\u5C5E\u6027 {0} \u4E3A\u7A7A\u503C\u3002
## DefaultConfigUpgrade failed. Missing domain.xml template here {installRoot/lib/templates/domain.xml).
DefaultConfigUpgrade.cannotGetDomainXmlTemplate=DefaultConfigUpgrade \u5931\u8D25\u3002\u65E0\u6CD5\u4ECE{0)\u83B7\u53D6\u9ED8\u8BA4 domain.xml\u3002
DefaultConfigUpgrade.failure=\u5347\u7EA7\u671F\u95F4\u51FA\u73B0\u6545\u969C - \u65E0\u6CD5\u521B\u5EFA default-config

# {0}=maximum number of substitutions, {1}=offending property value
TranslatedConfigView.badprop=\u7CFB\u7EDF\u5C5E\u6027\u66FF\u6362\u8D85\u8FC7\u4E86{1}\u4E2D\u7684\u6700\u5927\u503C {0}
# {0}=password being dealiased, {1}=exception error message
TranslatedConfigView.aliaserror=\u89E3\u9664\u53E3\u4EE4 {0} \u7684\u522B\u540D\u65F6\u51FA\u9519: {1}
