#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

InstanceReaderFilter.CantFindConfig=\u627E\u4E0D\u5230\u57F7\u884C\u8655\u7406 {0} \u7684\u7D44\u614B\u5143\u7D20
InstanceReaderFilter.UnknownException=\u5256\u6790 domain.xml \u6642\u767C\u751F\u4E0D\u660E\u7684\u932F\u8AA4\uFF1A{0}
InstanceReaderFilter.ReparseNeeded=Doman.xml \u5FC5\u9808\u5256\u6790\u5169\u6B21\u800C\u975E\u4E00\u6B21\uFF0C\u56E0\u70BA\u5143\u7D20\u9806\u5E8F\u4E26\u975E\u6700\u4F73\u5316\u72C0\u614B\u3002\n\u6700\u4F73\u9806\u5E8F\u70BA <\u53E2\u96C6>...<<\u4F3A\u670D\u5668>...<\u7D44\u614B>
time=\u5256\u6790 domain.xml \u7684\u6642\u9593\u7E3D\u8A08\u70BA\uFF1A{0}
dxpp.serverNotFound=\u627E\u4E0D\u5230\u57F7\u884C\u8655\u7406 {0} \u7684\u4F3A\u670D\u5668\u5143\u7D20
dxpp.configrefnotmatch=\u57F7\u884C\u8655\u7406 {0} \u5C6C\u65BC\u53E2\u96C6 {1}\uFF0C\u4F46 config-ref \u4E0D\u76F8\u7B26\u3002
dxpp.confignotfound=\u627E\u4E0D\u5230\u57F7\u884C\u8655\u7406 {0} \u7684\u7D44\u614B\u5143\u7D20 {1}\u3002

ConfigParsingFailed=\u7121\u6CD5\u5256\u6790 domain.xml
NoConfigFile={0} \u4E0D\u5B58\u5728\u6216\u7A7A\u767D\uFF0C\u5C07\u6703\u4F7F\u7528\u5099\u4EFD
NoBackupFile={0} \u4E0D\u5B58\u5728\u6216\u7A7A\u767D\uFF0C\u7121\u6CD5\u4F7F\u7528\u5099\u4EFD
NoUsableConfigFile={0} \u6C92\u6709\u53EF\u4F7F\u7528\u7684\u7D44\u614B\u6A94\u6848
SystemPropertyUpgrade.Failure=\u5C07\u7D44\u614B {0} system-property \u5F9E v2.1.1 \u5347\u7D1A\u81F3 3.1 \u6642\u5931\u6557
BadEnv=domain.xml \u4E2D\u627E\u4E0D\u5230\u74B0\u5883\u7684\u57F7\u884C\u8655\u7406 {0}

GenericCrudCommand.invalid_type=\u50B3\u9001\u7D66 InjectionResolver:getValue() \u7684\u8A3B\u89E3\u985E\u578B {0} \u7121\u6548
GenericCrudCommand.invocation_failure=\u5F9E\u5143\u4EF6\u53D6\u5F97 List<?> \u503C\u6642\u767C\u751F\u932F\u8AA4 {0};
GenericCrudCommand.nongeneric_type={0} \u50B3\u56DE\u7684\u6E05\u55AE\u985E\u578B\u5FC5\u9808\u70BA\u901A\u7528\u985E\u578B
GenericCrudCommand.wrong_type=\u4E0D\u652F\u63F4\u901A\u7528\u985E\u578B {0}\uFF0C\u50C5\u652F\u63F4\u6E05\u55AE<? extends ConfigBeanProxy>
GenericCrudCommand.introspection_failure=\u5167\u8996 {1} \u4EE5\u5C0B\u627E\u6240\u6709 getter \u548C setter \u6642\u767C\u751F\u932F\u8AA4 {0}
GenericCrudCommand.too_many_indexes=\u6B64\u901A\u7528\u5BE6\u884C\u7684\u4E2D\u4ECB\u8CC7\u6599\u6709\u4E00\u500B\u4EE5\u4E0A\u7684\u7D22\u5F15 {0}
GenericCrudCommand.unamed_service=\u670D\u52D9 {0} \u672A\u547D\u540D\uFF0C\u5C0D\u65BC\u901A\u7528\u547D\u4EE4\uFF0C\u670D\u52D9\u540D\u7A31\u70BA\u547D\u4EE4\u540D\u7A31\u4E14\u5FC5\u9808\u52A0\u4EE5\u63D0\u4F9B
GenericCrudCommand.transactionException=\u5F15\u5165 {1} \u6642\u767C\u751F\u4F5C\u696D\u4E8B\u4EF6\u7570\u5E38 {0}
GenericCrudCommand.method_invocation_exception=\u547C\u53EB {0} \u65B9\u6CD5\u6642\u767C\u751F\u7570\u5E38\uFF1A{1}
GenericCrudCommand.annotation_not_found=\u65B9\u6CD5 {2} \u4E0A\u627E\u4E0D\u5230\u503C\u70BA {1} \u7684\u8A3B\u89E3 {0}
GenericCreateCommand.configbean_not_found=\u7D44\u614B Bean {0} \u7121\u6CD5\u7531\u901A\u7528\u547D\u4EE4\u5BE6\u884C\u8F09\u5165\uFF1A{1}
GenericCreateCommand.command_model_exception=\u70BA\u901A\u7528\u547D\u4EE4 {0} \u5EFA\u7ACB\u547D\u4EE4\u6A21\u578B\u6642\u767C\u751F\u7570\u5E38\uFF1A{1}
GenericCreateCommand.target_object_not_found=ConfigResolver {0} \u627E\u4E0D\u5230\u985E\u578B\u70BA {1} \u4E14\u61C9\u589E\u52A0 {2} \u57F7\u884C\u8655\u7406\u7684\u7D44\u614B\u7269\u4EF6
GenericCreateCommand.decorator_not_found=\u5728\u61C9\u6709\u4F4D\u7F6E\u627E\u4E0D\u5230 CreationDecorator {0}\uFF0C\u5B83\u662F\u5426\u4F7F\u7528 @Service \u8A3B\u89E3\uFF1F
GenericCreateCommand.deletion_decorator_not_found=\u5728\u61C9\u6709\u4F4D\u7F6E\u627E\u4E0D\u5230 DeletionDecorator {0}\uFF0C\u5B83\u662F\u5426\u4F7F\u7528 @Service \u8A3B\u89E3\uFF1F
GenericCreateCommand.transaction_exception=\u672A\u65B0\u589E\u7D44\u614B\u3002{0}
GenericCreateCommand.already_existing_instance=\u5177\u6709 "{1}" \u540D\u7A31\u7684 {0} \u57F7\u884C\u8655\u7406\u5DF2\u5B58\u5728\u65BC\u7D44\u614B\u4E2D
GenericDeleteCommand.transaction_exception=\u672A\u522A\u9664\u7D44\u614B {0}\u3002{1}
GenericDeleteCommand.target_object_not_found=ConfigResolver {0} \u627E\u4E0D\u5230\u985E\u578B\u70BA {1} \u4E14\u61C9\u79FB\u9664 {2} \u57F7\u884C\u8655\u7406\u7684\u7D44\u614B\u7269\u4EF6
TypeAndNameResolver.target_object_not_found=\u627E\u4E0D\u5230\u540D\u7A31\u70BA {1} \u7684 {0}
TypeResolver.target_object_not_found=\u627E\u4E0D\u5230\u985E\u578B\u70BA {0} \u7684\u55AE\u4E00\u5143\u4EF6\u57F7\u884C\u8655\u7406
TypeResolver.no_element_of_that_type=\u7DB2\u57DF\u7D44\u614B\u6C92\u6709\u985E\u578B\u70BA {0} \u7684\u5B50\u5143\u7D20
GenericListCommand.element_has_no_key=\u5143\u7D20 {0} \u6C92\u6709\u9375\u5C6C\u6027
GenericListCommand.accesschecks=\u70BA\u901A\u7528\u547D\u4EE4 {0} \u5EFA\u7ACB\u5B58\u53D6\u6AA2\u67E5\u6642\u767C\u751F\u7570\u5E38\uFF1A{1}
GenericListCommand.invalidOutputOpts=\u8F38\u51FA\u9078\u9805\u7121\u6548\u3002\u8ACB\u5F9E\u4E0B\u5217\u6B04\u4E2D\u9078\u64C7\uFF1A{0}

DefaultConfigUpgrade.existingDefaultConfig=\u5347\u7D1A\u671F\u9593\u5075\u6E2C\u5230\u73FE\u6709\u7684 default-config\u3002\u4E0D\u9700\u5EFA\u7ACB default-config\u3002
DefaultConfigUpgrade.runningDefaultConfigUpgrade=\u5347\u7D1A\u671F\u9593\u672A\u5075\u6E2C\u5230 default-config\u3002\u6B63\u5728\u57F7\u884C DefaultConfigUpgrade \u4EE5\u5EFA\u7ACB default-config\u3002
DefaultConfigUpgrade.cantFindInstallRoot=DefaultConfigUpgrade \u5931\u6557\u3002\u627E\u4E0D\u5230 domain.xml \u7BC4\u672C\u3002\u5B89\u88DD\u7684\u6839\u76EE\u9304\u7CFB\u7D71\u7279\u6027 {0} \u70BA\u7A7A\u503C\u3002
## DefaultConfigUpgrade failed. Missing domain.xml template here {installRoot/lib/templates/domain.xml).
DefaultConfigUpgrade.cannotGetDomainXmlTemplate=DefaultConfigUpgrade \u5931\u6557\u3002\u7121\u6CD5\u5F9E {0) \u53D6\u5F97\u9810\u8A2D domain.xml\u3002
DefaultConfigUpgrade.failure=\u5347\u7D1A\u671F\u9593\u767C\u751F\u5931\u6557 - \u7121\u6CD5\u5EFA\u7ACB default-config

# {0}=maximum number of substitutions, {1}=offending property value
TranslatedConfigView.badprop=\u7CFB\u7D71\u7279\u6027\u66FF\u63DB\u6578\u76EE {1} \u8D85\u51FA\u4E0A\u9650 ({0})
# {0}=password being dealiased, {1}=exception error message
TranslatedConfigView.aliaserror=\u53D6\u6D88\u5BC6\u78BC {0} \u7684\u5225\u540D\u6642\u767C\u751F\u932F\u8AA4\uFF1A{1}
