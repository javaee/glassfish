#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

#####restart-instance
restart.instance.notInstance=-_restart-instance \u4EC5\u9002\u7528\u4E8E\u5B9E\u4F8B\u3002\u8FD9\u662F{0}
#Below {0} is the runtime-type.  currently DAS, INSTANCE, EMBEDDED, NODEAGENT or ALL
restart.instance.notDas=restart-instance \u4EC5\u9002\u7528\u4E8E DAS\u3002\u8FD9\u662F{0}
restart.notRestartable={0}\u62A5\u544A\u5B83\u4E0D\u53EF\u91CD\u65B0\u542F\u52A8\u3002\n\u8FD9\u901A\u5E38\u8868\u793A\u6700\u521D\u7528\u4E8E\u542F\u52A8{0}\u7684\u53E3\u4EE4\u6587\u4EF6\u73B0\u5728\u5DF2\u5220\u9664\u6216\u4E0D\u53EF\u8BFB\u3002\n\u8BF7\u505C\u6B62\u5E76\u518D\u6B21\u542F\u52A8{0}\u6216\u4FEE\u590D\u53E3\u4EE4\u6587\u4EF6\u3002
restart.instance.success={0} \u5DF2\u91CD\u65B0\u542F\u52A8\u3002
restart.instance.racError=\u5C1D\u8BD5\u91CD\u65B0\u542F\u52A8\u540D\u4E3A{0}\u7684\u5B9E\u4F8B\u65F6\u51FA\u9519: {1}
restart.instance.timeout=\u7B49\u5F85{0}\u91CD\u65B0\u542F\u52A8\u65F6\u8D85\u65F6
restart.instance.nopid=\u65E0\u6CD5\u83B7\u53D6{0}\u7684\u8FDB\u7A0B ID
restart.instance.startSucceeded=\u5B9E\u4F8B\u672A\u5728\u8FD0\u884C\u3002\u5DF2\u6210\u529F\u6B63\u5E38\u542F\u52A8\u3002\n\u6765\u81EA start-instance \u7684\u6D88\u606F: {0}
restart.instance.startFailed=\u5B9E\u4F8B\u672A\u5728\u8FD0\u884C\u3002\u5DF2\u5C1D\u8BD5\u542F\u52A8\u4F46\u672A\u6210\u529F\u3002\n\u8BF7\u5C1D\u8BD5\u4F7F\u7528 start-local-instance \u542F\u52A8\u5B9E\u4F8B\u3002\n\u6765\u81EA start-instance \u7684\u6D88\u606F: {0}
## StopInstanceCommand
stop.instance.command=\u505C\u6B62\u6B63\u5728\u8FD0\u884C\u7684\u5B9E\u4F8B
stop.instance.init=\u5DF2\u542F\u52A8\u5173\u95ED\u5B9E\u4F8B{0}\u7684\u64CD\u4F5C
stop.instance.notDas=stop-instance \u4EC5\u9002\u7528\u4E8E DAS\u3002\u8FD9\u662F{0}
stop.instance.notInstance=_stop-instance \u4EC5\u9002\u7528\u4E8E\u5B9E\u4F8B\u3002\u8FD9\u662F{0}
stop.instance.noInstanceName=\u5FC5\u987B\u6307\u5B9A\u5B9E\u4F8B\u540D\u79F0\u3002
stop.instance.noSuchInstance=\u8BE5\u57DF\u4E2D\u4E0D\u5B58\u5728\u540D\u4E3A{0}\u7684\u5B9E\u4F8B\u3002
stop.instance.noPort=\u627E\u4E0D\u5230\u540D\u4E3A{0}\u7684\u5B9E\u4F8B\u7684\u7BA1\u7406\u7AEF\u53E3\u3002
stop.instance.noHost=\u627E\u4E0D\u5230\u540D\u4E3A{0}\u7684\u5B9E\u4F8B\u7684\u4E3B\u673A\u540D\u3002
stop.instance.racError=\u5C1D\u8BD5\u505C\u6B62\u540D\u4E3A{0}\u7684\u5B9E\u4F8B\u65F6\u51FA\u9519: {1}
stop.instance.success=\u5B9E\u4F8B{0}\u5DF2\u505C\u6B62\u3002
stop.instance.timeout=\u7B49\u5F85{0}\u505C\u6B62\u65F6\u8D85\u65F6\u3002
stop.instance.timeout.completely=\u7B49\u5F85{0}\u5B8C\u5168\u505C\u6B62\u65F6\u8D85\u65F6\u3002
## StartInstanceCommand
start.instance.success=\u5B9E\u4F8B{0}\u5DF2\u5728\u4E3B\u673A{1}\u4E0A\u542F\u52A8
start.instance.already.running=\u5B9E\u4F8B{0}\u5DF2\u5728\u8FD0\u884C\u3002
start.instance.command=\u542F\u52A8\u5B9E\u4F8B
start.instance.init=\u5DF2\u542F\u52A8\u5B9E\u4F8B\u542F\u52A8\u64CD\u4F5C
start.instance.notAnInstanceOrDas=start-instance \u4EC5\u9002\u7528\u4E8E\u5B9E\u4F8B\u6216 DAS, \u800C\u8FD9\u662F{0}
start.instance.noInstanceName=\u5728 DAS \u4E0A\u8C03\u7528 start-instance \u65F6\u5FC5\u987B\u6307\u5B9A\u4E00\u4E2A\u5B9E\u4F8B\u540D\u79F0\u3002
start.instance.noSuchInstance=\u8BE5\u57DF\u4E2D\u4E0D\u5B58\u5728\u540D\u4E3A{0}\u7684\u5B9E\u4F8B\u3002
start.instance.noSuchNodeRef=\u8BE5\u57DF\u4E2D\u4E0D\u5B58\u5728\u540D\u4E3A{0}\u7684\u8282\u70B9\u3002
# 0=instance, 1=node, 2=host
start.instance.failed=\u65E0\u6CD5\u5728\u8282\u70B9 {1} ({2}) \u4E0A\u542F\u52A8\u5B9E\u4F8B{0}\u3002
start.instance.timeout=\u7B49\u5F85{0}\u542F\u52A8\u65F6\u8D85\u65F6\u3002
stop.local.instance.kill=\u65E0\u6CD5\u4F7F\u7528{2}\u5728\u8282\u70B9{1}\u4E0A\u505C\u6B62\u5B9E\u4F8B{0}
## ListInstancesCommand
list.instances.command=\u663E\u793A\u670D\u52A1\u5668\u5B9E\u4F8B\u7684\u72B6\u6001
list.instances.onlyRunsOnDas=\u8FD9\u662F\u4E00\u4E2A GlassFish Server \u5B9E\u4F8B, \u800C list-instances \u53EA\u80FD\u5728 DAS \u4E0A\u8FD0\u884C\u3002
## SynchronizeFiles
sync.unknown.instance=\u672A\u77E5\u7684\u670D\u52A1\u5668\u5B9E\u4F8B: {0}
sync.exception.reading=SynchronizeFiles: \u8BFB\u53D6\u8BF7\u6C42\u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
sync.exception.processing=SynchronizeFiles: \u5904\u7406\u8BF7\u6C42\u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
sync.bad_output_file=\u65E0\u6CD5\u5199\u5165\u8F93\u51FA\u6587\u4EF6{0}\u3002
## ExportSyncBundle
sync.bad_temp_file=\u65E0\u6CD5\u5728\u7CFB\u7EDF\u4E34\u65F6\u6587\u4EF6\u533A\u57DF\u4E2D\u521B\u5EFA\u4E34\u65F6\u6587\u4EF6: {0}
sync.unknown.instanceOrCluster=\u672A\u77E5\u7684\u72EC\u7ACB\u670D\u52A1\u5668\u6216\u96C6\u7FA4: {0}
sync.empty_cluster=\u65E0\u6CD5\u751F\u6210\u540C\u6B65\u7ED1\u5B9A\u3002\u96C6\u7FA4{0}\u4E0D\u5305\u542B\u5B9E\u4F8B\u3002
export.sync.bundle.success=\u540C\u6B65\u7ED1\u5B9A: {0}
export.sync.bundle.fail=\u65E0\u6CD5\u5BFC\u51FA\u540C\u6B65\u7ED1\u5B9A: {0}
export.sync.bundle.retrieveFailed=\u65E0\u6CD5\u68C0\u7D22\u540C\u6B65\u7ED1\u5B9A: {0}
export.sync.bundle.exportFailed=\u65E0\u6CD5\u5C06\u540C\u6B65\u7684\u5185\u5BB9\u5BFC\u51FA\u5230\u6587\u4EF6{0}: {1}\u3002
export.sync.bundle.closeStreamFailed=\u65E0\u6CD5\u5173\u95ED\u6587\u4EF6{0}\u4E0A\u7684\u6D41: {1}
export.sync.bundle.createDirFailed=\u65E0\u6CD5\u521B\u5EFA\u76EE\u5F55 {0}\u3002
## ServerSynchronizer
serversync.unknown.dir=\u672A\u77E5\u76EE\u5F55: {0}
serversync.exception.processing=ServerSynchronizer: \u5904\u7406\u8BF7\u6C42\u65F6\u51FA\u73B0\u5F02\u5E38\u9519\u8BEF
## GlassFishClusterExecutor
glassfish.clusterexecutor.notargets=\u672A\u627E\u5230\u76EE\u6807{0}\u7684\u4EFB\u4F55\u9002\u5F53\u5B9E\u4F8B; \u53EA\u5728 DAS \u4E0A\u6267\u884C\u4E86\u8BE5\u547D\u4EE4
glassfish.clusterexecutor.notargetspecified=\u547D\u4EE4\u884C\u4E2D\u672A\u6307\u5B9A\u76EE\u6807; \u6B63\u5728\u4E2D\u6B62 CLI
glassfish.clusterexecutor.supplementalcmdfailed=\u8865\u5145\u547D\u4EE4 {0} \u5931\u8D25
glassfish.clusterexecutor.dynrecfgdisabled=\u8B66\u544A: \u8BE5\u547D\u4EE4\u672A\u590D\u5236\u5230\u6240\u6709\u96C6\u7FA4\u5B9E\u4F8B, \u56E0\u4E3A\u96C6\u7FA4{0}\u7684 dynamic-reconfiguration-enabled \u6807\u8BB0\u5DF2\u8BBE\u7F6E\u4E3A\u201C\u5047\u201D

noNode=\u8282\u70B9\u4E3A\u7A7A\u503C
noUpdate.nodeInUse=\u65E0\u6CD5\u66F4\u65B0\u8282\u70B9{0}\u3002\u5B83\u5DF2\u7531\u67D0\u4E2A\u670D\u52A1\u5668\u5B9E\u4F8B\u4F7F\u7528, \u56E0\u6B64\u65E0\u6CD5\u66F4\u6539\u5C5E\u6027 {1}\u3002
notConfigNode=\u8282\u70B9{0}\u4E0D\u662F\u914D\u7F6E\u8282\u70B9\u3002
notSshNode=\u8282\u70B9{0}\u4E0D\u662F SSH \u8282\u70B9\u3002
missingNodeRef=\u5B9E\u4F8B{0}\u6CA1\u6709\u5173\u8054\u7684\u8282\u70B9\u3002
missingNode=\u8282\u70B9{0}\u4E0D\u5B58\u5728\u3002
attribute.mismatch=\u8282\u70B9 ''{0}'' \u7684\u5C5E\u6027\u4E0D\u5339\u914D: \u547D\u4EE4 ({2}) \u4E2D ''{1}'' \u5C5E\u6027\u7684\u503C\u4E0E DAS \u914D\u7F6E ({3}) \u4E2D\u7684\u503C\u4E0D\u5339\u914D
attribute.null=\u8282\u70B9{0}\u4E0A\u7684{1}\u5C5E\u6027\u4E3A\u7A7A\u503C: \u547D\u4EE4\u503C\u4E3A{2}, \u8282\u70B9\u503C\u4E3A{3}
top.instance.notRunning=\u5B9E\u4F8B{0}\u672A\u8FD0\u884C\u3002
invalid.installdir=Installdir \u503C{0}\u4E0D\u662F\u6709\u6548\u7684 glassfish \u5B89\u88C5\u3002

## CreateInstanceCommand
generic.config=\u6B64\u96C6\u7FA4\u5C06\u4F7F\u7528\u7684\u73B0\u6709\u914D\u7F6E\u540D\u79F0

create.instance=\u521B\u5EFA\u65B0\u7684 GlassFish Server \u5B9E\u4F8B
create.instance.cluster=\u6B64\u65B0\u5B9E\u4F8B\u5E94\u9644\u52A0\u5230\u7684\u96C6\u7FA4\u540D\u79F0
create.instance.success=\u5DF2\u5728\u4E3B\u673A{1}\u4E0A\u521B\u5EFA\u5B9E\u4F8B{0}
create.instance.missing.info=\u8282\u70B9{0}\u4E0A\u672A\u8BBE\u7F6E {1} \u5C5E\u6027, \u56E0\u6B64\u65E0\u6CD5\u5BF9\u6B64\u8282\u70B9\u4F7F\u7528{2}\u3002\u5FC5\u987B\u4F7F\u7528 {3} \u547D\u4EE4\u6DFB\u52A0 {1} \u5C5E\u6027, \u6216\u8005\u901A\u8FC7\u5728\u5B9E\u4F8B\u4E3B\u673A\u4E0A\u76F4\u63A5\u8FD0\u884C{4}\u6765\u521B\u5EFA\u5B9E\u4F8B\u3002
create.instance.config=\u5DF2\u5728 DAS \u4E0A\u6CE8\u518C\u5B9E\u4F8B{0}\u3002\u5FC5\u987B\u5728\u5B9E\u4F8B\u4E3B\u673A\u4E0A\u8FD0\u884C\u4EE5\u4E0B\u547D\u4EE4\u624D\u80FD\u5B8C\u6210\u5B9E\u4F8B\u521B\u5EFA: \n {1}
create.instance.usagetext=create-instance --node <node> \n\t[--config <config> | --cluster <cluster>] \n\t[--lbenabled[=<lbenabled>]] \n\t[--checkports[=<checkports(default:true)>]] [--portbase <portbase>] \n\t[--systemproperties <systemproperties>] \n\t[-?|--help[=<help(default:false)>]] instance_name
creatingInstance=\u6B63\u5728{1}\u4E0A\u521B\u5EFA\u5B9E\u4F8B{0}
mustRunLocal=\u65E0\u6CD5\u8BBF\u95EE\u8282\u70B9{1}\u7684\u4E3B\u673A{0}\u3002\u5FC5\u987B\u5728\u4E3B\u673A{0}\u4E0A\u8FD0\u884C\u4EE5\u4E0B\u547D\u4EE4\u624D\u80FD\u5B8C\u6210\u5B9E\u4F8B\u521B\u5EFA: {2}

noSuchNode=\u8BE5\u57DF\u4E2D\u4E0D\u5B58\u5728\u540D\u4E3A{0}\u7684\u8282\u70B9\u3002
notConfigNodeType=\u8282\u70B9{0}\u4E0D\u662F CONFIG \u7C7B\u578B
notRemoteNodeType=\u8282\u70B9{0}\u4E0D\u662F\u8FDC\u7A0B\u7C7B\u578B (SSH \u6216 DCOM)\u3002
lbenabledNotForStandaloneInstance=\u72EC\u7ACB\u5B9E\u4F8B\u4E0D\u652F\u6301 lbenabled \u9009\u9879\u3002

notAllowed=\u53EA\u80FD\u5728 DAS \u4E0A\u8FD0\u884C\u8BE5\u547D\u4EE4\u3002
## StartClusterCommand
start.cluster.command=\u542F\u52A8\u96C6\u7FA4
start.cluster=\u6B63\u5728\u542F\u52A8\u96C6\u7FA4{0}
stop.cluster.command=\u505C\u6B62\u96C6\u7FA4
stop.cluster=\u6B63\u5728\u505C\u6B62\u96C6\u7FA4{0}
cluster.command.notDas=\u8FD9\u662F\u4E00\u4E2A GlassFish Server \u5B9E\u4F8B, \u800C{0}\u53EA\u80FD\u5728 DAS \u4E0A\u8FD0\u884C\u3002
cluster.command.instancesSucceeded=\u5BF9{1}\u6267\u884C\u547D\u4EE4 {0} \u6210\u529F
cluster.command.instancesFailed=\u5BF9{1}\u6267\u884C\u547D\u4EE4 {0} \u5931\u8D25
cluster.command.instancesTimedOut=\u7B49\u5F85\u9488\u5BF9{1}\u5B8C\u6210\u547D\u4EE4 {0} \u65F6\u8D85\u65F6
cluster.command.unknownCluster=\u8BE5\u57DF\u4E2D\u4E0D\u5B58\u5728\u540D\u4E3A{0}\u7684\u96C6\u7FA4\u3002
cluster.command.noInstances=\u96C6\u7FA4{0}\u4E0D\u5305\u542B\u5B9E\u4F8B\u3002
cluster.command.interrupted=\u6267\u884C\u547D\u4EE4 {3} \u83B7\u5F97\u4E86 {1} \u4E2A (\u5171 {2} \u4E2A) \u5B9E\u4F8B\u7684\u54CD\u5E94\u540E, \u5DF2\u4E2D\u65AD\u5BF9\u96C6\u7FA4{0}\u6267\u884C\u7684\u547D\u4EE4\u3002
cluster.command.executing=\u6B63\u5728{1}\u5B9E\u4F8B\u4E0A\u6267\u884C{0}\u3002
create.instance.local.boot.failed=\u5DF2\u5728 DAS \u914D\u7F6E\u4E2D\u6210\u529F\u521B\u5EFA\u5B9E\u4F8B{0}, \u4F46\u5728\u5F15\u5BFC\u8FC7\u7A0B\u4E2D\u65E0\u6CD5\u68C0\u7D22\u914D\u7F6E\u6587\u4EF6\u3002
create.instance.remote.boot.failed=\u5DF2\u5728 DAS \u914D\u7F6E\u4E2D\u6210\u529F\u521B\u5EFA\u5B9E\u4F8B{0}, \u4F46\u5728\u5F15\u5BFC\u8FC7\u7A0B\u4E2D\u65E0\u6CD5\u5728\u8282\u70B9{3}\u4E0A\u5B89\u88C5\u5B9E\u4F8B\u7684\u914D\u7F6E\u6587\u4EF6\u3002\n\nSSH \u914D\u7F6E\u4FE1\u606F\n{1}\n\u5176\u4ED6\u5931\u8D25\u4FE1\u606F: {2}\u3002

deleting.instance=\u6B63\u5728\u5220\u9664{1}\u4E2D\u7684\u5B9E\u4F8B{0}
instance.shutdown=\u5220\u9664\u5B9E\u4F8B{0}\u4E4B\u524D\u5FC5\u987B\u5C06\u5176\u505C\u6B62\u3002
delete.instance.success=\u5DF2\u4ECE\u4E3B\u673A{1}\u4E2D\u5220\u9664\u5B9E\u4F8B{0}
delete.instance.failed=\u65E0\u6CD5\u4ECE{1}\u4E2D\u5220\u9664\u5B9E\u4F8B{0}
#delete.instance.config.failed: {0} server instance name, {1} is hostname
delete.instance.config.failed=\u5DF2\u4ECE{1}\u4E2D\u6210\u529F\u5220\u9664\u5B9E\u4F8B{0}\u7684\u6587\u4EF6, \u4F46\u65E0\u6CD5\u4ECE DAS \u914D\u7F6E\u4E2D\u5220\u9664\u8BE5\u5B9E\u4F8B\u3002
delete.instance.filesystem.failed=\u5DF2\u4ECE DAS \u914D\u7F6E\u4E2D\u6210\u529F\u5220\u9664\u5B9E\u4F8B{0}, \u4F46\u65E0\u6CD5\u4ECE\u8282\u70B9{1} ({2}) \u4E2D\u5220\u9664\u5B9E\u4F8B\u6587\u4EF6\u3002

restart.instance.command=\u91CD\u65B0\u542F\u52A8\u4E00\u4E2A\u6B63\u5728\u8FD0\u884C\u7684\u670D\u52A1\u5668\u5B9E\u4F8B
list.instances.badTarget=\u76EE\u6807{0}\u4E0D\u662F\u5B9E\u4F8B, \u96C6\u7FA4, \u57DF, \u8282\u70B9\u6216\u914D\u7F6E\u3002
list.instances.targetWithStandaloneOnly=target \u548C standaloneonly \u9009\u9879\u662F\u4E92\u65A5\u7684\u3002\u8BF7\u4EC5\u9009\u62E9\u5176\u4E2D\u4E00\u4E2A\u3002
list.instances.longAndNoStatus=long \u548C nostatus \u9009\u9879\u662F\u4E92\u65A5\u7684\u3002\u8BF7\u4EC5\u9009\u62E9\u5176\u4E2D\u4E00\u4E2A\u3002
list.instances.serverTarget=\u5DF2\u5C06\u76EE\u6807\u6307\u5B9A\u4E3A DAS\u3002\u8FD9\u662F\u975E\u6CD5\u64CD\u4F5C\u3002DAS \u4E0D\u662F\u5B9E\u4F8B\u670D\u52A1\u5668\u3002

Config.badConfigNames=\u5FC5\u987B\u6307\u5B9A\u6E90\u548C\u76EE\u6807\u914D\u7F6E\u3002
Config.noSuchConfig=\u914D\u7F6E{0}\u4E0D\u5B58\u5728\u3002
#Config.copyConfigError {0} is the message from the Exception that was thrown
Config.copyConfigError=\u590D\u5236\u914D\u7F6E\u65F6\u51FA\u9519, \u539F\u56E0\u4E3A{0}\u3002
Config.configExists=\u914D\u7F6E{0}\u5DF2\u5B58\u5728\u3002
Config.inUseConfig=\u914D\u7F6E{0}\u5DF2\u5728\u4F7F\u7528, \u4E0D\u5F97\u7531\u4EFB\u4F55\u670D\u52A1\u5668\u5B9E\u4F8B\u6216\u96C6\u7FA4\u5F15\u7528
Config.defaultConfig=\u65E0\u6CD5\u5220\u9664\u540D\u4E3A default-config \u7684\u9ED8\u8BA4\u914D\u7F6E\u6A21\u677F\u3002
Config.deleteConfigFailed=\u65E0\u6CD5\u5220\u9664\u914D\u7F6E{0}

create.instance.filesystem.failed=\u5DF2\u5728 DAS \u914D\u7F6E\u4E2D\u6210\u529F\u521B\u5EFA\u5B9E\u4F8B{0}, \u4F46\u65E0\u6CD5\u5728\u8282\u70B9{1} ({2}) \u4E0A\u521B\u5EFA\u5B9E\u4F8B\u6587\u4EF6\u3002

# Messages for connecting to SSH nodes
# 0=node name, 1=hostname
node.not.ssh=\u8BE5\u547D\u4EE4\u8981\u6C42\u4F7F\u7528 SSH \u8FDE\u63A5\u5230\u8282\u70B9{0} ({1}) \u4EE5\u4FBF\u5B8C\u6210\u5176\u64CD\u4F5C, \u4F46\u8282\u70B9{0}\u672A\u914D\u7F6E\u4E3A\u4F7F\u7528 SSH\u3002\u53EF\u4EE5\u4F7F\u7528 update-node-ssh \u5C06\u8282\u70B9{0}\u914D\u7F6E\u4E3A\u4F7F\u7528 SSH\u3002
# 0=node name, 1=hostname, 2=more info
node.ssh.bad.connect=\u8BE5\u547D\u4EE4\u8981\u6C42\u4F7F\u7528 SSH \u8FDE\u63A5\u5230\u4E3B\u673A{1}\u4EE5\u4FBF\u5B8C\u6210\u5176\u64CD\u4F5C, \u4F46\u65E0\u6CD5\u5EFA\u7ACB\u8FDE\u63A5:\n\n{2}\n\n\u8BF7\u786E\u8BA4\u5DF2\u5728\u7CFB\u7EDF\u4E0A\u6B63\u786E\u5730\u914D\u7F6E\u4E86 SSH, \u5373\u5728\u8282\u70B9{0}\u4E0A\u8BBE\u7F6E\u4E86\u9002\u5F53\u7684\u5C5E\u6027\u3002\u53EF\u4EE5\u4F7F\u7528 update-node-ssh \u6765\u4FEE\u6539\u8FD9\u4E9B\u5C5E\u6027\u3002\u6709\u5173\u8BE6\u7EC6\u4FE1\u606F, \u8BF7\u53C2\u9605 DAS \u65E5\u5FD7\u6587\u4EF6\u3002
# 0=hostname, 1=installdir, 2=more info
node.remote.tocomplete=\u8981\u5B8C\u6210\u6B64\u64CD\u4F5C, \u8BF7\u5728\u4E3B\u673A{0}\u4E0A\u7684 GlassFish \u5B89\u88C5\u4F4D\u7F6E{1}\u672C\u5730\u8FD0\u884C\u4EE5\u4E0B\u547D\u4EE4:\n\n{2}
# A command return a non-zero status
# 0=node, 1=node-host, 2=output from failed command, 3=command
node.command.failed=\u5728\u8282\u70B9{0} ({1}) \u4E0A\u6267\u884C\u547D\u4EE4 ''{3}'' \u5931\u8D25: {2}
node.command.failed.short=\u5728\u8282\u70B9{0} ({1}) \u4E0A\u6267\u884C\u547D\u4EE4\u5931\u8D25: {2}
node.command.failed.local.exception=\u65E0\u6CD5\u6267\u884C\u672C\u5730\u547D\u4EE4: {0}
node.command.failed.local.details=\u65E0\u6CD5\u6267\u884C\u672C\u5730\u547D\u4EE4 ''{1}'': {0}
# Failed to execute a command via SSH
# 0=node, 1=node-host, 2=command, 3=exception info, 4=SSH settings
node.command.failed.ssh.details=\u65E0\u6CD5\u5728\u8282\u70B9{0} ({1}) \u4E0A\u8FD0\u884C ''{2}'': {3}\u3002SSH \u8BBE\u7F6E: {4}

create.node.ssh.continue.force=\u7531\u4E8E\u4F7F\u7528\u4E86 --force, \u6B63\u5728\u7EE7\u7EED\u521B\u5EFA\u8282\u70B9\u3002
create.node.ssh.or.dcom.not.created=\u672A\u521B\u5EFA{0}\u8282\u70B9\u3002\u8981\u4F7F\u7528\u8FD9\u4E9B\u53C2\u6570\u5F3A\u5236\u521B\u5EFA\u8282\u70B9, \u8BF7\u4F7F\u7528 --force \u9009\u9879\u91CD\u65B0\u8FD0\u884C\u8BE5\u547D\u4EE4\u3002
create.node.ssh.install.success=\u5DF2\u5728{0}\u4E0A\u6210\u529F\u5B89\u88C5 GlassFish\u3002
delete.node.ssh.uninstall.failed=\u5DF2\u6210\u529F\u5220\u9664\u8282\u70B9{0}, \u4F46\u65E0\u6CD5\u5728{1}\u4E0A\u5378\u8F7D GlassFish\u3002\u8BF7\u624B\u52A8\u8FD0\u884C uninstall-node\u3002
delete.node.ssh.uninstall.success=\u5DF2\u5728{0}\u4E0A\u6210\u529F\u5378\u8F7D GlassFish\u3002
create.node.ssh.no.installdir=\u8282\u70B9\u4E0D\u5305\u542B\u5B89\u88C5\u76EE\u5F55\u3002
update.node.ssh.continue.force=\u7531\u4E8E\u4F7F\u7528\u4E86 --force, \u6B63\u5728\u7EE7\u7EED\u66F4\u65B0\u8282\u70B9\u3002
update.node.ssh.not.updated=\u672A\u66F4\u65B0\u8282\u70B9\u3002\u8981\u4F7F\u7528\u8FD9\u4E9B\u53C2\u6570\u5F3A\u5236\u66F4\u65B0\u8282\u70B9, \u8BF7\u4F7F\u7528 --force \u9009\u9879\u91CD\u65B0\u8FD0\u884C\u8BE5\u547D\u4EE4\u3002
update.node.config.missing.attribute=\u66F4\u65B0\u8282\u70B9{0}\u9700\u8981\u4F7F\u7528 {1} \u5C5E\u6027\u3002
update.node.config.defaultnode=\u65E0\u6CD5\u66F4\u65B0\u8282\u70B9{0}\u3002\u5B83\u662F\u5185\u7F6E\u7684\u672C\u5730\u4E3B\u673A\u8282\u70B9\u3002
node.ssh.invalid.params=\u8B66\u544A: \u67D0\u4E9B\u53C2\u6570\u4F3C\u4E4E\u65E0\u6548\u3002
ssh.bad.connect=\u65E0\u6CD5\u4F7F\u7528{1}\u8FDE\u63A5\u5230\u4E3B\u673A{0}\u3002
ssh.invalid.port=\u7AEF\u53E3\u53F7 {0} \u65E0\u6548\u3002
key.path.not.absolute=\u5BC6\u94A5\u6587\u4EF6\u8DEF\u5F84 {0} \u5FC5\u987B\u662F\u7EDD\u5BF9\u8DEF\u5F84\u3002
key.path.not.found=\u672A\u627E\u5230\u5BC6\u94A5\u6587\u4EF6{0}\u3002\u5BC6\u94A5\u6587\u4EF6\u8DEF\u5F84\u5FC5\u987B\u53EF\u4F9B DAS \u8BBF\u95EE\u3002
key.path.not.readable=\u5BC6\u94A5\u6587\u4EF6{0}\u5BF9 DAS \u7528\u6237 {1} \u4E0D\u53EF\u8BFB\u3002
no.such.password.alias=\u57DF\u4E2D\u672A\u627E\u5230\u53E3\u4EE4\u522B\u540D{0}\u3002
ping.node.failure=\u65E0\u6CD5\u9A8C\u8BC1\u4E0E\u8282\u70B9{0} ({1}) \u7684{2}\u8FDE\u63A5
ping.node.success=\u5DF2\u6210\u529F\u5EFA\u7ACB\u4E0E\u8282\u70B9{0} ({1}) \u7684{2}\u8FDE\u63A5
#ping.glassfish.version {0} is the installation directory path of the node.
#ping.glassfish.version {1} is the GlassFish version found on the node
ping.glassfish.version=\u5728{0}\u4E2D\u627E\u5230\u7684 GlassFish \u7248\u672C:\n{1}
unknown.host=\u672A\u77E5\u7684\u4E3B\u673A{0}
nodehost.required=\u5FC5\u987B\u8BBE\u7F6E\u8282\u70B9\u7684\u4E3B\u673A\u5C5E\u6027\u3002
#failed.to.run {0} is the actual command that was run, {1} is the name of the node.
failed.to.run=\u65E0\u6CD5\u5728{1}\u4E0A\u8FD0\u884C ''{0}''

failed.to.update.node=\u65E0\u6CD5\u66F4\u65B0\u8282\u70B9{0}\u3002

setup.ssh.null.sshpass=SSH \u53E3\u4EE4\u4E0D\u80FD\u4E3A\u7A7A\u503C\u3002
setup.ssh.unalias.error=\u65E0\u6CD5\u4ECE\u57DF\u5BC6\u94A5\u5E93\u83B7\u53D6\u6307\u5B9A\u53E3\u4EE4\u522B\u540D{0}\u7684 SSH \u53E3\u4EE4\u3002
setup.ssh.no.keyfile=\u7531\u4E8E\u672A\u627E\u5230\u5BC6\u94A5\u6587\u4EF6, \u4F7F\u7528 --generatekey \u9009\u9879\u751F\u6210\u65B0\u5BC6\u94A5\u3002
setup.ssh.invalid.path=\u5BC6\u94A5\u6587\u4EF6\u8DEF\u5F84 {0} \u5FC5\u987B\u662F\u7EDD\u5BF9\u8DEF\u5F84\u3002
setup.ssh.already.configured=\u5DF2\u7ECF\u4E3A{0}@{1}\u914D\u7F6E\u4E86 SSH \u516C\u5171\u5BC6\u94A5\u9A8C\u8BC1
setup.ssh.failed=SSH \u5BC6\u94A5\u8BBE\u7F6E\u5931\u8D25: {0}
setup.ssh.conn.failed=\u8FDE\u63A5\u9A8C\u8BC1\u5931\u8D25\u3002
setup.ssh.null.keypassphrase=\u65E0\u6CD5\u4ECE\u57DF\u5BC6\u94A5\u5E93\u83B7\u53D6 SSH \u5BC6\u94A5\u5BC6\u7801\u77ED\u8BED\u3002
## GetHealthCommand
get.health.called=\u5BF9\u96C6\u7FA4 "{0}" \u8C03\u7528\u4E86 get-health
get.health.cluster.name=\u8981\u4E86\u89E3\u5176\u5065\u5EB7\u72B6\u51B5\u4FE1\u606F\u7684\u96C6\u7FA4\u7684\u540D\u79F0\u3002
get.health.command=\u83B7\u53D6\u96C6\u7FA4\u4E2D\u5B9E\u4F8B\u7684\u5F53\u524D\u5065\u5EB7\u72B6\u51B5\u3002
get.health.no.instances=\u5728\u96C6\u7FA4{0}\u4E2D\u672A\u627E\u5230\u4EFB\u4F55\u5B9E\u4F8B\u3002
get.health.noCluster=\u96C6\u7FA4{0}\u4E0D\u5B58\u5728\u3002
get.health.noGMS=\u6CA1\u6709\u4E3A\u96C6\u7FA4{0}\u8FD0\u884C\u7EC4\u7BA1\u7406\u670D\u52A1\u3002\u672A\u8FD0\u884C GMS \u65F6\u65E0\u6CD5\u83B7\u53D6\u5B9E\u4F8B\u7684\u5065\u5EB7\u72B6\u51B5\u3002
get.health.noHistoryError=\u610F\u5916\u9519\u8BEF: \u627E\u4E0D\u5230 GMS \u5065\u5EB7\u72B6\u51B5\u5386\u53F2\u8BB0\u5F55\u3002
get.health.onlyRunsOnDas=\u8FD9\u662F\u4E00\u4E2A GlassFish Server \u5B9E\u4F8B, \u800C get-health \u53EA\u80FD\u5728 DAS \u4E0A\u8FD0\u884C\u3002

#get.health.instance.state.since -->  domain1 running since January 1, 2011
get.health.instance.state.since={0} {1}, \u81EA {2}

secure.admin.boot.errCreDir=\u65E0\u6CD5\u4E3A{0}\u521B\u5EFA\u76EE\u5F55\u3002\u6CA1\u6709\u66F4\u591A\u53EF\u7528\u4FE1\u606F\u3002
secure.admin.boot.errSetLastMod=\u65E0\u6CD5\u4E3A{0}\u8BBE\u7F6E\u4E0A\u6B21\u4FEE\u6539\u65E5\u671F\u3002\u6CA1\u6709\u66F4\u591A\u53EF\u7528\u4FE1\u606F\u3002
bad.dcom.ping=\u4F7F\u7528 DCOM \u8FDB\u884C\u8FDC\u7A0B\u8FDE\u63A5\u65F6\u51FA\u9519: {0}
dcom.no.remote.install=\u5728\u4F4D\u4E8E{1}\u7684\u4E3B\u673A{0}\u4E0A\u627E\u4E0D\u5230\u8FDC\u7A0B Glassfish \u5B89\u88C5
dcom.no.connection=\u65E0\u6CD5\u901A\u8FC7 DCOM \u8FDE\u63A5\u5230\u8FDC\u7A0B\u4E3B\u673A: {0}
internal.error=\u5185\u90E8\u9519\u8BEF: {0}
no.mkdir=\u65E0\u6CD5\u5728\u8FDC\u7A0B\u4E3B\u673A\u4E0A\u521B\u5EFA\u76EE\u5F55: {0}
dcom.connect.ok=\u5DF2\u901A\u8FC7 DCOM \u6210\u529F\u8FDE\u63A5\u5230{0}\u3002\u6B64\u5916, \u8FD8\u6210\u529F\n\\\u5728\u8FDC\u7A0B GlassFish \u5B89\u88C5\u4E0A\u8FD0\u884C\u7248\u672C\u547D\u4EE4\u3002
dcom.no.remote.access=\u65E0\u6CD5\u901A\u8FC7 DCOM \u8BBF\u95EE\u4F4D\u4E8E\u4E3B\u673A{1}\u4E0A\u7684\u6587\u4EF6{0}\u3002
dcom.no.remote.file={1}\u4E0A\u4E0D\u5B58\u5728\u8FDC\u7A0B\u6587\u4EF6{0}
dcom.no.remote.file.access=\u65E0\u6CD5\u8BBF\u95EE\u8FDC\u7A0B\u6587\u4EF6\u7CFB\u7EDF\u3002UAC \u662F\u5426\u6253\u5F00?
dcom.access.ok=\u5DF2\u6210\u529F\u4F7F\u7528 DCOM \u8BBF\u95EE\u4F4D\u4E8E{1}\u4E0A\u7684{0}\u3002
dcom.no.write=\u65E0\u6CD5\u4F7F\u7528 DCOM \u5C06{0}\u5199\u5165\u4F4D\u4E8E{2}\u4E0A\u7684{1}\u3002
dcom.write.ok=\u5DF2\u6210\u529F\u4F7F\u7528 DCOM \u5C06{0}\u5199\u5165\u4F4D\u4E8E{2}\u4E0A\u7684{1}\u3002
dcom.run.ok=\u5DF2\u6210\u529F\u4F7F\u7528 DCOM \u5728{0}\u4E0A\u8FD0\u884C\u6D4B\u8BD5\u811A\u672C\n\u811A\u672C\u4EC5\u8FD0\u884C DIR \u547D\u4EE4\u3002\u4E0B\u9762\u5217\u51FA\u4E86\u5728\u8FDC\u7A0B\u8BA1\u7B97\u673A\u4E0A\u8FD0\u884C dir \u547D\u4EE4\u8F93\u51FA\u7684\u524D\u51E0\u884C:\n\\{1}
dcom.no.run=\u65E0\u6CD5\u4F7F\u7528 DCOM \u5728{0}\u4E0A\u8FD0\u884C\u6D4B\u8BD5\u811A\u672C\u3002
validate.dcom.getbyname=\n\u5DF2\u6210\u529F\u5C06\u4E3B\u673A\u540D\u89E3\u6790\u4E3A: {0}
validate.dcom.connect=\u5DF2\u6210\u529F\u8FDE\u63A5\u5230\u4F4D\u4E8E\u4E3B\u673A{2}\u7684\u7AEF\u53E3{1}\u4E0A\u7684{0}\u3002
validate.dcom.no.connect=\u65E0\u6CD5\u8FDE\u63A5\u5230\u4F4D\u4E8E\u4E3B\u673A{2}\u7684\u7AEF\u53E3{1}\u4E0A\u7684{0}\u3002\n\u8FD9\u901A\u5E38\u662F\u7531\u4E8E\u9632\u706B\u5899\u963B\u585E\u7AEF\u53E3\u6216\u670D\u52A1\u5668\u670D\u52A1\u88AB\u505C\u6B62\u9020\u6210\u7684\u3002
dcom.no.wmi=\u65E0\u6CD5\u8FDE\u63A5\u5230\u4F4D\u4E8E{0}\u7684 WMI (Windows \u7BA1\u7406\u63A5\u53E3)\u3002
dcom.wmi.ok=\u5DF2\u6210\u529F\u8BBF\u95EE\u4F4D\u4E8E{0}\u7684 WMI (Windows \u7BA1\u7406\u63A5\u53E3)\u3002\u6709 {1} \u4E2A\u8FDB\u7A0B\u6B63\u5728{0}\u4E0A\u8FD0\u884C\u3002
dcom.wmi.procinfolegend=\u4E0B\u9762\u662F\u9488\u5BF9\u5177\u6709 WMI \u7684\u6240\u6709\u8FDC\u7A0B\u8FDB\u7A0B\u7684\u547D\u4EE4\u884C: \n
dcom.nopassword=\u7F3A\u5C11 Windows \u53E3\u4EE4\u3002\u5982\u679C\u4F7F\u7528\u7684\u662F asadmin, \u8BF7\u5728\u6587\u4EF6\u4E2D\u6307\u5B9A\u8FDC\u7A0B Windows \u53E3\u4EE4, \u5982\u4E0B\u6240\u793A:\nAS_ADMIN_WINDOWSPASSWORD=windows-password\n\u4F7F\u7528 --passwordfile (\u6216 -W) \u9009\u9879\u4E3A asadmin \u6307\u5B9A\u53E3\u4EE4\u6587\u4EF6\u7684\u8DEF\u5F84\u3002
dcom.no.installdir=\u8282\u70B9\u7684\u914D\u7F6E\u65E0\u6548\u3002installdir \u6CA1\u6709\u503C\u3002\u5C1D\u8BD5\u8FD0\u884C update-node-dcom \u5E76\u4E3A GlassFish \u6307\u5B9A\u5B89\u88C5\u76EE\u5F55\u3002
dcom.no.jdk=\u5728{0]\u4E0A\u7684\u8DEF\u5F84\u4E2D\u627E\u4E0D\u5230 javac\u3002\u9700\u8981\u5728\u8DEF\u5F84\u4E2D\u914D\u7F6E JDK\u3002
dcom.yes.jdk=\u786E\u4FDD JDK \u5DF2\u5B89\u88C5\u4E14\u5728{0}\u4E0A\u7684\u8DEF\u5F84\u4E2D\u53EF\u7528\u3002javac -version \u8FD4\u56DE\u4EE5\u4E0B\u4FE1\u606F: {1}
dcom.no.local=\u5DF2\u6210\u529F\u9A8C\u8BC1\u4E3B\u673A{0}\u4E0D\u662F\u6240\u8981\u6C42\u7684\u672C\u5730\u8BA1\u7B97\u673A\u3002
dcom.yes.local=\u4E3B\u673A{0}\u662F\u672C\u5730\u8BA1\u7B97\u673A\u3002DCOM \u4EC5\u7528\u4E8E\u5206\u5E03\u5F0F\u7CFB\u7EDF\u3002
