#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2010-2017 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

create.jvm.options=cria op\u00E7\u00F5es JVM na configura\u00E7\u00E3o Java ou elemento do gerador de perfil do arquivo domain.xml.
create.jvm.options.jvm_option_name=O lado esquerdo do sinal de igual (=) \u00E9 o nome da op\u00E7\u00E3o JVM. O lado direito do sinal de igual (=) \u00E9 o valor da op\u00E7\u00E3o JVM. Dois-pontos (:) \u00E9 o delimitador para v\u00E1rias op\u00E7\u00F5es.
create.jvm.options.usagetext=create-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
delete.jvm.options=remove op\u00E7\u00F5es JVM da configura\u00E7\u00E3o Java ou elementos do gerador de perfil do arquivo domain.xml.
delete.jvm.options.jvm_option_name=O lado esquerdo do sinal de igual (=) \u00E9 o nome da op\u00E7\u00E3o JVM. O lado direito do sinal de igual (=) \u00E9 o valor da op\u00E7\u00E3o JVM. Dois-pontos (:) \u00E9 o delimitador para v\u00E1rias op\u00E7\u00F5es.
delete.jvm.options.usagetext=delete-jvm-options\n\t[--target <target(default:server)>]\n\t[--profiler[=<profiler(default:false)>]]\n\t[-?|--help[=<help(default:false)>]]\n\t(jvm_option_name[=jvm_option_value])[:jvm_option_name[=jvm_option_name]]*
list.jvm.options=lista op\u00E7\u00F5es JVM na configura\u00E7\u00E3o Java ou elemento do gerador de perfil do arquivo domain.xml.
list.jvm.options.success=Listagem com sucesso das op\u00E7\u00F5es JVM configuradas e propriedades do sistema Java em determinado destino
list.jvm.options.failed=Falha ao listar op\u00E7\u00F5es JVM em determinado destino por este motivo: {0}
create.jvm.options.success=Cria\u00E7\u00E3o com sucesso de determinadas op\u00E7\u00F5es no destino especificado
delete.jvm.options.success=Dele\u00E7\u00E3o com sucesso de determinadas op\u00E7\u00F5es no destino especificado
delete.jvm.options.failed=Falha ao deletar determinadas op\u00E7\u00F5es no destino especificado pelo seguinte motivo,\nas op\u00E7\u00F5es atuais de configura\u00E7\u00E3o foram conservadas
create.profiler.first=Ainda n\u00E3o h\u00E1 nenhum gerador de perfil gerenciado. Crie primeiro um gerador de perfil.
created.message={0} Op\u00E7\u00E3o(\u00F5es) Criada(s)
no.option.created=N\u00E3o foi criada nenhuma op\u00E7\u00E3o JVM (talvez j\u00E1 exista)
deleted.message={0} Op\u00E7\u00E3o(\u00F5es) Deletada(s)
no.option.deleted=N\u00E3o foi deletada nenhuma op\u00E7\u00E3o JVM (talvez nunca houve alguma na configura\u00E7\u00E3o)
joe.exists=A op\u00E7\u00E3o JVM {0} j\u00E1 existe na configura\u00E7\u00E3o.
joe.invalid.start=A op\u00E7\u00E3o JVM {0} \u00E9 inv\u00E1lida porque n\u00E3o come\u00E7a com "-"
joe.invalid.cmd.syntax=A linha de comando:{0} n\u00E3o obedece \u00E0 sintaxe.\nEm um nutshell, todas as op\u00E7\u00F5es devem come\u00E7ar com "-", v\u00E1rias op\u00E7\u00F5es s\u00E3o separadas por ":".\nUm ":" na op\u00E7\u00E3o deve ser escapado com "\\".\nComo o shell interpreta argumentos do comando, certifique-se de coloc\u00E1-lo entre aspas.\n
soft.invalid.xmx=Parece que a op\u00E7\u00E3o JVM {0} fornecida representa um heap m\u00E1ximo inv\u00E1lido para a JVM. Certifique-se de que seja v\u00E1lida atrav\u00E9s de list-jvm-options.
soft.xmx.exists=A configura\u00E7\u00E3o j\u00E1 possui um tamanho m\u00E1ximo de heap especificado: {0}. Verifique a configura\u00E7\u00E3o java utilizando list-jvm-options.
soft.xmx.smaller.than.xms=Parece que o tamanho m\u00E1ximo de heap especificado {0} \u00E9 menor que o tamanho m\u00EDnimo de heap na configura\u00E7\u00E3o: {1}. A JVM pode n\u00E3o ser iniciada. Certifique-se de que esse valor \u00E9 v\u00E1lido utilizando list-jvm-options.
soft.invalid.xms=Parece que a op\u00E7\u00E3o JVM {0} fornecida representa um heap inicial inv\u00E1lido para a JVM. Certifique-se de que esse valor \u00E9 v\u00E1lido utilizando list-jvm-options.
soft.xms.exists=A configura\u00E7\u00E3o j\u00E1 tem um tamanho inicial de heap especificado: {0}. Verifique a configura\u00E7\u00E3o java utilizando list-jvm-options.
soft.xms.larger.than.xmx=Parece que o tamanho inicial de heap especificado {0} \u00E9 maior que o tamanho m\u00E1ximo de heap na configura\u00E7\u00E3o: {1}. A JVM pode n\u00E3o ser iniciada. Certifique-se de esse valor \u00E9 v\u00E1lido utilizando de list-jvm-options.
#Generate JVM Report
server.unreachable=O servidor {0} parece estar inalcan\u00E7\u00E1vel. Isso significa que n\u00E3o est\u00E1 em execu\u00E7\u00E3o ou existe erro interno de comunica\u00E7\u00E3o.
td.title=Dump Completo de Thread Java {0} {1} {2}
thread.no=N\u00FAmero de threads: {0}
daemon.thread.no=N\u00FAmero de threads de daemon: {0}
peak.thread.no=Contagem m\u00E1xima de threads em atividade desde que a m\u00E1quina virtual Java iniciou ou a contagem m\u00E1xima foi redefinida: {0}
thread.contention.monitoring.supported=O suporte ao monitoramento da disputa por threads est\u00E1 dispon\u00EDvel nesta JVM? [{0}]
thread.contention.monitoring.enabled=O monitoramento de disputa por threads est\u00E1 ativado? [{0}]. Se falso, algumas estat\u00EDsticas de sincroniza\u00E7\u00E3o de threads n\u00E3o est\u00E3o dispon\u00EDveis.
thread.cputime.supported=O suporte \u00E0 medi\u00E7\u00E3o de tempo da CPU para qualquer thread est\u00E1 dispon\u00EDvel nesta JVM? [{0}]
thread.cputime.enabled=A medi\u00E7\u00E3o de tempo da CPU est\u00E1 ativada? [{0}]. Se falso, as horas de execu\u00E7\u00E3o de threads n\u00E3o est\u00E3o dispon\u00EDveis para qualquer thread.
execution.info=Informa\u00E7\u00F5es sobre Execu\u00E7\u00E3o de Threads:
thread.title=Thread {0} ID do thread: {1} estado do thread: {2}
thread.waiting.on=Aguardando bloqueio: {0}
thread.suspended=Suspenso
thread.in.native=Em execu\u00E7\u00E3o em nativo
thread.stack.element=\t em: {0}
no.deadlock=Nenhum impasse encontrado
sync.info=Estat\u00EDstica de Sincroniza\u00E7\u00E3o de Threads:
thread.blocked.times=N\u00FAmero de vezes que este thread foi bloqueado (para inserir/inserir novamente um Monitor): {0}
thread.blocked.totaltime=Total (aproximado) de vezes que o thread permaneceu no estado BLOQUEADO: {0} milissegundos desde que o monitoramento de disputa por threads foi ativada pela \u00FAltima vez.
thread.total.cpu.time=Tempo total da CPU para este thread: {0} segundos {1} nanossegundos.
thread.cpu.user.time=Tempo da CPU no n\u00EDvel do usu\u00E1rio para este thread: {0} segundos {1} nanossegundos.
wait.times=N\u00FAmero de vezes que este thread aguardou uma notifica\u00E7\u00E3o (isto \u00E9, estava no estado AGUARDANDO ou AGUARDANDO_VEZES): {0}
lock.owner.details=Este thread est\u00E1 bloqueado e aguarda o bloqueio no momento pertencente ao thread nomeado: {0}, ID: {1}
monitor.info=Monitores de objeto mantidos ou solicitados no momento por este thread: {0}
ownable.sync.info=Sincronizadores poss\u00EDveis propriet\u00E1rios (por exemplo, ReentrantLock e ReentrantReadWriteLock) mantidos por este thread: {0}
deadlocks.found=Estes threads estavam em um impasse:
m2hms={0} Horas {1} Minutos {2} Segundos
m2sms={0} Segundos {1} Milissegundos
uptime=Tempo de atividade da m\u00E1quina virtual Java: {0}
memory.pool.name=Nome do Pool de Mem\u00F3ria: {0}
memory.usage.init=Mem\u00F3ria que a m\u00E1quina virtual Java solicitou inicialmente ao sistema operacional: {0} Bytes
memory.usage.comm=Garantia de mem\u00F3ria que a m\u00E1quina virtual Java receber\u00E1 do sistema operacional: {0} bytes
memory.usage.max=Mem\u00F3ria m\u00E1xima que a m\u00E1quina virtual Java pode obter do sistema operacional: {0} bytes. Observe que isso n\u00E3o \u00E9 garantido.
memory.usage.used=Mem\u00F3ria que a m\u00E1quina virtual Java usa neste momento: {0} bytes
gc.name=Nome do coletor de lixo: {0}
gc.numcol=N\u00FAmero de coletas ocorridas usando este coletor de lixo: {0} bytes
gc.coltime=Hora da Coleta de Lixo: {0}
heap.mem.usage=Utiliza\u00E7\u00E3o de Mem\u00F3ria Heap:
nonheap.mem.usage=Utiliza\u00E7\u00E3o de Mem\u00F3ria N\u00E3o Heap:
obj.fin.pending=N\u00FAmero aproximado de objetos para os quais a finaliza\u00E7\u00E3o est\u00E1 pendente: {0}
classloading.info=Carregando e descarregando classes na m\u00E1quina virtual Java:
classes.loaded=N\u00FAmero de classes carregadas no momento na m\u00E1quina virtual Java: {0}
classes.total=N\u00FAmero de classes carregadas na m\u00E1quina virtual Java desde a inicializa\u00E7\u00E3o: {0}
classes.unloaded=N\u00FAmero de classes descarregadas da m\u00E1quina virtual Java: {0}
complilation.info=Informa\u00E7\u00F5es de compila\u00E7\u00E3o Just-in-time (JIT) na m\u00E1quina virtual Java:
compilation.monitor.status=Monitoramento de compila\u00E7\u00E3o na m\u00E1quina virtual Java permitida: {0}
jit.compilar.name=Nome do compilador Just-in-time (JIT): {0}
compilation.time=Tempo total gasto na compila\u00E7\u00E3o: {0}
os.info=Informa\u00E7\u00F5es do Sistema Operacional:
os.name=Nome do sistema operacional: {0}
os.arch=Nome da arquitetura bin\u00E1ria do sistema operacional: {0}, Vers\u00E3o: {1}
os.nproc=N\u00FAmero de processadores dispon\u00EDveis no sistema operacional: {0}
os.load=Carga de sistema nos processadores dispon\u00EDveis no \u00FAltimo minuto: {0}. (Soma de entidades em execu\u00E7\u00E3o e execut\u00E1veis em fila por minuto)
rt.info=Informa\u00E7\u00F5es gerais sobre Java Runtime Environment da VM: {0}
rt.bcp=BootClassPath de JRE: {0}
rt.cp=ClassPath de JRE: {0}
rt.libpath=Caminho da Biblioteca Nativa de JRE: {0}
rt.nvv=Nome de JRE: {0} Fornecedor: {1} Vers\u00E3o: {2}
rt.sysprops=Lista de propriedades de sistema da m\u00E1quina virtual Java:
summary.title=**** M\u00E1quina virtual Java [Nome da Inst\u00E2ncia do Servidor de Aplica\u00E7\u00F5es: {0}] Resumo ****
class.info.title=**** Estat\u00EDstica de classe da m\u00E1quina virtual Java [Nome da inst\u00E2ncia do servidor de aplica\u00E7\u00F5es: {0}] ****
thread.dump.title=**** Dump de Thread da M\u00E1quina Virtual Java [Nome da inst\u00E2ncia do Servidor de Aplica\u00E7\u00F5es: {0}] ****
memory.info.title=**** Informa\u00E7\u00F5es sobre mem\u00F3ria (Perm Gen, Eden Space etc.) da m\u00E1quina virtual Java [Nome da inst\u00E2ncia do servidor de aplica\u00E7\u00F5es: {0}] ****
#logging information
logging.config.file=Arquivo efetivo de propriedades de log: [{0}]. Se nulo, indica o arquivo JRE padr\u00E3o.
reg.loggers=N\u00FAmero de loggers atualmente registrados na JVM: [{0}]. Detalhes a seguir:
logger.details.1=Se o n\u00EDvel estiver em branco, ele \u00E9 herdado do logger pai
logger.details.2=O logger pai \u00E9 logger pai mais pr\u00F3ximo existente
list.of.loggers=Nome do Logger | N\u00EDvel de Log | Nome do Logger Pai
create.threadpool.duplicate=O Pool de Threads {0} j\u00E1 existe.
create.threadpool.failed=Falha ao criar: {0} por causa de: {1}
create.threadpool.deprecated.workqueues=Sintaxe obsoleta: a op\u00E7\u00E3o --workqueues est\u00E1 obsoleta para o comando create-threadpool.
list.thread.pools.failed=Falha ao listar Pool de Threads por causa de: {0}
delete.threadpool.notexists=O Pool de Threads {0} n\u00E3o existe.
delete.threadpool.failed=Falha ao deletar Pools de Threads por causa de: {0}
attach.wrong.commandinstance.id=O job com o id {0} n\u00E3o existe.
attach.finished=O comando {0} foi executado com o status {1}.
unable.to.get.ManagedJobConfig=N\u00E3o \u00E9 poss\u00EDvel obter o bean ManagedJobConfig.
failed.to.configure.ManagedJobConfig=Falha ao configurar o bean ManagedJobConfig

getPayload.wrong.commandinstance.id=O job com o id {0} n\u00E3o existe.
getPayload.nopayload=O payload de sa\u00EDda n\u00E3o existe.
getPayload.unsupported=O tipo de payload n\u00E3o \u00E9 suportado. N\u00E3o \u00E9 poss\u00EDvel fazer download dos dados.
